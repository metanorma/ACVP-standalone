<?xml version="1.0" encoding="UTF-8"?>
<nist-standard xmlns="https://www.metanorma.org/ns/nist" type="semantic" version="2.0.5">
<bibdata type="standard">
<title language="en" format="text/plain" type="main">ACVP Symmetric Block Cipher Algorithm JSON Specification</title>

<title language="en" format="text/plain" type="short-title">ACVP Symmetric Block Cipher Algorithm JSON Specification</title>
<uri type="email">algotest@list.nist.gov</uri><uri type="doi">https://doi.org/10.6028/NIST.CSRC.AVCP.SYMMETRIC</uri><docidentifier type="NIST">ACVP SYMMETRIC Revision 1</docidentifier><docidentifier type="nist-long">Automated Cryptographic Validation Protocol SYMMETRIC Revision 1</docidentifier><docidentifier type="nist-mr">NIST.CSRC.ACVP.SYMMETRIC.r-1.eng</docidentifier><docnumber>SYMMETRIC</docnumber><date type="issued"><on>2020-12-10</on></date><contributor><role type="author"/><person>
<name><completename>Christopher Celi</completename></name>
<affiliation><organization>
<name>Information Technology Laboratory</name>
<subdivision>Computer Security Division</subdivision></organization></affiliation></person></contributor><contributor><role type="author"/><person>
<name><completename>Russell Hammett</completename></name>
<affiliation><organization>
<name>HII Technical Solutions Division</name>
</organization></affiliation></person></contributor><contributor><role type="publisher"/><organization>
<name>National Institute of Standards and Technology</name>
<subdivision>Computer Security Division, Information Technology Laboratory</subdivision></organization></contributor><edition>Revision 1</edition><language>en</language><script>Latn</script><abstract><p>This document defines the JSON schema for testing Symmetric Block Cipher implementations with the ACVP specification.</p>
</abstract><status><stage>final</stage><substage>active</substage></status><copyright><from>2020</from><owner><organization>
<name>National Institute of Standards and Technology</name>
</organization></owner></copyright><series type="main">
<title>NIST Cybersecurity Technical Specification</title>
<abbreviation>NIST CSTS</abbreviation></series><series type="secondary">
<title>Automated Cryptographic Validation Protocol</title>
<abbreviation>ACVP</abbreviation></series><keyword>ACVP</keyword><keyword>cryptography</keyword><ext><doctype>standard</doctype></ext></bibdata>
<boilerplate>


  <legal-statement>

<clause id="authority3">
<title>Disclaimer</title>
<p id="_863aa6ce-5a57-69b6-7fbf-9ed44a41c5ea">Any mention of commercial products or reference to commercial organizations is for information only; it does not imply recommendation or endorsement by NIST, nor does it imply that the products mentioned are necessarily the best available for the purpose.</p>
</clause>

<clause id="authority3a">
  <title>Additional Information</title>
  <p id="_c686fd53-3de8-7756-9855-01ef6116c4ac">For additional information on NIST’s Cybersecurity programs, projects and publications, visit the <link target="https://csrc.nist.gov">Computer Security Resource Center</link>. Information on other efforts at <link target="https://www.nist.gov">NIST</link> and in the <link target="https://www.nist.gov/itl">Information Technology Laboratory</link> (ITL) is also available.</p>
</clause>
</legal-statement>

<feedback-statement>
  

<clause id="authority5">
  <p align="center" id="_3c964232-2209-46b9-23ff-8d9dbf50f7e3"><strong>Comments on this publication may be submitted to:</strong></p>

<p align="center" id="_fd3e950b-c15e-6309-a933-da7ca17fced9">National Institute of Standards and Technology <br/>
  Attn: Computer Security Division, Information Technology Laboratory <br/>
  100 Bureau Drive (Mail Stop 8930) Gaithersburg, MD 20899-8930 <br/>
  
  Email: <link target="mailto:algotest@list.nist.gov"/>
  </p>

<p align="center" id="_98da11c8-716c-a4a5-0c72-942c806716f3">All comments are subject to release under the Freedom of Information Act (FOIA).</p>
</clause>
</feedback-statement>
</boilerplate>
<preface><abstract id="_abstract"><title>Abstract</title><p id="_f73d2bd1-b589-ce7f-d9ee-d94d0333acbb">This document defines the JSON schema for testing Symmetric Block Cipher implementations with the ACVP specification.</p>
</abstract><acknowledgements id="acknowledgements" obligation="informative"><title>Acknowledgements</title><p id="_8c2b135b-158a-a4c3-d877-200b1809b9d4">The authors thank John Foley for putting together an early draft of this specification.</p>
</acknowledgements></preface><sections>
<clause id="introduction" obligation="normative">
<title>Introduction</title>
<p id="_51f80278-b24a-4db4-94a0-44d87656a85f">The Automated Crypto Validation Protocol (ACVP) defines a mechanism to automatically verify the cryptographic implementation of a software or hardware crypto module. The ACVP specification defines how a crypto module communicates with an ACVP server, including crypto capabilities negotiation, session management, authentication, vector processing and more. The ACVP specification does not define algorithm specific JSON constructs for performing the crypto validation. A series of ACVP sub-specifications define the constructs for testing individual crypto algorithms. Each sub-specification addresses a specific class of crypto algorithms. This sub-specification defines the JSON constructs for testing Symmetric Block Cipher implementations using ACVP.</p>

<p id="_82c6a466-577f-5695-100b-e4ef572936ac">The ACVP server performs a set of tests on the block ciphers in order to assess the correctness and robustness of the implementation. A typical ACVP validation session would require multiple tests to be performed for every supported cryptographic algorithm, such as AES-ECB, AES-CBC, AES-CTR, AES-GCM, TDES-CBC, TDES-CTR, etc.</p>

<p id="_b6557fe4-dd8e-10ab-48e9-e85dbc6014d8">Unresolved directive in draft-celi-acvp-symmetric.adoc — include::/__w/ACVP-standalone/ACVP-standalone/src/common/common-sections/02-conventions.adoc[]</p>
</clause>

<clause id="supported_algs" obligation="normative">
<title>Supported Block Cipher Algorithms</title>
<p id="_49625575-730a-692d-44e2-a6a35628bd8c">The following block cipher algorithm and test revision pairs <strong>MAY</strong> be advertised by the ACVP compliant cryptographic module (algorithm / revision):</p>

<ul id="_2a07d8ad-80a4-018d-ad78-a672dec765ab"><li><p id="_becae065-c5cb-5c97-7c6b-7267c86ec54d">ACVP-AES-ECB / “1.0”</p>
</li>
<li><p id="_e7fba4c1-6150-c40a-1335-d6384344e1be">ACVP-AES-CBC / “1.0”</p>
</li>
<li><p id="_5b7dac53-956c-05dd-91be-5a01eb61962b">ACVP-AES-CBC-CS1 / “1.0”</p>
</li>
<li><p id="_9c652acb-63c9-55c1-f899-5a88a94dee00">ACVP-AES-CBC-CS2 / “1.0”</p>
</li>
<li><p id="_c8097ccf-8f7a-cca1-0f9a-0c7d0ddf2a29">ACVP-AES-CBC-CS3 / “1.0”</p>
</li>
<li><p id="_e423c7b6-9e24-2bbc-2a76-1cafb7377a13">ACVP-AES-OFB / “1.0”</p>
</li>
<li><p id="_82a0b22e-6219-930e-3a53-4e8bd6461e0c">ACVP-AES-CFB1 / “1.0”</p>
</li>
<li><p id="_5c8688f6-1ee2-d84f-b631-16953ba162b8">ACVP-AES-CFB8 / “1.0”</p>
</li>
<li><p id="_3725a31a-2765-ef34-9456-595f72d73667">ACVP-AES-CFB128 / “1.0”</p>
</li>
<li><p id="_e309e704-3ad6-0aa0-add8-df6e77fc7666">ACVP-AES-CTR / “1.0”</p>
</li>
<li><p id="_346f44f8-0850-8d90-51af-bedd45665020">ACVP-AES-FF1 / “1.0”</p>
</li>
<li><p id="_d3b8864c-73b3-ebc1-4815-aeadcc716626">ACVP-AES-FF3-1 / “1.0”</p>
</li>
<li><p id="_6a1e9395-0ecf-b9ad-a4b3-31a0bdde308d">ACVP-AES-GCM / “1.0”</p>
</li>
<li><p id="_73adcc92-cbd3-2dbf-2e0f-2b01478d2b69">ACVP-AES-GCM-SIV / “1.0”</p>
</li>
<li><p id="_d665f3f1-0d76-e578-02e3-1bcdc731eb43">ACVP-AES-XPN / “1.0”</p>
</li>
<li><p id="_013103ac-d03c-f645-a3ac-4c3bdecc8b57">ACVP-AES-CCM / “1.0”</p>
</li>
<li><p id="_0d16c2b8-b3d0-5f48-bce0-5bd53dae5419">ACVP-AES-XTS / “1.0”</p>
</li>
<li><p id="_d80430b0-5ec1-3aff-04b4-2f9fdd232a0e">ACVP-AES-XTS / “2.0”</p>
</li>
<li><p id="_ae428e9c-6194-7e8a-99e1-77536a394665">ACVP-AES-KW / “1.0”</p>
</li>
<li><p id="_43a762bd-841c-e32f-1e96-5005f642f787">ACVP-AES-KWP / “1.0”</p>
</li>
<li><p id="_2099dd00-8247-9fdc-6a27-635cfb1414b4">ACVP-TDES-ECB / “1.0”</p>
</li>
<li><p id="_8fff377f-48b8-8fc1-a115-b3c2bfb8c13f">ACVP-TDES-CBC / “1.0”</p>
</li>
<li><p id="_7407bff0-5584-99f6-2dcc-4d3092503f22">ACVP-TDES-CBCI / “1.0”</p>
</li>
<li><p id="_4a4a13b2-e4d4-2771-7af4-fbd706cdb1b7">ACVP-TDES-CFB1 / “1.0”</p>
</li>
<li><p id="_aab51161-8e46-8f9f-7029-d863b93ac85d">ACVP-TDES-CFB8 / “1.0”</p>
</li>
<li><p id="_263d5990-ad51-d795-9d72-cddb371f7360">ACVP-TDES-CFB64 / “1.0”</p>
</li>
<li><p id="_6bda36ae-d1a4-741a-673f-f6bac7ce3c5d">ACVP-TDES-CFBP1 / “1.0”</p>
</li>
<li><p id="_e22ba52e-a098-4eba-89f9-ab58ef8d6390">ACVP-TDES-CFBP8 / “1.0”</p>
</li>
<li><p id="_09d2b7c3-6357-d197-cc8a-14056041d2c5">ACVP-TDES-CFBP64 / “1.0”</p>
</li>
<li><p id="_5aeadcb2-af26-4a3a-977e-f9b66f950b8b">ACVP-TDES-OFB / “1.0”</p>
</li>
<li><p id="_b026932f-8554-9650-36ec-fba3e3f803f8">ACVP-TDES-OFBI / “1.0”</p>
</li>
<li><p id="_c7e4a285-a602-9c89-d078-b211d0f9cc51">ACVP-TDES-CTR / “1.0”</p>
</li>
<li><p id="_5f406ae5-5648-efdd-0c98-0de59c1c4fd9">ACVP-TDES-KW / “1.0”</p>
</li>
</ul>

<p id="_e038a239-461d-e147-4ec3-11f194814cee">Multiple testing revisions of the same algorithm allow a validation server to improve testing over time without breaking functionality of existing clients. In the case of symmetric block cipher algorithms, multiple revisions of ACVP-AES-XTS exist and <strong>MAY</strong> individually be provided by a server. The revision numbers of “1.0” and “2.0” indicate a progression among the tests. In this case, the “2.0” tests are fully capable of running the “1.0” implementation of ACVP-AES-XTS. More discussion can be found within <xref target="cap_ex"/>.</p>

<clause id="conformances" obligation="normative">
<title>Supported Conformances</title>
<p id="_65543c88-ecab-28b7-f368-3d1307133d61">The following conformances <strong>MAY</strong> be advertised by the ACVP compliant cryptographic module:</p>

<ul id="_d6c921de-5575-3697-ba8c-99c3f8fd176e"><li><p id="_c03bf814-da55-aec4-e870-5f56512b7899">ACVP-AES-CCM conformance “ECMA” which expands upon AES-CCM and adheres to <eref type="inline" bibitemid="ECMA" citeas="ECMA"/>. This conformance changes the supported sizes to accomodate the specific sizes required by the use-case of the algorithm.</p>
</li>
<li><p id="_4274577e-f9a6-508b-8f7d-5c151411bed9">ACVP-AES-CTR conformance “RFC3686”.  This conformance ensures the IV is generated with the LSB[32] of the IV representing the integer “1”.  This conformance also requires the additional registration property of “ivGenMode” which states if the IUT does external or internal IV generation.</p>
</li>
</ul>
</clause>
</clause>

<clause id="testtypes" obligation="normative">
<title>Test Types and Test Coverage</title>
<p id="_09ec9229-82a2-36cd-2b10-8c45f4c2fcfd">This section describes the design of the tests used to validate implementations of block cipher algorithms.</p>

<clause id="_test_types" obligation="normative">
<title>Test Types</title>
<p id="_ee3da45f-0488-cd9b-3a72-0b41263fefab">There are three types of tests for block ciphers: functional tests, Monte Carlo tests and counter tests. Each has a specific value to be used in the testType field. The testType field definitions are:</p>

<ul id="_ba241b85-74a8-b17c-ca8a-cc85d88eda35"><li><p id="_7691e1b9-ac6a-b5c8-b922-1a25bbfc21b8">“AFT” — Algorithm Functional Test. These tests can be processed by the client using a normal ‘encrypt’ or ‘decrypt’ operation. AFTs cause the implementation under test to exercise normal operations on a single block, multiple blocks, or (where applicable) partial blocks. In some cases random data is used, in others, static, predetermined tests are provided. The functional tests of the block cipher are designed to verify that the logical components of the cipher (GFSbox, KeySbox, block chaining etc.) are operating correctly.</p>
</li>
<li><p id="_b3c09540-a464-bfba-182f-7c2bba4cc42a">“MCT” — Monte Carlo Test. These tests exercise the implementation under test under strenuous circumstances. The implementation under test must process the test vectors according to the correct algorithm and mode in this document. MCTs can help detect potential memory leaks over time, and problems in allocation of resources, addressing variables, error handling and generally improper behavior in response to random inputs. Not every algorithm and mode combination has an MCT.
See <xref target="MC_test"/> for implementation details.</p>
</li>
<li><p id="_c9fc08a5-1c17-e8f6-4972-11e6ca5a990a">“CTR” — Counter Mode Test. Counter tests are specifically for counter modes (AES-CTR and TDES-CTR) and require an implementation under test to exercise their counter mechanism. The server will send a long message to the client for encryption or decryption and back-compute the IVs used by the implementation under test. These IVs are then verified for uniqueness and an increasing (or decreasing) nature. The client processes these tests as normal AFTs. The different mode is highlighted here to signify the difference on the server side for processing.</p>
</li>
</ul>

<clause id="MC_test" obligation="normative">
<title>Monte Carlo tests for block ciphers</title>
<p id="_482cd596-ef58-d632-a6fe-997a482f77c8">The MCTs start with an initial condition (plaintext/ciphertext, key, and optional, or maybe multiple IVs) and perform a series of chained computations. For modes that use an IV, the IV is used in the beginning of each pseudorandom process. The IV is implicitly advanced according to the block cipher mode in use. There are separate rounds of MCT for encryption and decryption. Because some block cipher modes rely on an IV and perform calculations differently from other modes, there are specific definitions of MCT for many of the block cipher modes.</p>

<clause id="AES-ECB-MCT" obligation="normative">
<title>AES Monte Carlo Test — ECB mode</title>
<clause id="AES-ECB-MCT-ENC" obligation="normative">
<title>Encrypt</title>
<p id="_07c1b454-b122-8343-cece-12d82487a10c">The initial condition for the test is the tuple (KEY, PT) set to some values.</p>

<p id="_0b439473-f9fd-a28f-2860-f14b43f26a77">The algorithm is shown in <xref target="xml_figureMCTECB"/>.</p>

<sourcecode id="xml_figureMCTECB" lang="code">
<name>AES-ECB Monte Carlo Test</name>
Key[0] = KEY
PT[0] = PT
For i = 0 to 99
    Output Key[i]
    Output PT[0]
    For j = 0 to 999
        CT[j] = AES_ECB_ENCRYPT(Key[i], PT[j])
        PT[j+1] = CT[j]
    Output CT[j]
    AES_KEY_SHUFFLE(Key, CT)
    PT[0] = CT[j]</sourcecode>

</clause>

<clause id="AES-ECB-MCT-DEC" obligation="normative">
<title>Decrypt</title>
<p id="_4a48d055-b7e8-2ad7-45d7-490d62f0cbc3">The pseudocode for decryption can be obtained by replacing all PT’s in the encryption pseudocode with CT’s and all CT’s in the encryption pseudocode with PT’s. As well, replace the encrypt operation with the corresponding decrypt operation.</p>
</clause>
</clause>

<clause id="AES-CBC-MCT" obligation="normative">
<title>AES Monte Carlo Test — CBC mode</title>
<clause id="AES-CBC-MCT-ENC" obligation="normative">
<title>Encrypt</title>
<p id="_ff30e438-35ad-fe1e-5783-944c1b6695f8">The initial condition for the test is the tuple (KEY, IV, PT) set to some values.</p>

<p id="_2af1c95a-827e-7e5a-bcfc-57ee9bbbaba2">The algorithm is shown in <xref target="xml_figureMCTCBC"/>.</p>

<sourcecode id="xml_figureMCTCBC" lang="code">
<name>AES-CBC Monte Carlo Test</name>
Key[0] = KEY
IV[0] = IV
PT[0] = PT
For i = 0 to 99
    Output Key[i]
    Output IV[i]
    Output PT[0]
    For j = 0 to 999
        If ( j=0 )
            CT[j] = AES_CBC_ENCRYPT(Key[i], IV[i], PT[j])
            PT[j+1] = IV[i]
        Else
            CT[j] = AES_CBC_ENCRYPT(Key[i], PT[j])
            PT[j+1] = CT[j-1]
    Output CT[j]
    AES_KEY_SHUFFLE(Key, CT)
    IV[i+1] = CT[j]
    PT[0] = CT[j-1]</sourcecode>

</clause>

<clause id="AES-CBC-MCT-DEC" obligation="normative">
<title>Decrypt</title>
<p id="_58bc9700-a8cf-6c75-9dcb-cee69e0f0cfe">The pseudocode for decryption can be obtained by replacing all PT’s in the encryption pseudocode with CT’s and all CT’s in the encryption pseudocode with PT’s. As well, replace the encrypt operation with the corresponding decrypt operation.</p>
</clause>
</clause>

<clause id="AES-OFB-MCT" obligation="normative">
<title>AES Monte Carlo Test — OFB mode</title>
<clause id="AES-OFB-MCT-ENC" obligation="normative">
<title>Encrypt</title>
<p id="_ed3a09fe-c1b5-5ca0-cf1b-17a3bf253f24">The initial condition for the test is the tuple (KEY, IV, PT) set to some values.</p>

<p id="_1575cb09-c52a-a4c9-0e14-02896153570f">The algorithm is shown in <xref target="xml_figureMCTOFB"/>.</p>

<sourcecode id="xml_figureMCTOFB" lang="code">
<name>AES-OFB Monte Carlo Test</name>
Key[0] = Key
IV[0] = IV
PT[0] = PT
For i = 0 to 99
    Output Key[i]
    Output IV[i]
    Output PT[0]
    For j = 0 to 999
        If ( j=0 )
            CT[j] = AES_OFB_ENCRYPT(Key[i], IV[i], PT[j])
            PT[j+1] = IV[i]
        Else
            CT[j] = AES_OFB_ENCRYPT(Key[i], PT[j])
            PT[j+1] = CT[j-1]
    Output CT[j]
    AES_KEY_SHUFFLE(Key, CT)
    IV[i+1] = CT[j]
    PT[0] = CT[j-1]</sourcecode>

</clause>

<clause id="AES-OFB-MCT-DEC" obligation="normative">
<title>Decrypt</title>
<p id="_7cec3456-6a33-9174-a0bd-d8c6428d7f62">The pseudocode for decryption can be obtained by replacing all PT’s in the encryption pseudocode with CT’s and all CT’s in the encryption pseudocode with PT’s. As well, replace the encrypt operation with the corresponding decrypt operation.</p>
</clause>
</clause>

<clause id="AES-CFB1-MCT" obligation="normative">
<title>AES Monte Carlo Test — CFB1 mode</title>
<clause id="AES-CFB1-MCT-ENC" obligation="normative">
<title>Encrypt</title>
<p id="_c9a22ca7-594e-9113-5233-83d81b2c30c3">The initial condition for the test is the tuple (KEY, IV, PT) set to some values.</p>

<p id="_6a5c09ef-378f-3be8-04c0-23aa2ddd125b">The algorithm is shown in <xref target="xml_figureMCTCFB1"/>.</p>

<sourcecode id="xml_figureMCTCFB1" lang="code">
<name>AES-CFB1 Monte Carlo Test</name>
Key[0] = Key
IV[0] = IV
PT[0] = PT
For i = 0 to 99
    Output Key[i]
    Output IV[i]
    Output PT[0]
    For j = 0 to 999
        If ( j=0 )
            CT[j] = AES_CFB1_ENCRYPT(Key[i], IV[i], PT[j])
            PT[j+1] = BitJ(IV[i])
        Else
            CT[j] = AES_CFB1_ENCRYPT(Key[i], PT[j])
            If ( j&lt;128 )
                PT[j+1] = BitJ(IV[i])
            Else
                PT[j+1] = CT[j-128]
    Output CT[j]
    If ( keylen = 128 )
        Key[i+1] = Key[i] xor (CT[j-127] || CT[j-126] || ... || CT[j])
    If ( keylen = 192 )
        Key[i+1] = Key[i] xor (CT[j-191] || CT[j-190] || ... || CT[j])
    If ( keylen = 256 )
        Key[i+1] = Key[i] xor (CT[j-255] || CT[j-254] || ... || CT[j])
    IV[i+1] = (CT[j-127] || CT[j-126] || ... || CT[j])
    PT[0] = CT[j-128]</sourcecode>

</clause>

<clause id="AES-CFB1-MCT-DEC" obligation="normative">
<title>Decrypt</title>
<p id="_50f9686c-252c-6ae6-405f-4819ac4cfb88">The pseudocode for decryption can be obtained by replacing all PT’s in the encryption pseudocode with CT’s and all CT’s in the encryption pseudocode with PT’s. As well, replace the encrypt operation with the corresponding decrypt operation.</p>
</clause>
</clause>

<clause id="AES-CFB8-MCT" obligation="normative">
<title>AES Monte Carlo Test — CFB8 mode</title>
<clause id="AES-CFB8-MCT-ENC" obligation="normative">
<title>Encrypt</title>
<p id="_8996fcfb-4a55-8f08-fdd7-e4535dc98a17">The initial condition for the test is the tuple (KEY, IV, PT) set to some values.</p>

<p id="_02b21252-9786-0098-f269-ec03a8256a55">The algorithm is shown in <xref target="xml_figureMCTCFB8"/>.</p>

<sourcecode id="xml_figureMCTCFB8" lang="code">
<name>AES-CFB8 Monte Carlo Test</name>
Key[0] = Key
IV[0] = IV
PT[0] = PT
For i = 0 to 99
    Output Key[i]
    Output IV[i]
    Output PT[0]
    For j = 0 to 999
        If ( j=0 )
            CT[j] = AES_CFB8_ENCRYPT(Key[i], IV[i], PT[j])
            PT[j+1] = ByteJ(IV[i])
        Else
            CT[j] = AES_CFB8_ENCRYPT(Key[i], PT[j])
            If ( j&lt;16 )
                PT[j+1] = ByteJ(IV[i])
            Else
                PT[j+1] = CT[j-16]
    Output CT[j]
    If ( keylen = 128 )
        Key[i+1] = Key[i] xor (CT[j-15] || CT[j-14] || ... || CT[j])
    If ( keylen = 192 )
        Key[i+1] = Key[i] xor (CT[j-23] || CT[j-22] || ... || CT[j])
    If ( keylen = 256 )
        Key[i+1] = Key[i] xor (CT[j-31] || CT[j-30] || ... || CT[j])
    IV[i+1] = (CT[j-15] || CT[j-14] || ... || CT[j])
    PT[0] = CT[j-16]</sourcecode>

</clause>

<clause id="AES-CFB8-MCT-DEC" obligation="normative">
<title>Decrypt</title>
<p id="_448e94c6-ec8d-4b5a-9be2-76cd754f9d2d">The pseudocode for decryption can be obtained by replacing all PT’s in the encryption pseudocode with CT’s and all CT’s in the encryption pseudocode with PT’s. As well, replace the encrypt operation with the corresponding decrypt operation.</p>
</clause>
</clause>

<clause id="AES-CFB128-MCT" obligation="normative">
<title>AES Monte Carlo Test — CFB128 mode</title>
<clause id="AES-CFB128-MCT-ENC" obligation="normative">
<title>Encrypt</title>
<p id="_3684a1e4-f5e8-0918-2d13-054923ded9e5">The initial condition for the test is the tuple (KEY, IV, PT) set to some values.</p>

<p id="_316d1ec8-a400-fa43-417b-5bb31460eed8">The algorithm is shown in <xref target="xml_figureMCTCFB128"/>.</p>

<sourcecode id="xml_figureMCTCFB128" lang="code">
<name>AES-CFB128 Monte Carlo Test</name>
Key[0] = Key
IV[0] = IV
PT[0] = PT
For i = 0 to 99
    Output Key[i]
    Output IV[i]
    Output PT[0]
    For j = 0 to 999
        If ( j=0 )
            CT[j] = AES_CFB128_ENCRYPT(Key[i], IV[i], PT[j])
            PT[j+1] = IV[i]
        Else
            CT[j] = AES_CFB128_ENCRYPT(Key[i], PT[j])
            PT[j+1] = CT[j-1]
    Output CT[j]
    AES_KEY_SHUFFLE(Key, CT)
    IV[i+1] = CT[j]
    PT[0] = CT[j-1]</sourcecode>

</clause>

<clause id="AES-CFB128-MCT-DEC" obligation="normative">
<title>Decrypt</title>
<p id="_aa6111ae-6468-d0dd-074e-687a81bffe4b">The pseudocode for decryption can be obtained by replacing all PT’s in the encryption pseudocode with CT’s and all CT’s in the encryption pseudocode with PT’s. As well, replace the encrypt operation with the corresponding decrypt operation.</p>
</clause>
</clause>

<clause id="AES_KEY_SHUFFLE" obligation="normative">
<title>AES Monte Carlo Key Shuffle</title>
<p id="_0ff56096-39f4-6ece-ea8d-9563fd782513">Most AES MCTs use a shared key shuffle routine. The algorithm is shown in <xref target="xml_figureAESKEY"/>.</p>

<p id="_ae74dcb5-422e-61f8-129e-e4f329fb7568">The initial condition for the routine is a tuple (KEY, CT) set to some values. This pseudocode is specifically for encryption. For decryption, swap all instances of CT with PT. The || symbol is used to denote concatenation. The MSB (most significant bits) and LSB (least significant bits) functions accept a bit string and an integer amount of bits to capture. For example MSB(A, 8) would capture the 8 most significant bits of the bit string A.</p>

<sourcecode id="xml_figureAESKEY" lang="code">
<name>AES Encrypt Key Shuffle Routine</name>
If ( keylen = 128 )
    Key[i+1] = Key[i] xor MSB(CT[j], 128)
If ( keylen = 192 )
    Key[i+1] = Key[i] xor (LSB(CT[j-1], 64) || MSB(CT[j], 128))
If ( keylen = 256 )
    Key[i+1] = Key[i] xor (MSB(CT[j-1], 128) || MSB(CT[j], 128))</sourcecode>

</clause>

<clause id="TDES-ECB-MCT" obligation="normative">
<title>TDES Monte Carlo Test — ECB mode</title>
<clause id="TDES-ECB-MCT-ENC" obligation="normative">
<title>Encrypt</title>
<p id="_e187f324-0a36-9b46-1f39-1031889fec73">The initial condition for the test is the tuple (KEY1, KEY2, KEY3, PT) set to some values.</p>

<p id="_07427e9c-e079-ca65-7f46-ee56c6bd0205">The algorithm is shown in <xref target="xml_figureMCT_TDES_ECB"/>.</p>

<sourcecode id="xml_figureMCT_TDES_ECB" lang="code">
<name>TDES-ECB Monte Carlo Test</name>
Key1[0] = KEY1
Key2[0] = KEY2
Key3[0] = KEY3
PT[0] = PT
For i = 0 to 399
    Output Key1[i]
    Output Key2[i]
    Output Key3[i]
    Output PT[0]
    For j = 0 to 9999
        CT[j] = TDES_ECB_ENCRYPT(Key1[i], Key2[i], Key3[i], PT[j])
        PT[j+1] = CT[i]
    Output CT[j]
    Key1[i+1] = Key1[i] xor CT[j]
    Key2[i+1] = Key2[i] xor CT[j-1]
    If ( keyingOption = 1 )
        Key3[i+1] = Key3[i] xor CT[j-2]
    Else
        Key3[i+1] = Key1[i+1]
    PT[0] = CT[j]</sourcecode>

</clause>

<clause id="TDES-ECB-MCT-DECR" obligation="normative">
<title>Decrypt</title>
<p id="_b31a5d97-72c1-d529-cda8-d984bcd5021f">The pseudocode for decryption can be obtained by replacing all PT’s in the encryption pseudocode with CT’s and all CT’s in the encryption pseudocode with PT’s. As well, replace the encrypt operation with the corresponding decrypt operation.</p>
</clause>
</clause>

<clause id="TDES-CBC-MCT" obligation="normative">
<title>TDES Monte Carlo Test — CBC mode</title>
<clause id="TDES-CBC-MCT-ENC" obligation="normative">
<title>Encrypt</title>
<p id="_ad60a666-83cc-7844-5d79-45ccdc25d0ba">The initial condition for the test is the tuple (KEY1, KEY2, KEY3, IV, PT) set to some values.</p>

<p id="_bb90e0a4-41e0-4574-b5c5-deea0c6c82a3">The algorithm is shown in <xref target="xml_figureMCT_TDES_CBC"/>.</p>

<sourcecode id="xml_figureMCT_TDES_CBC" lang="code">
<name>TDES-CBC Monte Carlo Test</name>
Key1[0] = KEY1
Key2[0] = KEY2
Key3[0] = KEY3
IV[0] = IV
PT[0] = PT
For i = 0 to 399
    Output Key1[i]
    Output Key2[i]
    Output Key3[i]
    Output IV[0]
    Output PT[0]
    For j = 0 to 9999
        CT[j] = TDES_CBC_ENCRYPT(Key1[i], Key2[i], Key3[i], PT[j], IV[j])
        If ( j = 0 )
            PT[j+1] = IV[0]
        Else
            PT[j+1] = CT[j-1]
        IV[j+1] = CT[j]
    Output CT[j]
    Key1[i+1] = Key1[i] xor CT[j]
    Key2[i+1] = Key2[i] xor CT[j-1]
    If ( keyingOption = 1 )
        Key3[i+1] = Key3[i] xor CT[j-2]
    Else
        Key3[i+1] = Key1[i+1]
    PT[0] = CT[j-1]
    IV[0] = CT[j]</sourcecode>

</clause>

<clause id="TDES-CBC-MCT-DECR" obligation="normative">
<title>Decrypt</title>
<p id="_6b83ab5c-c58e-8a2a-34c3-3360e140a1e8">The pseudocode for decryption can be obtained by replacing all PT’s in the encryption pseudocode with CT’s and all CT’s in the encryption pseudocode with PT’s. As well, replace the inner loop in the pseudocode with the following:</p>

<sourcecode id="xml_figureMCT_TDES_CBC_DECR" lang="code">
<name>TDES-CBC Monte Carlo Test Decrypt</name>
    For j = 0 to 9999
        PT[j] = TDES_CBC_DECRYPT(Key1[i], Key2[i], Key3[i], CT[j], IV[j])
        CT[j+1] = PT[j]
        IV[j+1] = CT[j]</sourcecode>

</clause>
</clause>

<clause id="TDES-CBC-I-MCT" obligation="normative">
<title>TDES Monte Carlo Test — CBC-I mode</title>
<clause id="TDES-CBC-I-MCT-ENC" obligation="normative">
<title>Encrypt</title>
<p id="_71411846-413b-010e-26dd-665de753c6d7">The initial condition for the test is the tuple (KEY1, KEY2, KEY3, IV1, IV2, IV3, PT1, PT2, PT3) set to some values.</p>

<p id="_4190b665-9abf-9c91-84db-0bf538f5de7a">The algorithm is shown in <xref target="xml_figureMCT_TDES_CBC-I"/>.</p>

<sourcecode id="xml_figureMCT_TDES_CBC-I" lang="code">
<name>TDES-CBC-I Monte Carlo Test</name>
Key1[0] = KEY1
Key2[0] = KEY2
Key3[0] = KEY3
IV1[0] = IV1
IV2[0] = IV2
IV3[0] = IV3
PT1[0] = PT1
PT2[0] = PT2
PT3[0] = PT3
For i = 0 to 399
    Output Key1[i], Key2[i], Key3[i]
    Output IV1[0], IV2[0], IV3[0]
    Output PT1[0], PT2[0], PT3[0]
    For j = 0 to 9999
        CT[j] = TDES_CBC_I_ENCRYPT(Key1[i], Key2[i], Key3[i], PT1[j], PT2[j], PT3[j], IV1[j], IV2[j], IV3[j])
        If ( j = 0 )
            PT1[j+1] = IV1[0]
            PT2[j+1] = IV2[0]
            PT3[j+1] = IV3[0]
        Else
            PT1[j+1] = CT1[j-1]
            PT2[j+1] = CT2[j-1]
            PT3[j+1] = CT3[j-1]
        IV1[j+1] = CT1[j]
        IV2[j+1] = CT2[j]
        IV3[j+1] = CT3[j]
    Output CT1[j], CT2[j], CT3[j]
    Key1[i+1] = Key1[i] xor CT1[j]
    Key2[i+1] = Key2[i] xor CT2[j-1]
    If ( keyingOption = 1 )
        Key3[i+1] = Key3[i] xor CT3[j-2]
    Else
        Key3[i+1] = Key1[i+1]
    PT1[0] = CT1[j-1]
    PT2[0] = CT2[j-1]
    PT3[0] = CT3[j-1]
    IV1[0] = CT1[j]
    IV2[0] = CT2[j]
    IV3[0] = CT3[j]</sourcecode>

</clause>

<clause id="TDES-CBC-I-MCT-DECR" obligation="normative">
<title>Decrypt</title>
<p id="_f3ad0155-0265-af35-b36f-f0cee4353441">The initial condition for the test is the tuple (KEY1, KEY2, KEY3, IV1, IV2, IV3, CT1, CT2, CT3) set to some values.</p>

<p id="_ccfa8623-5711-65f3-d4c5-78fd0144f304">The algorithm is shown in <xref target="xml_figureMCT_TDES_CBC_I_DECR"/>.</p>

<sourcecode id="xml_figureMCT_TDES_CBC_I_DECR" lang="code">
<name>TDES-CBC-I Monte Carlo Test Decrypt</name>
Key1[0] = KEY1
Key2[0] = KEY2
Key3[0] = KEY3
IV1[0] = IV1
IV2[0] = IV2
IV3[0] = IV3
CT1[0] = CT1
CT2[0] = CT2
CT3[0] = CT3
For i = 0 to 399
    Output Key1[i], Key2[i], Key3[i]
    Output IV1[0], IV2[0], IV3[0]
    Output CT1[0], CT2[0], CT3[0]
    For j = 0 to 9999
        PT[j] = TDES_CBC_I_DECRYPT(Key1[i], Key2[i], Key3[i], CT1[j], CT2[j], CT3[j], IV1[j], IV2[j], IV3[j])
        CT1[j+1] = PT1[j]
        CT2[j+1] = PT2[j]
        CT3[j+1] = PT3[j]
        IV1[j+1] = CT1[j]
        IV2[j+1] = CT2[j]
        IV3[j+1] = CT3[j]
    Output PT1[j], PT2[j], PT3[j]
    Key1[i+1] = Key1[i] xor PT1[j]
    Key2[i+1] = Key2[i] xor PT2[j-1]
    If ( keyingOption = 1 )
        Key3[i+1] = Key3[i] xor PT3[j-2]
    Else
        Key3[i+1] = Key1[i+1]
    CT1[0] = PT1[j]
    CT2[0] = PT2[j]
    CT3[0] = PT3[j]
    IV1[0] = CT1[j]
    IV2[0] = CT2[j]
    IV3[0] = CT3[j]</sourcecode>

</clause>
</clause>

<clause id="TDES-CFB-MCT" obligation="normative">
<title>TDES Monte Carlo Test — CFB1, CFB8, CFB64 modes</title>
<clause id="TDES-CFB-MCT-ENC" obligation="normative">
<title>Encrypt</title>
<p id="_0787e8b3-739f-364a-39e8-aca42f4be985">The initial condition for the test is the tuple (KEY1, KEY2, KEY3, IV, PT) set to some values. PT and CT are k-bit where k is the feedback size, for example CFB1 has a feedback size of 1-bit.</p>

<p id="_ca0f9fc0-e1ca-1525-b453-c8b7e39893b4">The algorithm is shown in <xref target="xml_figureMCT_TDES_CFB"/>.</p>

<sourcecode id="xml_figureMCT_TDES_CFB" lang="code">
<name>TDES-CFB Monte Carlo Test</name>
Key1[0] = KEY1
Key2[0] = KEY2
Key3[0] = KEY3
IV[0] = IV
PT[0] = PT
For i = 0 to 399
    Output Key1[i]
    Output Key2[i]
    Output Key3[i]
    Output IV[0]
    Output PT[0]
    For j = 0 to 9999
        CT[j] = TDES_CFB_ENCRYPT(Key1[i], Key2[i], Key3[i], PT[j], IV[j])
        PT[j+1] = LeftMost_K_Bits(IV[j])
        IV[j+1] = RightMost_64-K_Bits(IV[j]) || CT[j]
    Output CT[j]
    C = LeftMost_192_Bits(CT[j] || CT[j-1] || ... || CT[0])
    Key1[i+1] = Key1[i] xor bits 129-192 of C
    Key2[i+1] = Key2[i] xor bits 65-128 of C
    If ( keyingOption = 1 )
        Key3[i+1] = Key3[i] xor bits 1-64 of C
    Else
        Key3[i+1] = Key1[i+1]
    PT[0] = LeftMost_K_Bits(IV[j])
    IV[0] = RightMost_64-K_Bits(IV[j]) || CT[j]</sourcecode>

</clause>

<clause id="TDES-CFB-MCT-DEC" obligation="normative">
<title>Decrypt</title>
<p id="_c80c8eab-232a-6488-8d3c-b304b176c229">The initial condition for the test is the tuple (KEY1, KEY2, KEY3, IV, CT) set to some values. PT and CT are k-bit where k is the feedback size, for example CFB1 has a feedback size of 1-bit. O[j] is the O<sub>j</sub> variable internal to the Triple DES operation described in Table 43 of SP 800-20.</p>

<p id="_c2df4c5e-976a-9338-8f17-f960e3e46b74">The algorithm is shown in <xref target="xml_figureMCT_TDES_CFB_DEC"/>.</p>

<sourcecode id="xml_figureMCT_TDES_CFB_DEC" lang="code">
<name>TDES-CFB Monte Carlo Test Decrypt</name>
Key1[0] = KEY1
Key2[0] = KEY2
Key3[0] = KEY3
IV[0] = IV
CT[0] = CT
For i = 0 to 399
    Output Key1[i]
    Output Key2[i]
    Output Key3[i]
    Output IV[0]
    Output CT[0]
    For j = 0 to 9999
        PT[j] = TDES_CFB_DECRYPT(Key1[i], Key2[i], Key3[i], CT[j], IV[j])
        CT[j+1] = LeftMost_K_Bits(O[j])
        IV[j+1] = RightMost_64-K_Bits(IV[j]) || CT[j]
    Output PT[j]
    C = LeftMost_192_Bits(PT[j] || PT[j-1] || ... || PT[0])
    Key1[i+1] = Key1[i] xor bits 129-192 of C
    Key2[i+1] = Key2[i] xor bits 65-128 of C
    If ( keyingOption = 1 )
        Key3[i+1] = Key3[i] xor bits 1-64 of C
    Else
        Key3[i+1] = Key1[i+1]
    CT[0] = LeftMost_K_Bits(O[j])
    IV[0] = RightMost_64-K_Bits(IV[j]) || CT[j]</sourcecode>

</clause>
</clause>

<clause id="TDES-CFB-P-MCT" obligation="normative">
<title>TDES Monte Carlo Test — CFB1-P, CFB8-P, CFB64-P modes</title>
<clause id="TDES-CFB-P-MCT-ENC" obligation="normative">
<title>Encrypt</title>
<p id="_df4dc535-55ca-62c5-ba17-3033b497d1f2">The initial condition for the test is the tuple (KEY1, KEY2, KEY3, IV1, IV2, IV3, PT) set to some values. PT and CT are k-bit where k is the feedback size, for example CFB8-P has a feedback size of 8-bits.</p>

<p id="_4dbfe873-f8f6-7419-dc53-f98684e7a837">The algorithm is shown in <xref target="xml_figureMCT_TDES_CFB-P"/>.</p>

<sourcecode id="xml_figureMCT_TDES_CFB-P" lang="code">
<name>TDES-CFB-P Monte Carlo Test</name>
Key1[0] = KEY1
Key2[0] = KEY2
Key3[0] = KEY3
IV1[0] = IV1
IV2[0] = IV2
IV3[0] = IV3
PT[0] = PT
For i = 0 to 399
    Output Key1[i], Key2[i], Key3[i]
    Output IV1[0]
    Output PT[0]
    For j = 0 to 9999
        CT[j] = TDES_CFB_P_ENCRYPT(Key1[i], Key2[i], Key3[i], PT[j], IV1[j], IV2[j], IV3[j])
        PT[j+1] = LeftMost_K_Bits(IV1[j]) &lt;-- This line may not be correct? Compare to SP 800-20 Table 49
    Output CT[j]
    C = LeftMost_192_Bits(CT[j] || CT[j-1] || ... || CT[0])
    Key1[i+1] = Key1[i] xor bits 129-192 of C
    Key2[i+1] = Key2[i] xor bits 65-128 of C
    If ( keyingOption = 1 )
        Key3[i+1] = Key3[i] xor bits 1-64 of C
    Else
        Key3[i+1] = Key1[i+1]
    PT[0] = LeftMost_K_Bits(IV1[j])
    IV1[0] = RightMost_64-K_Bits(IV[j]) || CT[j]
    IV2[0] = IV1[0] + "5555555555555555" mod 2^64
    IV3[0] = IV1[0] + "AAAAAAAAAAAAAAAA" mod 2^64</sourcecode>

</clause>

<clause id="TDES-CFB-P-MCT-DEC" obligation="normative">
<title>Decrypt</title>
<p id="_1e7e8bf2-80ed-7afc-6259-d1e7c3adc796">The initial condition for the test is the tuple (KEY1, KEY2, KEY3, IV1, IV2, IV3, CT) set to some values. PT and CT are k-bit where k is the feedback size, for example CFB8-P has a feedback size of 8-bits. O[j] is the O<sub>j</sub> variable internal to the Triple DES operation described in Table 50 of SP 800-20.</p>

<p id="_cd68a046-eebe-43b7-95f5-61cdddf64ff9">The algorithm is shown in <xref target="xml_figureMCT_TDES_CFB-P-DEC"/>.</p>

<sourcecode id="xml_figureMCT_TDES_CFB-P-DEC" lang="code">
<name>TDES-CFB-P Monte Carlo Test Decrypt</name>
Key1[0] = KEY1
Key2[0] = KEY2
Key3[0] = KEY3
IV1[0] = IV1
IV2[0] = IV2
IV3[0] = IV3
CT[0] = CT
For i = 0 to 399
    Output Key1[i], Key2[i], Key3[i]
    Output IV1[0]
    Output CT[0]
    For j = 0 to 9999
        PT[j] = TDES_CFB_P_DECRYPT(Key1[i], Key2[i], Key3[i], CT[j], IV1[j], IV2[j], IV3[j])
        CT[j+1] = LeftMost_K_Bits(O[j])
    Output PT[j]
    C = LeftMost_192_Bits(PT[j] || PT[j-1] || ... || PT[0])
    Key1[i+1] = Key1[i] xor bits 129-192 of C
    Key2[i+1] = Key2[i] xor bits 65-128 of C
    If ( keyingOption = 1 )
        Key3[i+1] = Key3[i] xor bits 1-64 of C
    Else
        Key3[i+1] = Key1[i+1]
    CT[0] = LeftMost_K_Bits(O[j])
    IV1[0] = RightMost_64-K_Bits(IV[j]) || CT[j]
    IV2[0] = IV1[0] + "5555555555555555" mod 2^64
    IV3[0] = IV1[0] + "AAAAAAAAAAAAAAAA" mod 2^64</sourcecode>

</clause>
</clause>

<clause id="TDES-OFB-MCT" obligation="normative">
<title>TDES Monte Carlo Test — OFB mode</title>
<clause id="TDES-OFB-MCT-ENC" obligation="normative">
<title>Encrypt</title>
<p id="_93f5df3d-f863-56a9-2998-dfcd4d07afd3">The initial condition for the test is the tuple (KEY1, KEY2, KEY3, IV, PT) set to some values.</p>

<p id="_6d4d5938-016f-0d61-ca42-884eedb18410">The algorithm is shown in <xref target="xml_figureMCT_TDES_OFB"/>.</p>

<sourcecode id="xml_figureMCT_TDES_OFB" lang="code">
<name>TDES-OFB Monte Carlo Test</name>
Key1[0] = KEY1
Key2[0] = KEY2
Key3[0] = KEY3
IV[0] = IV
PT[0] = PT
For i = 0 to 399
    Output Key1[i]
    Output Key2[i]
    Output Key3[i]
    Output IV[0]
    Output PT[0]
    For j = 0 to 9999
        CT[j] = TDES_OFB_ENCRYPT(Key1[i], Key2[i], Key3[i], PT[j], IV[j])
        PT[j+1] = IV[j]
    Output CT[j]
    Key1[i+1] = Key1[i] xor CT[j]
    Key2[i+1] = Key2[i] xor CT[j-1]
    If ( keyingOption = 1 )
        Key3[i+1] = Key3[i] xor CT[j-2]
    Else
        Key3[i+1] = Key1[i+1]
    PT[0] = PT[0] xor IV[j]
    IV[0] = CT[j]</sourcecode>

</clause>

<clause id="TDES-OFB-MCT-DEC" obligation="normative">
<title>Decrypt</title>
<p id="_3a2f6e88-c0cf-5863-a8a1-1b24b75acaac">The pseudocode for decryption can be obtained by replacing all PT’s in the encryption pseudocode with CT’s and all CT’s in the encryption pseudocode with PT’s. As well, replace the encrypt operation with the corresponding decrypt operation.</p>
</clause>
</clause>

<clause id="TDES-OFB-I-MCT" obligation="normative">
<title>TDES Monte Carlo Test — OFB-I mode</title>
<clause id="TDES-OFB-I-MCT-ENC" obligation="normative">
<title>Encrypt</title>
<p id="_3ec2f6c5-caf3-869a-b458-0fb3b026e855">The initial condition for the test is the tuple (KEY1, KEY2, KEY3, IV1, IV2, IV3, PT) set to some values.</p>

<p id="_617cc0af-a998-a73a-234f-5a3cea75c5b3">The algorithm is shown in <xref target="xml_figureMCT_TDES_OFB-I"/>.</p>

<sourcecode id="xml_figureMCT_TDES_OFB-I" lang="code">
<name>TDES-OFB-I Monte Carlo Test</name>
Key1[0] = KEY1
Key2[0] = KEY2
Key3[0] = KEY3
IV1[0] = IV1
IV2[0] = IV2
IV3[0] = IV3
PT[0] = PT
For i = 0 to 399
    Output Key1[i], Key2[i], Key3[i]
    Output IV1[0], IV2[0], IV3[0]
    Output PT[0]
    For j = 0 to 9999
        CT[j] = TDES_OFB-I_ENCRYPT(Key1[i], Key2[i], Key3[i], PT[j], IV[j])
        PT[j+1] = IV[j]
    Output CT[j]
    Key1[i+1] = Key1[i] xor CT[j]
    Key2[i+1] = Key2[i] xor CT[j-1]
    If ( keyingOption = 1 )
        Key3[i+1] = Key3[i] xor CT[j-2]
    Else
        Key3[i+1] = Key1[i+1]
    PT[0] = PT[0] xor IV1[j]
    IV1[0] = CT[j]
    IV2[0] = IV1[0] + "5555555555555555" mod 2^64
    IV3[0] = IV1[0] + "AAAAAAAAAAAAAAAA" mod 2^64</sourcecode>

</clause>

<clause id="TDES-OFB-I-MCT-DEC" obligation="normative">
<title>Decrypt</title>
<p id="_dce991de-5333-5a6f-77e0-17f2863ff8be">The pseudocode for decryption can be obtained by replacing all PT’s in the encryption pseudocode with CT’s and all CT’s in the encryption pseudocode with PT’s. As well, replace the encrypt operation with the corresponding decrypt operation.</p>
</clause>
</clause>
</clause>
</clause>

<clause id="_test_coverage" obligation="normative">
<title>Test Coverage</title>
<p id="_4729b17d-ea07-bda9-6afe-65b3d2eca76c">The tests described in this document have the intention of ensuring an implementation is conformant to <eref type="inline" bibitemid="FIPS-197" citeas="FIPS 197"/> and <eref type="inline" bibitemid="SP800-38A" citeas="SP 800-38A"/>.</p>

<clause id="aes-coverage" obligation="normative">
<title>AES Requirements Covered</title>
<p id="_672f62ca-ee40-c139-f9ca-07ab79292b13">In <eref type="inline" bibitemid="SP800-38A" citeas="SP 800-38A"/>, both Section 5 and Section 6 which describe general modes of operation for block ciphers are tested. In <eref type="inline" bibitemid="FIPS-197" citeas="FIPS 197"/>, Section 4 outlines the AES engine and necessary functions to perform simple encrypt an decrypt operations. All AES tests perform such operations and thus rely heavily on this section. Section 5 specifically outlines the algorithm for AES and thus all AES tests rely heavily on this section as well. All of <eref type="inline" bibitemid="SP800-38A-Add" citeas="SP 800-38A"/> requirements are covered. In <eref type="inline" bibitemid="AES-XTS" citeas="IEEE 1619-2007"/>, the IEEE outlines the encrypt and decrypt operations for AES-XTS.</p>
</clause>

<clause id="aes-not-coverage" obligation="normative">
<title>AES Requirements Not Covered</title>
<p id="_1e87108e-4b8b-befc-bad5-64b80713157d">Some requirements in the outlined specifications are not easily tested. Often they are not ideal for black-box testing such as the ACVP. In <eref type="inline" bibitemid="SP800-38A" citeas="SP 800-38A"/>, Appendix A outlines padding for when the data being encrypted does not evenly fill the blocks. In these tests, all data, unless otherwise specified, is assumed to be a multiple of the block length. All exceptions to those cases are when stream ciphers specifically are being tested. In Section 5.3, IV generation which is required for all modes of AES and TDES outside of ECB, is not tested.  Appendix D outlines how errors are to be handled. As some symmetric ciphers aren’t authenticated, ACVP does not include tests that change random bits in payload, IV, key or results, as these results can be successfully encrypted/decrypted, but errors aren’t necessarily detectable.</p>

<p id="_07678c97-63f5-1f28-9353-9288e9aa8487">In <eref type="inline" bibitemid="FIPS-197" citeas="FIPS 197"/>, Section 5.3 defines the inverse cipher for AES. This is not tested in the CBC, CFB (all), OFB or CTR modes.</p>

<p id="_8433b328-d3aa-e879-1402-3d11d0f64439">In <eref type="inline" bibitemid="SP800-38E" citeas="SP 800-38E"/>, the AES-XTS algorithm is restricted to 2\^20 AES blocks (128-bits each) per key. Due to the size of the data, ACVP does not test the proper usage of a key over such large amounts of data.</p>

<p id="_915f77ca-bfaa-88e7-cb05-9a5ff055122d">In the <eref type="inline" bibitemid="RFC3686" citeas="RFC 3686"/> testing conformance of AES-CTR, tests will be generated ensuring the LSB[32] of the IV represents the integer value of “1”.  These tests will allow for either internal or external IV generation from the perspective of the IUT.</p>
</clause>

<clause id="aes-fp-coverage" obligation="normative">
<title>AES Format Preserving Encryption Requirements Covered</title>
<p id="_d549c3e0-3f5e-f359-fa4f-45865cd7e10f">All of <eref type="inline" bibitemid="SP800-38Gr1" citeas="SP 800-38G"/> requirements are covered.</p>
</clause>

<clause id="aes-fp-not-coverage" obligation="normative">
<title>AES Format Preserving Encryption Requirements Not Covered</title>
<p id="_5a381e9e-8d13-af16-8e7c-5b328c954f30">N/A</p>
</clause>

<clause id="tdes-coverage" obligation="normative">
<title>TDES Requirements Covered</title>
<p id="_a61342cf-376f-5a97-6265-09436e198b2b">In <eref type="inline" bibitemid="SP800-67r2" citeas="SP 800-67 Rev. 2"/>, Section 3 outlines the use for TDES with keying option 1 (three distinct keys) and decryption only for keying option 2 (K1 == K3 != K2). Depending on the cipher mode, both the forward and inverse cipher are tested. The known answer tests address these requirements.</p>
</clause>

<clause id="tdes-not-coverage" obligation="normative">
<title>TDES Requirements Not Covered</title>
<p id="_f4d55d3d-a65a-d151-773e-1849059415ce">In <eref type="inline" bibitemid="SP800-67r2" citeas="SP 800-67 Rev. 2"/>, Section 3.3 outlines requirements for keys for proper usage of TDES. These requirements are not tested by ACVP. All keys used in the tests are randomly or staticly generated by the server. There are no checks for key equality or potentially weak keys. Section 3.3.2 outlines specific keys which are to be avoided. ACVP does not expect a client to be able to detect these keys.</p>
</clause>

<clause id="aead-coverage" obligation="normative">
<title>AEAD Requirements Covered</title>
<p id="_5899388e-276b-f074-0709-e0e8a3e8f4d9">In <eref type="inline" bibitemid="SP800-38D" citeas="SP 800-38D"/>, Section 7 outlines the encrypt and decrypt operations for AES-GCM. This and all prerequisites to these operations  (such as GHASH) are tested as AES-GCM encrypt and decrypt operations.</p>

<p id="_4075ab34-e22c-3add-79a4-20e882f2f550">In <eref type="inline" bibitemid="SP800-38C" citeas="SP 800-38C"/>, Section 6 outlines the encrypt and decrypt operations for AES-CCM. This and all prerequisites to these operations (such as CBC-MAC) are tested as AES-CCM encrypt and decrypt operations. In <eref type="inline" bibitemid="AES-GCM-SIV" citeas="AES-GCM-SIV"/>, the draft outlines the encrypt and decrypt operations for AES-GCM-SIV.</p>
</clause>

<clause id="aead-not-coverage" obligation="normative">
<title>AEAD Requirements Not Covered</title>
<p id="_149733bd-c615-6378-1dda-357d9150dac3">In <eref type="inline" bibitemid="SP800-38D" citeas="SP 800-38D"/>, Section 8 outlines uniqueness requirements on IVs and keys for AES-GCM. This is considered out of bounds for the algorithm testing done by the ACVP and will not be tested.</p>
</clause>

<clause id="kw-coverage" obligation="normative">
<title>KeyWrap Requirements Covered</title>
<p id="_9ca78080-479a-36d8-2fd2-2c6f8a4e76d1">In <eref type="inline" bibitemid="SP800-38F" citeas="SP 800-38F"/> Section 5.2 defines the authenticated encryption and authenticated decryption operations for all three key-wrap algorithms.  As well, the padding for key-wrap with padding is defined. Algorithm Functional Tests provide assurance of these requirements for encrypt operations. For decrypt operations, there is a possibility to reject the ciphertext due to improper wrapping. This is also assured by the Algorithm Functional Tests.</p>

<p id="_80fe3674-c93f-897a-937f-b31ee883ab8a">Sections 6 and 7 outline the specific ciphers in both encrypt and decrypt directions. All facsets of these processes are tested with random data via the Algorithm Functional Tests.</p>
</clause>

<clause id="kw-not-coverage" obligation="normative">
<title>KeyWrap Requirements Not Covered</title>
<p id="_70ed245a-d175-72aa-9fa6-2fb0b79e5a2b">In <eref type="inline" bibitemid="SP800-38F" citeas="SP 800-38F"/> Section 5.3 defines the length requirements allowed by an optimal implementation. The upper bounds are unreasonably large to test in a web-based model and thus an artificial maximum is selected for the payloadLen property (corresponding to both plaintext and ciphertext). The Algorithm Functional Tests SHOULD utilize both the minimum and maximum values provided in the client’s registration optimally with other values.</p>
</clause>
</clause>
</clause>

<clause id="capabilities" obligation="normative">
<title>Capabilities Registration</title>
<p id="_46e01fbf-3e73-b553-e70c-5a6ae027d308">ACVP requires crypto modules to register their capabilities. This allows the crypto module to advertise support for specific algorithms, notifying the ACVP server which algorithms need test vectors generated for the validation process.  This section describes the constructs for advertising support of Block Cipher algorithms to the ACVP server.</p>

<p id="_e83f2311-d713-25d1-f1d9-e2e8ae4204ff">The algorithm capabilities <strong>MUST</strong> be advertised as JSON objects within the ‘algorithms’ value of the ACVP registration message. The ‘algorithms’ value is an array, where each array element is an individual JSON object defined in this section. The ‘algorithms’ value is part of the ‘capability_exchange’ element of the ACVP JSON registration message. See the ACVP specification <eref type="inline" bibitemid="ACVP" citeas="ACVP"/> for more details on the registration message.</p>

<clause id="prerequisites" obligation="normative">
<title>Prerequisites</title>
<p id="_eecbb4b2-6f7f-8408-2ee1-b41ca76bd504">Each algorithm implementation <strong>MAY</strong> rely on other cryptographic primitives.	For example, RSA Signature algorithms depend on an underlying hash function. Each of these underlying algorithm primitives must be validated, either separately or as part of the same submission. ACVP provides a mechanism for specifying the required prerequisites:</p>

<p id="_f7f16e22-e58b-43df-39ba-87d6ba6a7ad2">Prerequisites, if applicable, <strong>MUST</strong> be submitted in the registration as the <tt>prereqVals</tt> JSON property array inside each element of the <tt>algorithms</tt> array. Each element in the <tt>prereqVals</tt> array <strong>MUST</strong> contain the following properties</p>

<table id="_d4322f66-7335-d05d-c9ce-bc8545c49eaa">
<name>Prerequisite Properties</name>
<thead><tr><th valign="top" align="left">JSON Property</th>
<th valign="top" align="left">Description</th>
<th valign="top" align="left">JSON Type</th>
</tr></thead>
<tbody><tr><td valign="top" align="left">algorithm</td>
<td valign="top" align="left">a prerequisite algorithm</td>
<td valign="top" align="left">string</td>
</tr><tr><td valign="top" align="left">valValue</td>
<td valign="top" align="left">algorithm validation number</td>
<td valign="top" align="left">string</td>
</tr></tbody>
</table>

<p id="_ed4b9036-78af-d8f8-7bd2-30af422f6d02">A “valValue” of “same” <strong>SHALL</strong> be used to indicate that the prerequisite is being met by a different algorithm in the capability exchange in the same registration.</p>

<p id="_e7955338-40d4-e44b-74b8-1f64ebffc1a4">An example description of prerequisites within a single algorithm capability exchange looks like this</p>

<sourcecode id="_89db1eb0-63dd-71b7-8bda-ebdf011fa2ba" lang="json">"prereqVals":
[
  {
    "algorithm": "Alg1",
    "valValue": "Val-1234"
  },
  {
    "algorithm": "Alg2",
    "valValue": "same"
  }
]</sourcecode>

</clause>

<clause id="prereq_algs" obligation="normative">
<title>Required Prerequisite Algorithms for Block Cipher Validations</title>
<p id="_a61d6087-93fc-fdb9-58c6-3fa05c41725c">Some block cipher algorithm implementations rely on other cryptographic primitives. For example, AES-CCM uses an underlying AES-ECB algorithm. Each of these underlying algorithm primitives <strong>MUST</strong> be validated, either separately or as part of the same submission. ACVP provides a mechanism for specifying the required prerequisites:</p>

<table id="prereqs_table">
<name>Required Prerequisite Algorithms JSON Values</name>
<thead><tr><th valign="top" align="left">JSON Value</th>
<th valign="top" align="left">Description</th>
<th valign="top" align="left">JSON type</th>
<th valign="top" align="left">Example Values</th>
</tr></thead>
<tbody><tr><td valign="top" align="left">algorithm</td>
<td valign="top" align="left">a prerequisite algorithm</td>
<td valign="top" align="left">string</td>
<td valign="top" align="left">AES, DRBG, TDES</td>
</tr><tr><td valign="top" align="left">valValue</td>
<td valign="top" align="left">algorithm validation number</td>
<td valign="top" align="left">string</td>
<td valign="top" align="left">actual number or “same” to refer to the same submission</td>
</tr><tr><td valign="top" align="left">prereqAlgVal</td>
<td valign="top" align="left">prerequisite algorithm validation</td>
<td valign="top" align="left">object</td>
<td valign="top" align="left">exactly one algorithm property and one valValue property</td>
</tr></tbody>
</table>
</clause>

<clause id="cap_ex" obligation="normative">
<title>Block Cipher Algorithm Capabilities JSON Values</title>
<p id="_a2799508-7c83-cdd6-599c-50cc2f4ecbd0">Each algorithm capability advertised is a self-contained JSON object and <strong>SHALL</strong> use the following values when appropriate:</p>

<table id="caps_table">
<name>Block Cipher Algorithm Capabilities JSON Values</name>
<thead><tr><th valign="top" align="left">JSON Value</th>
<th valign="top" align="left">Description</th>
<th valign="top" align="left">JSON type</th>
</tr></thead>
<tbody><tr><td valign="top" align="left">algorithm</td>
<td valign="top" align="left">The block cipher algorithm and mode to be validated.</td>
<td valign="top" align="left">string</td>
</tr><tr><td valign="top" align="left">revision</td>
<td valign="top" align="left">The version of the testing methodology the IUT is requesting to validate against.</td>
<td valign="top" align="left">string</td>
</tr><tr><td valign="top" align="left">conformances</td>
<td valign="top" align="left">The additional conformance for the algorithm for a specific use-case</td>
<td valign="top" align="left">array of string</td>
</tr><tr><td valign="top" align="left">prereqVals</td>
<td valign="top" align="left">Prerequisite algorithm validations</td>
<td valign="top" align="left">array of prereqAlgVal objects described in <xref target="prereqs_table"/></td>
</tr><tr><td valign="top" align="left">direction</td>
<td valign="top" align="left">The IUT processing direction</td>
<td valign="top" align="left">array of strings</td>
</tr><tr><td valign="top" align="left">keyLen</td>
<td valign="top" align="left">The supported key lengths in bits</td>
<td valign="top" align="left">array of integers</td>
</tr><tr><td valign="top" align="left">payloadLen</td>
<td valign="top" align="left">The supported plain and cipher text lengths in bits. This varies depending on the algorithm type; for
additional details see <xref target="property_grid_kw"/>, <xref target="property_grid_auth"/>, <xref target="property_grid_xts"/> and <xref target="property_grid_misc"/>. For AES-CTR, the values supplied for this parameter refer to the bit sizes supported in the last incomplete block (less than 128 bits) of the plain or cipher
text.</td>
<td valign="top" align="left">domain</td>
</tr><tr><td valign="top" align="left">ivLen</td>
<td valign="top" align="left">The supported IV/Nonce lengths in bits, see <xref target="property_grid_auth"/></td>
<td valign="top" align="left">domain</td>
</tr><tr><td valign="top" align="left">ivGen</td>
<td valign="top" align="left">IV generation method for AES-GCM/AES-XPN algorithms</td>
<td valign="top" align="left">string</td>
</tr><tr><td valign="top" align="left">ivGenMode</td>
<td valign="top" align="left">IV generation mode for AES-GCM/AES-XPN algorithms</td>
<td valign="top" align="left">string</td>
</tr><tr><td valign="top" align="left">saltGen</td>
<td valign="top" align="left">Salt generation method for AES-XPN mode only</td>
<td valign="top" align="left">string</td>
</tr><tr><td valign="top" align="left">aadLen</td>
<td valign="top" align="left">The supported AAD lengths in bits for AEAD algorithms</td>
<td valign="top" align="left">domain</td>
</tr><tr><td valign="top" align="left">tagLen</td>
<td valign="top" align="left">The supported Tag lengths in bits for AEAD algorithms, see <xref target="property_grid_auth"/></td>
<td valign="top" align="left">array of integers</td>
</tr><tr><td valign="top" align="left">kwCipher</td>
<td valign="top" align="left">The cipher as defined in SP800-38F for key wrap mode</td>
<td valign="top" align="left">array of strings</td>
</tr><tr><td valign="top" align="left">tweakMode</td>
<td valign="top" align="left">Indicates the format(s) of the tweak value input for AES-XTS. A value of “hex” indicates that the IUT expects the tweak value input as a hexadecimal string. A value of “number” indicates that the IUT expects to receive a Data Unit Sequence Number.</td>
<td valign="top" align="left">array of strings</td>
</tr><tr><td valign="top" align="left">keyingOption</td>
<td valign="top" align="left">The Keying Option used in TDES.  Keying option 1 (1) is 3 distinct keys (K1, K2, K3).  Keying Option 2 (2) is 2 distinct keys only suitable for decrypt (K1, K2, K1).</td>
<td valign="top" align="left">array of integers</td>
</tr><tr><td valign="top" align="left">overflowCounter</td>
<td valign="top" align="left">Indicates if the implementation can handle a counter exceeding the maximum value</td>
<td valign="top" align="left">boolean</td>
</tr><tr><td valign="top" align="left">incrementalCounter</td>
<td valign="top" align="left">Indicates if the implementation increments the counter (versus decrementing the counter)</td>
<td valign="top" align="left">boolean</td>
</tr><tr><td valign="top" align="left">performCounterTests</td>
<td valign="top" align="left">Indicates if the implementation can perform the Counter tests which check for an always increasing (or decreasing) counter value</td>
<td valign="top" align="left">boolean</td>
</tr><tr><td valign="top" align="left">tweakLen</td>
<td valign="top" align="left">The domain of values allowed for ACVP-AES-FF1’s tweak value. Allowed range is 0-128 bits mod 8. See <xref target="property_grid_misc"/></td>
<td valign="top" align="left">domain</td>
</tr><tr><td valign="top" align="left">capabilities</td>
<td valign="top" align="left">An array of objects that describes an IUT’s capabilities as they pertain to ACVP-AES-FF1 and ACVP-AES-FF3-1. See <xref target="property_grid_misc"/> and <xref target="property_grid_ff_capabilities"/></td>
<td valign="top" align="left">Array of Objects</td>
</tr><tr><td valign="top" align="left">dataUnitLen</td>
<td valign="top" align="left">The length of the ACVP-AES-XTS data unit</td>
<td valign="top" align="left">domain</td>
</tr><tr><td valign="top" align="left">dataUnitLenMatchesPayload</td>
<td valign="top" align="left">Whether or not the length of the data unit always matches the length of the payload in ACVP-AES-XTS</td>
<td valign="top" align="left">boolean</td>
</tr></tbody>
<note id="_4a84491b-a0ea-064d-870b-659477bab1c2"><p id="_62ea18ef-982f-20e6-6677-69fbc2ee16c0">The ‘conformances’ property is only valid for algorithms listed in <xref target="conformances"/>. The valid values in the array are also listed in that section. The array is always optional.</p>
</note><note id="_5a90adf1-0f0e-0ccc-62b0-e00b856fba2d"><p id="_06ae5773-5f4f-ba4c-b89f-d4afe615801e">Some optional values are required depending on the algorithm. For example, AES-GCM requires ivLen, ivGen, ivGenMode, aadLen and tagLen. Failure to provide these values will result in the ACVP server returning an error to the ACVP client during registration.</p>
</note><note id="_e528d5cf-4996-1a92-9a9d-21c395011bf4"><p id="_97d6f7e1-3bcd-ef0a-cc8e-4e9c0e3c15c4">The ‘performCounterTests’ option is provided for counter implementations such as linear-feedback shift registers which may not present an always increasing or decreasing counter while still ensuring the IV is unique. This value defaults to true if not present. If it is set to false, the ‘overflowCounter’ and ‘incrementalCounter’ values will not be used.</p>
</note></table>







<p id="_c2f5055b-2ae0-3a42-e706-e8e46230d99b">The following grid outlines which properties are <strong>REQUIRED</strong>, as well as all the possible values a server <strong>MAY</strong> support for each standard block cipher algorithm:</p>

<table id="property_grid">
<name>Standard Block Cipher Algorithm Capabilities Applicability Grid</name>
<thead><tr><th valign="top" align="left">algorithm</th>
<th valign="top" align="left">revision</th>
<th valign="top" align="left">direction</th>
<th valign="top" align="left">keyLen</th>
<th valign="top" align="left">keyingOption</th>
</tr></thead>
<tbody><tr><td valign="top" align="left">AES-ECB</td>
<td valign="top" align="left">“1.0”</td>
<td valign="top" align="left">[“encrypt”, “decrypt”]</td>
<td valign="top" align="left">[128, 192, 256]</td>
<td valign="top" align="left"/></tr><tr><td valign="top" align="left">AES-CBC</td>
<td valign="top" align="left">“1.0”</td>
<td valign="top" align="left">[“encrypt”, “decrypt”]</td>
<td valign="top" align="left">[128, 192, 256]</td>
<td valign="top" align="left"/></tr><tr><td valign="top" align="left">AES-OFB</td>
<td valign="top" align="left">“1.0”</td>
<td valign="top" align="left">[“encrypt”, “decrypt”]</td>
<td valign="top" align="left">[128, 192, 256]</td>
<td valign="top" align="left"/></tr><tr><td valign="top" align="left">AES-CFB1</td>
<td valign="top" align="left">“1.0”</td>
<td valign="top" align="left">[“encrypt”, “decrypt”]</td>
<td valign="top" align="left">[128, 192, 256]</td>
<td valign="top" align="left"/></tr><tr><td valign="top" align="left">AES-CFB8</td>
<td valign="top" align="left">“1.0”</td>
<td valign="top" align="left">[“encrypt”, “decrypt”]</td>
<td valign="top" align="left">[128, 192, 256]</td>
<td valign="top" align="left"/></tr><tr><td valign="top" align="left">AES-CFB128</td>
<td valign="top" align="left">“1.0”</td>
<td valign="top" align="left">[“encrypt”, “decrypt”]</td>
<td valign="top" align="left">[128, 192, 256]</td>
<td valign="top" align="left"/></tr><tr><td valign="top" align="left">TDES-ECB</td>
<td valign="top" align="left">“1.0”</td>
<td valign="top" align="left">[“encrypt”, “decrypt”]</td>
<td valign="top" align="left"/><td valign="top" align="left">[1, 2] Note: 2 is only available for decrypt operations</td>
</tr><tr><td valign="top" align="left">TDES-CBC</td>
<td valign="top" align="left">“1.0”</td>
<td valign="top" align="left">[“encrypt”, “decrypt”]</td>
<td valign="top" align="left"/><td valign="top" align="left">[1, 2] Note: 2 is only available for decrypt operations</td>
</tr><tr><td valign="top" align="left">TDES-CBCI</td>
<td valign="top" align="left">“1.0”</td>
<td valign="top" align="left">[“encrypt”, “decrypt”]</td>
<td valign="top" align="left"/><td valign="top" align="left">[1, 2] Note: 2 is only available for decrypt operations</td>
</tr><tr><td valign="top" align="left">TDES-CFB1</td>
<td valign="top" align="left">“1.0”</td>
<td valign="top" align="left">[“encrypt”, “decrypt”]</td>
<td valign="top" align="left"/><td valign="top" align="left">[1, 2] Note: 2 is only available for decrypt operations</td>
</tr><tr><td valign="top" align="left">TDES-CFB8</td>
<td valign="top" align="left">“1.0”</td>
<td valign="top" align="left">[“encrypt”, “decrypt”]</td>
<td valign="top" align="left"/><td valign="top" align="left">[1, 2] Note: 2 is only available for decrypt operations</td>
</tr><tr><td valign="top" align="left">TDES-CFB64</td>
<td valign="top" align="left">“1.0”</td>
<td valign="top" align="left">[“encrypt”, “decrypt”]</td>
<td valign="top" align="left"/><td valign="top" align="left">[1, 2] Note: 2 is only available for decrypt operations</td>
</tr><tr><td valign="top" align="left">TDES-CFBP1</td>
<td valign="top" align="left">“1.0”</td>
<td valign="top" align="left">[“encrypt”, “decrypt”]</td>
<td valign="top" align="left"/><td valign="top" align="left">[1, 2] Note: 2 is only available for decrypt operations</td>
</tr><tr><td valign="top" align="left">TDES-CFBP8</td>
<td valign="top" align="left">“1.0”</td>
<td valign="top" align="left">[“encrypt”, “decrypt”]</td>
<td valign="top" align="left"/><td valign="top" align="left">[1, 2] Note: 2 is only available for decrypt operations</td>
</tr><tr><td valign="top" align="left">TDES-CFBP64</td>
<td valign="top" align="left">“1.0”</td>
<td valign="top" align="left">[“encrypt”, “decrypt”]</td>
<td valign="top" align="left"/><td valign="top" align="left">[1, 2] Note: 2 is only available for decrypt operations</td>
</tr><tr><td valign="top" align="left">TDES-OFB</td>
<td valign="top" align="left">“1.0”</td>
<td valign="top" align="left">[“encrypt”, “decrypt”]</td>
<td valign="top" align="left"/><td valign="top" align="left">[1, 2] Note: 2 is only available for decrypt operations</td>
</tr><tr><td valign="top" align="left">TDES-OFBI</td>
<td valign="top" align="left">“1.0”</td>
<td valign="top" align="left">[“encrypt”, “decrypt”]</td>
<td valign="top" align="left"/><td valign="top" align="left">[1, 2] Note: 2 is only available for decrypt operations</td>
</tr></tbody>
<note id="_f3bf5146-3cb3-5e6c-ad3e-820d80e77434"><p id="_b343916b-bd72-84ae-de6d-1775e43da80e">keyingOption 2 <strong>SHALL</strong> only be available for decrypt operations.</p>
</note></table>



<p id="_e0a4b749-0f5e-4d1c-7a82-50b8f094a812">The following grid outlines which properties are <strong>REQUIRED</strong>, as well as the possible values a server <strong>MAY</strong> support for each key-wrap block cipher algorithm:</p>

<table id="property_grid_kw">
<name>Key-Wrap Block Cipher Algorithm Capabilities Applicability Grid</name>
<thead><tr><th valign="top" align="left">algorithm</th>
<th valign="top" align="left">revision</th>
<th valign="top" align="left">direction</th>
<th valign="top" align="left">keyLen</th>
<th valign="top" align="left">kwCipher</th>
<th valign="top" align="left">keyingOption</th>
<th valign="top" align="left">payloadLen</th>
</tr></thead>
<tbody><tr><td valign="top" align="left">AES-KW</td>
<td valign="top" align="left">“1.0”</td>
<td valign="top" align="left">[“encrypt”, “decrypt”]</td>
<td valign="top" align="left">[128, 192, 256]</td>
<td valign="top" align="left">[“cipher”, “inverse”]</td>
<td valign="top" align="left"/><td valign="top" align="left">{”Min”: 128, “Max”: 4096, “Increment”: 64}</td>
</tr><tr><td valign="top" align="left">AES-KWP</td>
<td valign="top" align="left">“1.0”</td>
<td valign="top" align="left">[“encrypt”, “decrypt”]</td>
<td valign="top" align="left">[128, 192, 256]</td>
<td valign="top" align="left">[“cipher”, “inverse”]</td>
<td valign="top" align="left"/><td valign="top" align="left">{”Min”: 8, “Max”: 4096, “Increment”: 8}</td>
</tr><tr><td valign="top" align="left">TDES-KW</td>
<td valign="top" align="left">“1.0”</td>
<td valign="top" align="left">[“encrypt”, “decrypt”]</td>
<td valign="top" align="left"/><td valign="top" align="left">[“cipher”, “inverse”]</td>
<td valign="top" align="left">[1, 2] Note: 2 is only available for decrypt operations</td>
<td valign="top" align="left">{”Min”: 64, “Max”: 4096, “Increment”: 32}</td>
</tr></tbody>
</table>

<p id="_6736ed25-7175-8499-738f-26f6bc6123e2">The underlying operations associated with different KW and KWP parameter selections are summarized in the following grid.</p>

<table id="wrap_unwrap_ops">
<name>Wrapping and Unwrapping Operations</name>
<thead><tr><th valign="top" align="left">Operation</th>
<th valign="top" align="left">Cipher</th>
<th valign="top" align="left">Underlying AES Operation</th>
</tr></thead>
<tbody><tr><td valign="top" align="left">Wrap (direction encrypt)</td>
<td valign="top" align="left">Cipher</td>
<td valign="top" align="left">AES Encrypt</td>
</tr><tr><td valign="top" align="left">Wrap (direction encrypt)</td>
<td valign="top" align="left">Inverse</td>
<td valign="top" align="left">AES Decrypt</td>
</tr><tr><td valign="top" align="left">Unwrap (direction decrypt)</td>
<td valign="top" align="left">Cipher</td>
<td valign="top" align="left">AES Decrypt</td>
</tr><tr><td valign="top" align="left">Unwrap (direction decrypt)</td>
<td valign="top" align="left">Inverse</td>
<td valign="top" align="left">AES Encrypt</td>
</tr></tbody>
</table>

<p id="_659c46c8-90b9-e71a-2fef-b1ce094464dd">The following grid outlines which properties are <strong>REQUIRED</strong>, as well as the possible values a server <strong>MAY</strong> support for each authenticated block cipher algorithm:</p>

<table id="property_grid_auth">
<name>Authenticated Block Cipher Algorithm Capabilities Applicability Grid</name>
<thead><tr><th valign="top" align="left">algorithm</th>
<th valign="top" align="left">revision</th>
<th valign="top" align="left">direction</th>
<th valign="top" align="left">keyLen</th>
<th valign="top" align="left">payloadLen</th>
<th valign="top" align="left">ivLen</th>
<th valign="top" align="left">ivGen</th>
<th valign="top" align="left">ivGenMode</th>
<th valign="top" align="left">saltGen</th>
<th valign="top" align="left">aadLen</th>
<th valign="top" align="left">tagLen</th>
</tr></thead>
<tbody><tr><td valign="top" align="left">AES-GCM</td>
<td valign="top" align="left">“1.0”</td>
<td valign="top" align="left">[“encrypt”, “decrypt”]</td>
<td valign="top" align="left">[128, 192, 256]</td>
<td valign="top" align="left">{”Min”: 0, “Max”: 65536, “Inc”: any}</td>
<td valign="top" align="left">{”Min”: 8, “Max”: 1024, “Inc”: any}</td>
<td valign="top" align="left">[“internal”, “external”]</td>
<td valign="top" align="left">[“8.2.1”, “8.2.2”]</td>
<td valign="top" align="left"/><td valign="top" align="left">{”Min”: 0, “Max”: 65536, “Inc”: any}</td>
<td valign="top" align="left">[32, 64, 96, 104, 112, 120, 128]</td>
</tr><tr><td valign="top" align="left">AES-GCM-SIV</td>
<td valign="top" align="left">“1.0”</td>
<td valign="top" align="left">[“encrypt”, “decrypt”]</td>
<td valign="top" align="left">[128, 256]</td>
<td valign="top" align="left">{”Min”: 0, “Max”: 65536, “Inc”: 8}</td>
<td valign="top" align="left"/><td valign="top" align="left"/><td valign="top" align="left"/><td valign="top" align="left"/><td valign="top" align="left">{”Min”: 0, “Max”: 65536, “Inc”: 8}</td>
<td valign="top" align="left"/></tr><tr><td valign="top" align="left">AES-XPN</td>
<td valign="top" align="left">“1.0”</td>
<td valign="top" align="left">[“encrypt”, “decrypt”]</td>
<td valign="top" align="left">[128, 192, 256]</td>
<td valign="top" align="left">{”Min”: 0, “Max”: 65536, “Inc”: any}</td>
<td valign="top" align="left"/><td valign="top" align="left">[“internal”, “external”]</td>
<td valign="top" align="left">[“8.2.1”, “8.2.2”]</td>
<td valign="top" align="left">[“internal”, “external”]</td>
<td valign="top" align="left">{”Min”: 1, “Max”: 65536, “Inc”: any}</td>
<td valign="top" align="left">[32, 64, 96, 104, 112, 120, 128]</td>
</tr><tr><td valign="top" align="left">AES-CCM</td>
<td valign="top" align="left">“1.0”</td>
<td valign="top" align="left">[“encrypt”, “decrypt”]</td>
<td valign="top" align="left">[128, 192, 256]</td>
<td valign="top" align="left">{”Min”: 0, “Max”: 256, “Inc”: 8}</td>
<td valign="top" align="left">{”Min”: 56, “Max”: 104, “Inc”: 8}</td>
<td valign="top" align="left"/><td valign="top" align="left"/><td valign="top" align="left"/><td valign="top" align="left">{”Min”: 0, “Max”: 524288, “Inc”: any}</td>
<td valign="top" align="left">[32, 48, 64, 80, 96, 112, 128]</td>
</tr></tbody>
<note id="_3f9999a7-852a-e271-751d-0807919efe39"><p id="_62e3fbe0-6243-db0d-44d9-aaf59d57d6ac">The ivGenMode property is used for AES-GCM/AES-XPN algorithms to document which IV construction method the implementation conforms to: the deterministic construction defined in SP 800-38D section 8.2.1 or the RBG-based construction defined in SP 800-38D section 8.2.2.</p>
</note></table>



<p id="_b79bcd93-7596-0234-3b72-fe6ed0de90bc">The following grid outlines which properties are <strong>REQUIRED</strong>, as well as the possible values a server <strong>MAY</strong> support for the XTS block cipher algorithm:</p>

<table id="property_grid_xts">
<name>XTS Block Cipher Algorithm Capabilities Applicability Grid</name>
<tbody><tr><td valign="top" align="left">algorithm</td>
<td valign="top" align="left">revision</td>
<td valign="top" align="left">direction</td>
<td valign="top" align="left">keyLen</td>
<td valign="top" align="left">payloadLen</td>
<td valign="top" align="left">tweakMode</td>
<td valign="top" align="left">dataUnitLen</td>
<td valign="top" align="left">dataUnitLenMatchesPayload</td>
</tr><tr><td valign="top" align="left">ACVP-AES-XTS</td>
<td valign="top" align="left">“1.0”</td>
<td valign="top" align="left">[“encrypt”, “decrypt”]</td>
<td valign="top" align="left">[128, 256]</td>
<td valign="top" align="left">{”Min”: 128, “Max”: 65536, “Inc”: 128}</td>
<td valign="top" align="left">[“hex”, “number”]</td>
<td valign="top" align="left"/><td valign="top" align="left"/></tr><tr><td valign="top" align="left">ACVP-AES-XTS</td>
<td valign="top" align="left">“2.0”</td>
<td valign="top" align="left">[“encrypt”, “decrypt”]</td>
<td valign="top" align="left">[128, 256]</td>
<td valign="top" align="left">{”Min”: 128, “Max”: 65536, “Inc”: 8}</td>
<td valign="top" align="left">[“hex”, “number”]</td>
<td valign="top" align="left">{”Min”: 128, “Max”: 65536, “Inc”: 8}</td>
<td valign="top" align="left">true, false (if this value is true, the dataUnitLen parameter <strong>SHALL</strong> not be present; if this value is false, the dataUnitLen parameter <strong>SHALL</strong> be present)</td>
</tr></tbody>
<note id="_fb6c380f-48ec-9208-e420-804964428153"><p id="_4321fe55-c8c4-6bd8-9198-711ff5a4509b">The difference in testing between ACVP-AES-XTS / “1.0” and ACVP-AES-XTS / “2.0” is the inclusion of the data unit in the “2.0” revision. The <eref type="inline" bibitemid="AES-XTS" citeas="IEEE 1619-2007"/> standard provides the concept of a data unit as a means of logically breaking apart a data stream provided to the encryption algorithm. A data unit may be larger, smaller or equal to the payload being processed. In the case of the “1.0” revision, the data unit length always matches the payload length. Thus, the “1.0” revision can be accessed via the “2.0” revision by setting the ‘dataUnitLenMatchesPayload’ field to true. Within the prompt, in “1.0”, the test group contains the payload length for the entire group. In “2.0” this is moved to the test case level and handled on a per case basis along with the data unit length. Both values may be provided even when ‘dataUnitLenMatchesPayload’ is true.</p>
</note></table>



<p id="_1bad886b-3f86-e853-aebf-17d49abbae5e">The following grid outlines which properties are <strong>REQUIRED</strong>, as well as the possible values a server <strong>MAY</strong> support for each miscellaneous block cipher algorithm:</p>

<table id="property_grid_misc">
<name>Miscellaneous Block Cipher Algorithm Capabilities Applicability Grid</name>
<thead><tr><th valign="top" align="left">algorithm</th>
<th valign="top" align="left">revision</th>
<th valign="top" align="left">direction</th>
<th valign="top" align="left">keyLen</th>
<th valign="top" align="left">payloadLen</th>
<th valign="top" align="left">keyingOption</th>
<th valign="top" align="left">overflowCounter</th>
<th valign="top" align="left">incrementalCounter</th>
<th valign="top" align="left">performCounterTests</th>
<th valign="top" align="left">tweakLen</th>
<th valign="top" align="left">capabilities</th>
</tr></thead>
<tbody><tr><td valign="top" align="left">AES-CBC-CS1</td>
<td valign="top" align="left">“1.0”</td>
<td valign="top" align="left">[“encrypt”, “decrypt”]</td>
<td valign="top" align="left">[128, 192, 256]</td>
<td valign="top" align="left">{”Min”: 128, “Max”: 65536, “Inc”: any}</td>
<td valign="top" align="left"/><td valign="top" align="left"/><td valign="top" align="left"/><td valign="top" align="left"/><td valign="top" align="left"/><td valign="top" align="left"/></tr><tr><td valign="top" align="left">AES-CBC-CS2</td>
<td valign="top" align="left">“1.0”</td>
<td valign="top" align="left">[“encrypt”, “decrypt”]</td>
<td valign="top" align="left">[128, 192, 256]</td>
<td valign="top" align="left">{”Min”: 128, “Max”: 65536, “Inc”: any}</td>
<td valign="top" align="left"/><td valign="top" align="left"/><td valign="top" align="left"/><td valign="top" align="left"/><td valign="top" align="left"/><td valign="top" align="left"/></tr><tr><td valign="top" align="left">AES-CBC-CS3</td>
<td valign="top" align="left">“1.0”</td>
<td valign="top" align="left">[“encrypt”, “decrypt”]</td>
<td valign="top" align="left">[128, 192, 256]</td>
<td valign="top" align="left">{”Min”: 128, “Max”: 65536, “Inc”: any}</td>
<td valign="top" align="left"/><td valign="top" align="left"/><td valign="top" align="left"/><td valign="top" align="left"/><td valign="top" align="left"/><td valign="top" align="left"/></tr><tr><td valign="top" align="left">AES-CTR</td>
<td valign="top" align="left">“1.0”</td>
<td valign="top" align="left">[“encrypt”, “decrypt”]</td>
<td valign="top" align="left">[128, 192, 256]</td>
<td valign="top" align="left">{”Min”: 1, “Max”: 128, “Inc”: any}</td>
<td valign="top" align="left"/><td valign="top" align="left">true, false</td>
<td valign="top" align="left">true, false</td>
<td valign="top" align="left">true, false</td>
<td valign="top" align="left"/><td valign="top" align="left"/></tr><tr><td valign="top" align="left">TDES-CTR</td>
<td valign="top" align="left">“1.0”</td>
<td valign="top" align="left">[“encrypt”, “decrypt”]</td>
<td valign="top" align="left"/><td valign="top" align="left">{”Min”: 1, “Max”: 64, “Inc”: any}</td>
<td valign="top" align="left">[1, 2] Note: 2 is only available for decrypt operations</td>
<td valign="top" align="left">true, false</td>
<td valign="top" align="left">true, false</td>
<td valign="top" align="left">true, false</td>
<td valign="top" align="left"/><td valign="top" align="left"/></tr><tr><td valign="top" align="left">AES-FF1</td>
<td valign="top" align="left">“1.0”</td>
<td valign="top" align="left">[“encrypt”, “decrypt”]</td>
<td valign="top" align="left">[128, 192, 256]</td>
<td valign="top" align="left"/><td valign="top" align="left"/><td valign="top" align="left"/><td valign="top" align="left"/><td valign="top" align="left"/><td valign="top" align="left">Domain 0-128 bits, mod 8.</td>
<td valign="top" align="left">At least one set
of capabilities is required. See <xref target="property_grid_ff_capabilities"/></td>
</tr><tr><td valign="top" align="left">AES-FF3-1</td>
<td valign="top" align="left">“1.0”</td>
<td valign="top" align="left">[“encrypt”, “decrypt”]</td>
<td valign="top" align="left">[128, 192, 256]</td>
<td valign="top" align="left"/><td valign="top" align="left"/><td valign="top" align="left"/><td valign="top" align="left"/><td valign="top" align="left"/><td valign="top" align="left"/><td valign="top" align="left">At least one set of capabilities is required. See <xref target="property_grid_ff_capabilities"/></td>
</tr></tbody>
<note id="_9e1ae588-b676-e2ef-7ca7-d26e4a19205b"><p id="_8b06f9e9-f1c9-e611-15ab-115db28abdf8">keyingOption 2 <strong>SHALL</strong> only be available for decrypt operations.</p>
</note><note id="_91d76c42-c839-e836-9e04-de1da7ff8409"><p id="_5c13bb68-d0ad-9e10-ab01-43879b24654b">AES-CTR implementations must support a payloadLen of 128-bits. For AES-CTR, when values less than 128 are supplied for payloadLen, these lengths refer to the bit sizes supported in the last incomplete block (less than 128 bits) of the cipher or plain text.</p>
</note></table>





<p id="_3213d165-0187-d5f9-7cc9-581c73f435d9">The following grid outlines which properties are <strong>REQUIRED</strong> within the capabilities object array in use for ACVP-AES-FF1 and ACVP-AES-FF3-1.</p>

<table id="property_grid_ff_capabilities">
<name>Format Preserving Encryption Capabilities Object</name>
<thead><tr><th valign="top" align="left">Property Name</th>
<th valign="top" align="left">Description</th>
<th valign="top" align="left">Type</th>
<th valign="top" align="left">Valid Values</th>
<th valign="top" align="left"/></tr></thead>
<tbody><tr><td valign="top" align="left">alphabet</td>
<td valign="top" align="left">An alphabet the IUT supports for Format Preserving Encryption.  Example “0123456789abcdefghijklmnopqrstuvwxyz”. Alphabets should be a minimum of two characters, and a maximum of 64 (all numbers and upper and lower case letters, additionally “+” and “/”).</td>
<td valign="top" align="left">string</td>
<td valign="top" align="left">Alphanumeric non repeating characters.</td>
<td valign="top" align="left"/></tr><tr><td valign="top" align="left">radix</td>
<td valign="top" align="left">The number base for this capability, should match the number of characters from the alphabet.</td>
<td valign="top" align="left">integer</td>
<td valign="top" align="left">2-64</td>
<td valign="top" align="left"/></tr><tr><td valign="top" align="left">minLen</td>
<td valign="top" align="left">The minimum payload length the IUT can support for this alphabet.</td>
<td valign="top" align="left">integer</td>
<td valign="top" align="left">2 — maxLen</td>
<td valign="top" align="left"/></tr><tr><td valign="top" align="left">maxLen</td>
<td valign="top" align="left">The maximum payload length the IUT can support for this alphabet.</td>
<td valign="top" align="left">integer</td>
<td valign="top" align="left">minLen — variable calculation based on radix and algorithm, see <eref type="inline" bibitemid="SP800-38Gr1" citeas="SP 800-38G"/>.</td>
<td valign="top" align="left"/></tr></tbody>
</table>
</clause>
</clause>

<clause id="test-vectors" obligation="normative">
<title>Test Vectors</title>
<p id="_ef670623-0489-50ed-c0a8-1be6a50cf2bd">The ACVP server provides test vectors to the ACVP client, which are then processed and returned to the ACVP server for validation. A typical ACVP validation test session would require multiple test vector sets to be downloaded and processed by the ACVP client. Each test vector set represents an individual algorithm defined during the capability exchange. This section describes the JSON schema for a test vector set used with Symmetric Block Cipher algorithms.</p>

<p id="_0e170b93-f1f9-cd13-7197-acfc2470cd66">The test vector set JSON schema is a multi-level hierarchy that contains meta data for the entire vector set as well as individual test vectors to be processed by the ACVP client. The following table describes the JSON elements at the top level of the hierarchy.</p>

<table id="_c0dbfd16-5c5e-4fd2-b91f-8e7383367aa0">
<name>Top Level Test Vector JSON Elements</name>
<thead><tr><th valign="top" align="left">JSON Values</th>
<th valign="top" align="left">Description</th>
<th valign="top" align="left">JSON Type</th>
</tr></thead>
<tbody><tr><td valign="top" align="left">acvVersion</td>
<td valign="top" align="left">Protocol version identifier</td>
<td valign="top" align="left">string</td>
</tr><tr><td valign="top" align="left">vsId</td>
<td valign="top" align="left">Unique numeric vector set identifier</td>
<td valign="top" align="left">integer</td>
</tr><tr><td valign="top" align="left">algorithm</td>
<td valign="top" align="left">Algorithm defined in the capability exchange</td>
<td valign="top" align="left">string</td>
</tr><tr><td valign="top" align="left">mode</td>
<td valign="top" align="left">Mode defined in the capability exchange</td>
<td valign="top" align="left">string</td>
</tr><tr><td valign="top" align="left">revision</td>
<td valign="top" align="left">Protocol test revision selected</td>
<td valign="top" align="left">string</td>
</tr><tr><td valign="top" align="left">testGroups</td>
<td valign="top" align="left">Array of test groups containing test data, see <xref target="tgjs"/></td>
<td valign="top" align="left">array</td>
</tr></tbody>
</table>

<p id="_94c2d2c3-b635-9bd2-3289-0ad59c04f197">An example of this would look like this</p>

<sourcecode id="_7f2d9df0-7240-f758-832b-432668f72a4a" lang="json">{
  "acvVersion": "version",
  "vsId": 1,
  "algorithm": "Alg1",
  "mode": "Mode1",
  "revision": "Revision1.0",
  "testGroups": [ ... ]
}</sourcecode>


<clause id="tgjs" obligation="normative">
<title>Test Groups</title>
<p id="_93bc699c-753e-fc74-0bc2-db442514394f">Test vector sets <strong>MUST</strong> contain one or more test groups, each sharing similar properties.  For instance, all test vectors that use the same key size would be grouped together. The testGroups element at the top level of the test vector JSON object <strong>SHALL</strong> be the array of test groups. The Test Group JSON object <strong>MUST</strong> contain meta-data that applies to all test cases within the group.  The following table describes the JSON elements that <strong>MAY</strong> appear from the server in the Test Group JSON object:</p>

<table id="vs_tg_table">
<name>Test Group JSON Object</name>
<thead><tr><th valign="top" align="left">JSON Value</th>
<th valign="top" align="left">Description</th>
<th valign="top" align="left">JSON type</th>
</tr></thead>
<tbody><tr><td valign="top" align="left">tgId</td>
<td valign="top" align="left">Numeric identifier for the test group, unique across the entire vector set.</td>
<td valign="top" align="left">integer</td>
</tr><tr><td valign="top" align="left">testType</td>
<td valign="top" align="left">The test category type (AFT, MCT or counter). See <xref target="testtypes"/> for more information about what these tests do, and how to implement them.</td>
<td valign="top" align="left">string</td>
</tr><tr><td valign="top" align="left">direction</td>
<td valign="top" align="left">The IUT processing direction: encrypt or decrypt</td>
<td valign="top" align="left">string</td>
</tr><tr><td valign="top" align="left">ivGen</td>
<td valign="top" align="left">IV generation method</td>
<td valign="top" align="left">string</td>
</tr><tr><td valign="top" align="left">ivGenMode</td>
<td valign="top" align="left">IV generation method</td>
<td valign="top" align="left">string</td>
</tr><tr><td valign="top" align="left">saltGen</td>
<td valign="top" align="left">Salt generation method</td>
<td valign="top" align="left">string</td>
</tr><tr><td valign="top" align="left">keyLen</td>
<td valign="top" align="left">Length of key in bits to use</td>
<td valign="top" align="left">integer</td>
</tr><tr><td valign="top" align="left">keyingOption</td>
<td valign="top" align="left">The TDES keying option to use</td>
<td valign="top" align="left">integer</td>
</tr><tr><td valign="top" align="left">ivLen</td>
<td valign="top" align="left">Length of IV in bits to use</td>
<td valign="top" align="left">integer</td>
</tr><tr><td valign="top" align="left">payloadLen</td>
<td valign="top" align="left">Length of plaintext or ciphertext in bits to use</td>
<td valign="top" align="left">integer</td>
</tr><tr><td valign="top" align="left">aadLen</td>
<td valign="top" align="left">Length of AAD in bits to use</td>
<td valign="top" align="left">integer</td>
</tr><tr><td valign="top" align="left">tagLen</td>
<td valign="top" align="left">Length of AEAD tag in bits to use</td>
<td valign="top" align="left">integer</td>
</tr><tr><td valign="top" align="left">alphabet</td>
<td valign="top" align="left">Characters representing the alphabet in use for the group. ACVP-AES-FF1 and ACVP-AES-FF3-1 only.</td>
<td valign="top" align="left">string</td>
</tr><tr><td valign="top" align="left">radix</td>
<td valign="top" align="left">The number base in use for the group (should match the number of characters from the alphabet. ACVP-AES-FF1 and ACVP-AES-FF3-1 only.</td>
<td valign="top" align="left">integer</td>
</tr><tr><td valign="top" align="left">tweakMode</td>
<td valign="top" align="left">Indicates the format of the tweak value input for AES-XTS. A value of ‘hex’ indicates that the test cases in the test group will contain a ‘tweakValue’ element with a 32-character hexadecimal string for a value. A value of ‘number’ indicates that the test cases in the test group will contain a ‘sequenceNumber’ (Data Unit Sequence Number) element with an integer value between 0 and 255.</td>
<td valign="top" align="left">string</td>
</tr><tr><td valign="top" align="left">tests</td>
<td valign="top" align="left">Array of individual test case JSON objects, which are defined in <xref target="tcjs"/></td>
<td valign="top" align="left">array of testCase objects</td>
</tr></tbody>
</table>

<p id="_8e58889d-04ae-275d-d783-2e96079f0654">Some properties <strong>MUST</strong> appear in the prompt file from the server for every testGroup object. They are as follows:</p>

<ul id="_92956834-b666-b1f9-f156-849ba7276aa8"><li><p id="_fe1d1f74-2bba-d457-cf93-62a57364cb48">tgId</p>
</li>
<li><p id="_571b1563-0d68-217a-40ea-85e057816382">direction</p>
</li>
<li><p id="_c8eff3b0-f54b-5c97-4de3-ec8da36b0254">testType</p>
</li>
<li><p id="_2a733d38-0d13-0f10-d1ee-70a2ebf2afb6">tests</p>
</li>
</ul>

<p id="_53a97993-8c1b-3daf-0970-4b374d36c94f">The other properties <strong>MAY</strong> appear depending on the algorithm selected for the test vector set. The following grid defines the <strong>REQUIRED</strong> properties for each standard block cipher, as well as the valid values a server <strong>MAY</strong> use:</p>

<table id="property_grid_prompt">
<name>Prompt Test Group Block Cipher Applicability Grid</name>
<thead><tr><th valign="top" align="left">algorithm</th>
<th valign="top" align="left">revision</th>
<th valign="top" align="left">keyLen</th>
<th valign="top" align="left">keyingOption</th>
</tr></thead>
<tbody><tr><td valign="top" align="left">ACVP-AES-ECB</td>
<td valign="top" align="left">“1.0”</td>
<td valign="top" align="left">128, 192, 256</td>
<td valign="top" align="left"/></tr><tr><td valign="top" align="left">ACVP-AES-CBC</td>
<td valign="top" align="left">“1.0”</td>
<td valign="top" align="left">128, 192, 256</td>
<td valign="top" align="left"/></tr><tr><td valign="top" align="left">ACVP-AES-OFB</td>
<td valign="top" align="left">“1.0”</td>
<td valign="top" align="left">128, 192, 256</td>
<td valign="top" align="left"/></tr><tr><td valign="top" align="left">ACVP-AES-CFB1</td>
<td valign="top" align="left">“1.0”</td>
<td valign="top" align="left">128, 192, 256</td>
<td valign="top" align="left"/></tr><tr><td valign="top" align="left">ACVP-AES-CFB8</td>
<td valign="top" align="left">“1.0”</td>
<td valign="top" align="left">128, 192, 256</td>
<td valign="top" align="left"/></tr><tr><td valign="top" align="left">ACVP-AES-CFB128</td>
<td valign="top" align="left">“1.0”</td>
<td valign="top" align="left">128, 192, 256</td>
<td valign="top" align="left"/></tr><tr><td valign="top" align="left">ACVP-AES-FF1</td>
<td valign="top" align="left">“1.0”</td>
<td valign="top" align="left">128, 192, 256</td>
<td valign="top" align="left"/></tr><tr><td valign="top" align="left">ACVP-AES-FF3-1</td>
<td valign="top" align="left">“1.0”</td>
<td valign="top" align="left">128, 192, 256</td>
<td valign="top" align="left"/></tr><tr><td valign="top" align="left">ACVP-TDES-ECB</td>
<td valign="top" align="left">“1.0”</td>
<td valign="top" align="left"/><td valign="top" align="left">1, 2</td>
</tr><tr><td valign="top" align="left">ACVP-TDES-CBC</td>
<td valign="top" align="left">“1.0”</td>
<td valign="top" align="left"/><td valign="top" align="left">1, 2</td>
</tr><tr><td valign="top" align="left">ACVP-TDES-CBCI</td>
<td valign="top" align="left">“1.0”</td>
<td valign="top" align="left"/><td valign="top" align="left">1, 2</td>
</tr><tr><td valign="top" align="left">ACVP-TDES-CFB1</td>
<td valign="top" align="left">“1.0”</td>
<td valign="top" align="left"/><td valign="top" align="left">1, 2</td>
</tr><tr><td valign="top" align="left">ACVP-TDES-CFB8</td>
<td valign="top" align="left">“1.0”</td>
<td valign="top" align="left"/><td valign="top" align="left">1, 2</td>
</tr><tr><td valign="top" align="left">ACVP-TDES-CFB64</td>
<td valign="top" align="left">“1.0”</td>
<td valign="top" align="left"/><td valign="top" align="left">1, 2</td>
</tr><tr><td valign="top" align="left">ACVP-TDES-CFBP1</td>
<td valign="top" align="left">“1.0”</td>
<td valign="top" align="left"/><td valign="top" align="left">1, 2</td>
</tr><tr><td valign="top" align="left">ACVP-TDES-CFBP8</td>
<td valign="top" align="left">“1.0”</td>
<td valign="top" align="left"/><td valign="top" align="left">1, 2</td>
</tr><tr><td valign="top" align="left">ACVP-TDES-CFBP64</td>
<td valign="top" align="left">“1.0”</td>
<td valign="top" align="left"/><td valign="top" align="left">1, 2</td>
</tr><tr><td valign="top" align="left">ACVP-TDES-OFB</td>
<td valign="top" align="left">“1.0”</td>
<td valign="top" align="left"/><td valign="top" align="left">1, 2</td>
</tr><tr><td valign="top" align="left">ACVP-TDES-OFBI</td>
<td valign="top" align="left">“1.0”</td>
<td valign="top" align="left"/><td valign="top" align="left">1, 2</td>
</tr></tbody>
</table>

<p id="_304e522e-acce-bf22-fb40-d7f7143d9b47">The following grid defines when each property is <strong>REQUIRED</strong> from a server for each authenticated block cipher:</p>

<table id="property_grid_prompt_auth">
<name>Prompt Test Group Authenticated Block Cipher Applicability Grid</name>
<thead><tr><th valign="top" align="left">algorithm</th>
<th valign="top" align="left">revision</th>
<th valign="top" align="left">keyLen</th>
<th valign="top" align="left">ivGen</th>
<th valign="top" align="left">ivGenMode</th>
<th valign="top" align="left">saltGen</th>
<th valign="top" align="left">ivLen</th>
<th valign="top" align="left">payloadLen</th>
<th valign="top" align="left">aadLen</th>
<th valign="top" align="left">tagLen</th>
<th valign="top" align="left">saltLen</th>
</tr></thead>
<tbody><tr><td valign="top" align="left">ACVP-AES-GCM</td>
<td valign="top" align="left">“1.0”</td>
<td valign="top" align="left">128, 192, 256</td>
<td valign="top" align="left">“internal”, “external”</td>
<td valign="top" align="left">“8.2.1”, “8.2.2”</td>
<td valign="top" align="left"/><td valign="top" align="left">within domain</td>
<td valign="top" align="left">within domain</td>
<td valign="top" align="left">within domain</td>
<td valign="top" align="left">within domain</td>
<td valign="top" align="left"/></tr><tr><td valign="top" align="left">ACVP-AES-GCM-SIV</td>
<td valign="top" align="left">“1.0”</td>
<td valign="top" align="left">128, 256</td>
<td valign="top" align="left"/><td valign="top" align="left"/><td valign="top" align="left"/><td valign="top" align="left">96</td>
<td valign="top" align="left">within domain</td>
<td valign="top" align="left">within domain</td>
<td valign="top" align="left">128</td>
<td valign="top" align="left"/></tr><tr><td valign="top" align="left">ACVP-AES-XPN</td>
<td valign="top" align="left">“1.0”</td>
<td valign="top" align="left">128, 192, 256</td>
<td valign="top" align="left">“internal”, “external”</td>
<td valign="top" align="left">“8.2.1”, “8.2.2”</td>
<td valign="top" align="left">“internal”, “external”</td>
<td valign="top" align="left">96</td>
<td valign="top" align="left">within domain</td>
<td valign="top" align="left">within domain</td>
<td valign="top" align="left">within domain</td>
<td valign="top" align="left">96</td>
</tr><tr><td valign="top" align="left">ACVP-AES-CCM</td>
<td valign="top" align="left">“1.0”</td>
<td valign="top" align="left">128, 192, 256</td>
<td valign="top" align="left"/><td valign="top" align="left"/><td valign="top" align="left"/><td valign="top" align="left">within domain</td>
<td valign="top" align="left">within domain</td>
<td valign="top" align="left">within domain</td>
<td valign="top" align="left">within domain</td>
<td valign="top" align="left"/></tr></tbody>
<note id="_276033a2-c62b-27a7-349b-8d8ceb19e211"><p id="_beb622ed-8ccc-d6a4-60b8-224665ef3bec">The particular values of a domain are <strong>REQUIRED</strong> to be an integer element of the domain present in the registration used. The ACVP server <strong>MAY</strong> select predetermined or random values with particular features (ex. on a block boundary, or not on a block boundary) within the domain the client provided in the registration.</p>
</note></table>



<p id="_5a6472d6-42db-9c81-0d78-ee67bbd18ae2">The following grid defines when each property is <strong>REQUIRED</strong> from a server for a key-wrap block cipher:</p>

<table id="property_grid_prompt_kw">
<name>Prompt Test Group Key-Wrap Block Cipher Applicability Grid</name>
<thead><tr><th valign="top" align="left">algorithm</th>
<th valign="top" align="left">revision</th>
<th valign="top" align="left">keyLen</th>
<th valign="top" align="left">kwCipher</th>
<th valign="top" align="left">payloadLen</th>
</tr></thead>
<tbody><tr><td valign="top" align="left">ACVP-AES-KW</td>
<td valign="top" align="left">“1.0”</td>
<td valign="top" align="left">128, 192, 256</td>
<td valign="top" align="left">“cipher”, “inverse”</td>
<td valign="top" align="left">within domain</td>
</tr><tr><td valign="top" align="left">ACVP-AES-KWP</td>
<td valign="top" align="left">“1.0”</td>
<td valign="top" align="left">128, 192, 256</td>
<td valign="top" align="left">“cipher”, “inverse”</td>
<td valign="top" align="left">within domain</td>
</tr><tr><td valign="top" align="left">ACVP-TDES-KW</td>
<td valign="top" align="left">“1.0”</td>
<td valign="top" align="left"/><td valign="top" align="left">“cipher”, “inverse”</td>
<td valign="top" align="left">within domain</td>
</tr></tbody>
<note id="_7a7ee951-1fb5-674d-2b27-dbdd7bbbfbac"><p id="_23f7ccdd-da9b-bbad-bed7-850cafe67770">The particular values of a domain are <strong>REQUIRED</strong> to be an integer element of the domain present in the registration used. The ACVP server <strong>MAY</strong> select predetermined or random values with particular features (ex. on a block boundary, or not on a block boundary) within the domain the client provided in the registration.</p>
</note></table>



<p id="_ce148b10-bf50-45d6-160b-a9eb73b25bf3">The following grid defines when each property is <strong>REQUIRED</strong> from a server for the miscellaneous block ciphers:</p>

<table id="property_grid_prompt_misc">
<name>Prompt Test Group Miscellaneous Block Cipher Applicability Grid</name>
<thead><tr><th valign="top" align="left">algorithm</th>
<th valign="top" align="left">revision</th>
<th valign="top" align="left">keyLen</th>
<th valign="top" align="left">keyingOption</th>
<th valign="top" align="left">incremental</th>
<th valign="top" align="left">overflow</th>
<th valign="top" align="left">tweakMode</th>
<th valign="top" align="left">payloadLen</th>
</tr></thead>
<tbody><tr><td valign="top" align="left">ACVP-AES-CBC-CS1</td>
<td valign="top" align="left">“1.0”</td>
<td valign="top" align="left">128, 192, 256</td>
<td valign="top" align="left"/><td valign="top" align="left"/><td valign="top" align="left"/><td valign="top" align="left"/><td valign="top" align="left"/></tr><tr><td valign="top" align="left">ACVP-AES-CBC-CS2</td>
<td valign="top" align="left">“1.0”</td>
<td valign="top" align="left">128, 192, 256</td>
<td valign="top" align="left"/><td valign="top" align="left"/><td valign="top" align="left"/><td valign="top" align="left"/><td valign="top" align="left"/></tr><tr><td valign="top" align="left">ACVP-AES-CBC-CS3</td>
<td valign="top" align="left">“1.0”</td>
<td valign="top" align="left">128, 192, 256</td>
<td valign="top" align="left"/><td valign="top" align="left"/><td valign="top" align="left"/><td valign="top" align="left"/><td valign="top" align="left"/></tr><tr><td valign="top" align="left">ACVP-AES-CTR</td>
<td valign="top" align="left">“1.0”</td>
<td valign="top" align="left">128, 192, 256</td>
<td valign="top" align="left"/><td valign="top" align="left">true, false</td>
<td valign="top" align="left">true, false</td>
<td valign="top" align="left"/><td valign="top" align="left"/></tr><tr><td valign="top" align="left">ACVP-AES-XTS</td>
<td valign="top" align="left">“1.0”</td>
<td valign="top" align="left">128, 256</td>
<td valign="top" align="left"/><td valign="top" align="left"/><td valign="top" align="left"/><td valign="top" align="left">“hex”, “number”</td>
<td valign="top" align="left">within domain</td>
</tr><tr><td valign="top" align="left">ACVP-AES-XTS</td>
<td valign="top" align="left">“2.0”</td>
<td valign="top" align="left">128, 256</td>
<td valign="top" align="left"/><td valign="top" align="left"/><td valign="top" align="left"/><td valign="top" align="left">“hex”, “number”</td>
<td valign="top" align="left"/></tr><tr><td valign="top" align="left">ACVP-TDES-CTR</td>
<td valign="top" align="left">“1.0”</td>
<td valign="top" align="left"/><td valign="top" align="left">1, 2</td>
<td valign="top" align="left">true, false</td>
<td valign="top" align="left">true, false</td>
<td valign="top" align="left"/><td valign="top" align="left"/></tr><tr><td valign="top" align="left">ACVP-AES-FF1</td>
<td valign="top" align="left">“1.0”</td>
<td valign="top" align="left">128, 192, 256</td>
<td valign="top" align="left"/><td valign="top" align="left"/><td valign="top" align="left"/><td valign="top" align="left"/><td valign="top" align="left"/></tr><tr><td valign="top" align="left">ACVP-AES-FF3-1</td>
<td valign="top" align="left">“1.0”</td>
<td valign="top" align="left">128, 192, 256</td>
<td valign="top" align="left"/><td valign="top" align="left"/><td valign="top" align="left"/><td valign="top" align="left"/><td valign="top" align="left"/></tr></tbody>
<note id="_1a9cd8bc-8733-a0a6-c082-0317a0f6821f"><p id="_5f817afe-7b1b-be27-7184-438667c3f26b">The particular values of a domain are <strong>REQUIRED</strong> to be an integer element of the domain present in the registration used. The ACVP server <strong>MAY</strong> select predetermined or random values with particular features (ex. on a block boundary, or not on a block boundary) within the domain the client provided in the registration.</p>
</note></table>


</clause>

<clause id="tcjs" obligation="normative">
<title>Test Cases</title>
<p id="_da86c12c-edcd-be9e-3c39-7a73bedbd7d1">Each test group <strong>SHALL</strong> contain an array of one or more test cases. Each test case is a JSON object that represents a single case to be processed by the ACVP client. The following table describes the JSON elements for each test case.</p>

<table id="vs_tc_table">
<name>Test Case JSON Object</name>
<thead><tr><th valign="top" align="left">JSON Value</th>
<th valign="top" align="left">Description</th>
<th valign="top" align="left">JSON type</th>
</tr></thead>
<tbody><tr><td valign="top" align="left">tcId</td>
<td valign="top" align="left">Numeric identifier for the test case, unique across the entire vector set.</td>
<td valign="top" align="left">integer</td>
</tr><tr><td valign="top" align="left">key</td>
<td valign="top" align="left">Encryption key to use for AES</td>
<td valign="top" align="left">string (hex)</td>
</tr><tr><td valign="top" align="left">key1, key2, key3</td>
<td valign="top" align="left">Encryption keys to use for TDES</td>
<td valign="top" align="left">string (hex)</td>
</tr><tr><td valign="top" align="left">iv</td>
<td valign="top" align="left">IV to use</td>
<td valign="top" align="left">string (hex)</td>
</tr><tr><td valign="top" align="left">tweak</td>
<td valign="top" align="left">Tweak used to form an IV for AES-FF1 and AES-FF3-1</td>
<td valign="top" align="left">string (hex)</td>
</tr><tr><td valign="top" align="left">tweakLen</td>
<td valign="top" align="left">Length of the tweak for AES-FF1 and AES-FF3-1</td>
<td valign="top" align="left">integer</td>
</tr><tr><td valign="top" align="left">tweakValue</td>
<td valign="top" align="left">Tweak value used to form an IV for AES-XTS when the tweakMode for the group is ‘hex’. A 32-character hexadecimal string.</td>
<td valign="top" align="left">string (hex)</td>
</tr><tr><td valign="top" align="left">sequenceNumber</td>
<td valign="top" align="left">(Data Unit Sequence Number) Integer used to form an IV for AES-XTS when the tweakMode for the group is ‘number’. An integer between 0 and 255.</td>
<td valign="top" align="left">integer</td>
</tr><tr><td valign="top" align="left">salt</td>
<td valign="top" align="left">The salt to use in AES-XPN (required for AES-XPN only)</td>
<td valign="top" align="left">string (hex)</td>
</tr><tr><td valign="top" align="left">pt</td>
<td valign="top" align="left">Plaintext to use</td>
<td valign="top" align="left">string (hex)</td>
</tr><tr><td valign="top" align="left">ct</td>
<td valign="top" align="left">Ciphertext to use</td>
<td valign="top" align="left">string (hex)</td>
</tr><tr><td valign="top" align="left">payloadLen</td>
<td valign="top" align="left">The length of the provided Plaintext or Ciphertext in bits. Only the most significant ‘payloadLen’ bits will be used.</td>
<td valign="top" align="left">integer</td>
</tr><tr><td valign="top" align="left">dataUnitLen</td>
<td valign="top" align="left">Length of the data unit in bits for ACVP-AES-XTS</td>
<td valign="top" align="left">integer</td>
</tr><tr><td valign="top" align="left">aad</td>
<td valign="top" align="left">AAD to use for AEAD algorithms</td>
<td valign="top" align="left">string (hex)</td>
</tr><tr><td valign="top" align="left">tag</td>
<td valign="top" align="left">Tag to use for AEAD algorithms</td>
<td valign="top" align="left">string (hex)</td>
</tr></tbody>
<note id="_54045a45-ac62-c09c-198e-6188041249ec"><p id="_1ac07cf6-559d-391c-550a-be94ffae00af">The applicability of each test case property is dependent on the test group and test vector (algorithm) properties. Each test type within the test group requires specific operations to be performed and thus specific data returned to the server. Consult <xref target="testtypes"/> for more information. The tcId property <strong>MUST</strong> appear within every test case sent to and from the server.</p>
</note></table>



<p id="_7648aa86-0747-14f5-576c-fbc80583fd23">The following grid identifies the algorithms whose test case JSON objects will contain the ‘payloadLen’ property and the valid values a servery <strong>MAY</strong> use.</p>

<table id="vs_payloadlen_table">
<name>Applicability of the ‘payloadLen’ Property</name>
<thead><tr><th valign="top" align="left">Algorithm</th>
<th valign="top" align="left">Revision</th>
<th valign="top" align="left">Applicability</th>
<th valign="top" align="left">payloadLen</th>
</tr></thead>
<tbody><tr><td valign="top" align="left">ACVP-AES-CBC-CS1</td>
<td valign="top" align="left">“1.0”</td>
<td valign="top" align="left">for all test cases</td>
<td valign="top" align="left">within domain (see <xref target="property_grid_misc"/>)</td>
</tr><tr><td valign="top" align="left">ACVP-AES-CBC-CS2</td>
<td valign="top" align="left">“1.0”</td>
<td valign="top" align="left">for all test cases</td>
<td valign="top" align="left">within domain (see <xref target="property_grid_misc"/>)</td>
</tr><tr><td valign="top" align="left">ACVP-AES-CBC-CS3</td>
<td valign="top" align="left">“1.0”</td>
<td valign="top" align="left">for all test cases</td>
<td valign="top" align="left">within domain (see <xref target="property_grid_misc"/>)</td>
</tr><tr><td valign="top" align="left">ACVP-AES-CFB1</td>
<td valign="top" align="left">“1.0”</td>
<td valign="top" align="left">for all test cases</td>
<td valign="top" align="left">1</td>
</tr><tr><td valign="top" align="left">ACVP-AES-CTR</td>
<td valign="top" align="left">“1.0”</td>
<td valign="top" align="left">for the test cases of some test groups, but not others</td>
<td valign="top" align="left">within domain (see <xref target="property_grid_misc"/>)</td>
</tr><tr><td valign="top" align="left">ACVP-AES-XTS</td>
<td valign="top" align="left">“2.0”</td>
<td valign="top" align="left">for all test cases</td>
<td valign="top" align="left">within domain (see <xref target="property_grid_xts"/>)</td>
</tr></tbody>
<note id="_9f2a10cd-80e2-e831-e613-4af2c5f6abe4"><p id="_3686486b-590e-e0c3-9da2-00a36ec2ca9e"><xref target="vs_payloadlen_table"/> identifies the algorithms for which the ‘payloadLen’ property will be present as part of the test case JSON objects. Please also be aware that other algorithms include the ‘payloadLen’ property as part of the test group JSON object. For more information, see <xref target="property_grid_prompt_auth"/>, <xref target="property_grid_prompt_kw"/>, and <xref target="property_grid_prompt_misc"/>.</p>
</note></table>


</clause>
</clause>

<clause id="vector_responses" obligation="normative">
<title>Test Vector Responses</title>
<p id="_a4c49267-d8c2-8023-e93c-b039cd08694b">After the ACVP client downloads and processes a vector set, it <strong>SHALL</strong> send the response vectors back to the ACVP server within the alloted timeframe. The following table describes the JSON object that represents a vector set response.</p>

<table id="vr_top_table">
<name>Vector Set Response JSON Object</name>
<thead><tr><th valign="top" align="left">JSON Value</th>
<th valign="top" align="left">Description</th>
<th valign="top" align="left">JSON type</th>
</tr></thead>
<tbody><tr><td valign="top" align="left">acvVersion</td>
<td valign="top" align="left">Protocol version identifier</td>
<td valign="top" align="left">string</td>
</tr><tr><td valign="top" align="left">vsId</td>
<td valign="top" align="left">Unique numeric identifier for the vector set</td>
<td valign="top" align="left">integer</td>
</tr><tr><td valign="top" align="left">testGroups</td>
<td valign="top" align="left">Array of JSON objects that represent each test vector group. See <xref target="vr_group_table"/></td>
<td valign="top" align="left">array of testGroup objects</td>
</tr></tbody>
</table>

<p id="_60027885-a8db-fdb3-63c0-4abd9a822b45">The testGroup Response section is used to organize the ACVP client response in a similar manner to how it receives vectors. Several algorithms <strong>SHALL</strong> require the client to send back group level properties in its response. This structure helps accommodate that.</p>

<table id="vr_group_table">
<name>Vector Set Group Response JSON Object</name>
<thead><tr><th valign="top" align="left">JSON Value</th>
<th valign="top" align="left">Description</th>
<th valign="top" align="left">JSON type</th>
</tr></thead>
<tbody><tr><td valign="top" align="left">tgId</td>
<td valign="top" align="left">The test group identifier</td>
<td valign="top" align="left">integer</td>
</tr><tr><td valign="top" align="left">tests</td>
<td valign="top" align="left">The tests associated to the group specified in tgId</td>
<td valign="top" align="left">array of testCase objects</td>
</tr></tbody>
</table>

<p id="_c8306001-3fb2-efde-d886-aa00e9dd32ef">Each test case is a JSON object that represents a single test object to be processed by the ACVP client. The following table describes the JSON elements for each test case object.</p>

<table id="vs_tr_table">
<name>Test Case Results JSON Object</name>
<thead><tr><th valign="top" align="left">JSON Value</th>
<th valign="top" align="left">Description</th>
<th valign="top" align="left">JSON type</th>
</tr></thead>
<tbody><tr><td valign="top" align="left">tcId</td>
<td valign="top" align="left">Numeric identifier for the test case, unique across the entire vector set.</td>
<td valign="top" align="left">integer</td>
</tr><tr><td valign="top" align="left">pt</td>
<td valign="top" align="left">The IUT’s pt response to a decrypt test</td>
<td valign="top" align="left">string (hex)</td>
</tr><tr><td valign="top" align="left">ct</td>
<td valign="top" align="left">The IUT’s ct response to an encrypt test</td>
<td valign="top" align="left">string (hex)</td>
</tr><tr><td valign="top" align="left">testPassed</td>
<td valign="top" align="left">Some test cases included with decrypt operations in AES-GCM, AES-CCM, AES-XPN, AES-KW, AES-KWP, and TDES-KW will have expected failures.</td>
<td valign="top" align="left">boolean</td>
</tr><tr><td valign="top" align="left">resultsArray</td>
<td valign="top" align="left">Array of JSON objects that represent each iteration of a Monte Carlo Test. Each iteration will contain the key(s), pt, ct and iv</td>
<td valign="top" align="left">array of objects containing pt, ct and iv (except for ECB mode)</td>
</tr></tbody>
<note id="_191efaab-952d-5b41-a424-9424d1b79525"><p id="_b5c3853c-9567-8fac-dcf6-289a6b69cb38">The tcId <strong>MUST</strong> be included in every test case object sent between the client and the server.</p>
</note></table>


</clause>

<clause id="security" obligation="normative">
<title>Security Considerations</title>
<p id="_e00ec061-56a6-9331-9b16-9e2a17a53e3f">There are no additional security considerations outside of those outlined in the ACVP document.</p>
</clause>











</sections><annex id="_6fe3013e-011a-4e5b-9b47-70ada1dbe8cd" obligation="normative">
<title>References</title>
<references id="_references" normative="true" obligation="informative"> <bibitem id="RFC2119" type="standard">  <fetched>2022-03-15</fetched>  
<title format="text/plain" language="en" script="Latn">Key words for use in RFCs to Indicate Requirement Levels</title>
  <uri type="xml">https://raw.githubusercontent.com/relaton/relaton-data-ietf/master/data/reference.RFC.2119.xml</uri>  <uri type="src">https://www.rfc-editor.org/info/rfc2119</uri>  <docidentifier type="RFC" primary="true">RFC 2119</docidentifier>  <docidentifier type="RFC" scope="anchor">RFC2119</docidentifier>  <docidentifier type="DOI">10.17487/RFC2119</docidentifier>  <docnumber>RFC2119</docnumber>  <date type="published">    <on>1997-03</on>  </date>  <contributor>    <role type="publisher"/>    <organization>      
<name>Internet Engineering Task Force</name>
      <abbreviation>IETF</abbreviation>    </organization>  </contributor>  <contributor>    <role type="author"/>    <person>      
<name>        <completename language="en">S. Bradner</completename>      </name>
    </person>  </contributor>  <language>en</language>  <script>Latn</script>  <abstract format="text/html" language="en" script="Latn">    <p id="_225c9bf9-ec8f-c4e1-a913-7f4c8a598a18">In many standards track documents several words are used to signify the requirements in the specification. These words are often capitalized. This document defines these words as they should be interpreted in IETF documents. This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</p>
  </abstract>  <series type="main">    
<title format="text/plain" language="en" script="Latn">BCP</title>
    <number>14</number>  </series>  <series type="main">    
<title format="text/plain" language="en" script="Latn">RFC</title>
    <number>2119</number>  </series></bibitem>
 <bibitem id="RFC8174" type="standard">  <fetched>2022-03-15</fetched>  
<title format="text/plain" language="en" script="Latn">Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
  <uri type="xml">https://raw.githubusercontent.com/relaton/relaton-data-ietf/master/data/reference.RFC.8174.xml</uri>  <uri type="src">https://www.rfc-editor.org/info/rfc8174</uri>  <docidentifier type="RFC" primary="true">RFC 8174</docidentifier>  <docidentifier type="RFC" scope="anchor">RFC8174</docidentifier>  <docidentifier type="DOI">10.17487/RFC8174</docidentifier>  <docnumber>RFC8174</docnumber>  <date type="published">    <on>2017-05</on>  </date>  <contributor>    <role type="publisher"/>    <organization>      
<name>Internet Engineering Task Force</name>
      <abbreviation>IETF</abbreviation>    </organization>  </contributor>  <contributor>    <role type="author"/>    <person>      
<name>        <completename language="en">B. Leiba</completename>      </name>
    </person>  </contributor>  <language>en</language>  <script>Latn</script>  <abstract format="text/html" language="en" script="Latn">    <p id="_c145fb8f-9d4c-bea0-46fb-f9877ce7066e">RFC 2119 specifies common key words that may be used in protocol specifications. This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the defined special meanings.</p>
  </abstract>  <series type="main">    
<title format="text/plain" language="en" script="Latn">BCP</title>
    <number>14</number>  </series>  <series type="main">    
<title format="text/plain" language="en" script="Latn">RFC</title>
    <number>8174</number>  </series></bibitem>
 <bibitem id="FIPS-197" type="standard">  <fetched>2022-03-15</fetched>  
<title format="text/plain" language="en" script="Latn">Advanced Encryption Standard (AES)</title>
  <uri type="src">https://csrc.nist.gov/publications/detail/fips/197/final</uri>  <uri type="doi">https://doi.org/10.6028/NIST.FIPS.197</uri>  <docidentifier type="NIST" primary="true">FIPS 197</docidentifier>  <date type="published">    <on>2001-11</on>  </date>  <date type="issued">    <on>2001-11</on>  </date>  <contributor>    <role type="author"/>    <organization>      
<name>National Institute of Standards and Technology</name>
    </organization>  </contributor>  <language>en</language>  <script>Latn</script>  <status>    <stage>final</stage>    <substage>active</substage>  </status>  <copyright>    <from>2001</from>    <owner>      <organization>        
<name>National Institute of Standards and Technology</name>
        <abbreviation>NIST</abbreviation>        <uri>www.nist.gov</uri>      </organization>    </owner>  </copyright>  <place>Gaithersburg, MD</place>  <keyword>block cipher</keyword>  <keyword>ciphertext</keyword>  <keyword>cryptographic algorithm</keyword>  <keyword>cryptographic keys</keyword>  <keyword>decryption</keyword>  <keyword>algorithm</keyword>  <keyword>encryption</keyword></bibitem>
 <bibitem id="SP800-38A" type="standard">  <fetched>2022-03-15</fetched>  
<title format="text/plain" language="en" script="Latn">Recommendation for Block Cipher Modes of Operation — Methods and Techniques</title>
  <uri type="src">https://csrc.nist.gov/publications/detail/sp/800-38a/final</uri>  <uri type="doi">https://doi.org/10.6028/NIST.SP.800-38A</uri>  <docidentifier type="NIST" primary="true">SP 800-38A</docidentifier>  <date type="published">    <on>2001-12</on>  </date>  <date type="issued">    <on>2001-12</on>  </date>  <contributor>    <role type="author"/>    <person>      
<name>        <completename language="en" script="Latn">Morris J. Dworkin</completename>      </name>
      <affiliation>        <organization>          
<name>National Institute of Standards and Technology</name>
          <abbreviation>NIST</abbreviation>        </organization>      </affiliation>    </person>  </contributor>  <language>en</language>  <script>Latn</script>  <status>    <stage>final</stage>    <substage>active</substage>  </status>  <copyright>    <from>2001</from>    <owner>      <organization>        
<name>National Institute of Standards and Technology</name>
        <abbreviation>NIST</abbreviation>        <uri>www.nist.gov</uri>      </organization>    </owner>  </copyright>  <place>Gaithersburg, MD</place>  <keyword>block cipher</keyword>  <keyword>cryptography</keyword>  <keyword>encryption</keyword>  <keyword>mode of operation</keyword></bibitem>
 <bibitem id="SP800-38A-Add" type="standard">  <fetched>2022-03-15</fetched>  
<title format="text/plain" language="en" script="Latn">Recommendation for Block Cipher Modes of Operation — Methods and Techniques</title>
  <uri type="src">https://csrc.nist.gov/publications/detail/sp/800-38a/final</uri>  <uri type="doi">https://doi.org/10.6028/NIST.SP.800-38A</uri>  <docidentifier type="NIST" primary="true">SP 800-38A</docidentifier>  <date type="published">    <on>2001-12</on>  </date>  <date type="issued">    <on>2001-12</on>  </date>  <contributor>    <role type="author"/>    <person>      
<name>        <completename language="en" script="Latn">Morris J. Dworkin</completename>      </name>
      <affiliation>        <organization>          
<name>National Institute of Standards and Technology</name>
          <abbreviation>NIST</abbreviation>        </organization>      </affiliation>    </person>  </contributor>  <language>en</language>  <script>Latn</script>  <status>    <stage>final</stage>    <substage>active</substage>  </status>  <copyright>    <from>2001</from>    <owner>      <organization>        
<name>National Institute of Standards and Technology</name>
        <abbreviation>NIST</abbreviation>        <uri>www.nist.gov</uri>      </organization>    </owner>  </copyright>  <place>Gaithersburg, MD</place>  <keyword>block cipher</keyword>  <keyword>cryptography</keyword>  <keyword>encryption</keyword>  <keyword>mode of operation</keyword></bibitem>
 <bibitem id="SP800-38C" type="standard">  <fetched>2022-03-15</fetched>  
<title format="text/plain" language="en" script="Latn">Recommendation for Block Cipher Modes of Operation — the CCM Mode for Authentication and Confidentiality</title>
  <uri type="src">https://csrc.nist.gov/publications/detail/sp/800-38c/final</uri>  <uri type="doi">https://doi.org/10.6028/NIST.SP.800-38C</uri>  <docidentifier type="NIST" primary="true">SP 800-38C</docidentifier>  <date type="published">    <on>2007-07</on>  </date>  <date type="updated">    <on>2007-07</on>  </date>  <date type="issued">    <on>2004-05</on>  </date>  <contributor>    <role type="author"/>    <person>      
<name>        <completename language="en" script="Latn">Morris J. Dworkin</completename>      </name>
      <affiliation>        <organization>          
<name>National Institute of Standards and Technology</name>
          <abbreviation>NIST</abbreviation>        </organization>      </affiliation>    </person>  </contributor>  <language>en</language>  <script>Latn</script>  <status>    <stage>final</stage>    <substage>active</substage>  </status>  <copyright>    <from>2007</from>    <owner>      <organization>        
<name>National Institute of Standards and Technology</name>
        <abbreviation>NIST</abbreviation>        <uri>www.nist.gov</uri>      </organization>    </owner>  </copyright>  <relation type="obsoletes">    <description format="text/plain" language="en" script="Latn">supersedes</description>    <bibitem>      <formattedref format="text/plain" language="en" script="Latn">SP 800-38C</formattedref>      <uri type="src">https://csrc.nist.gov/publications/detail/sp/800-38c/archive/2004-05-12</uri>    </bibitem>
  </relation>  <place>Gaithersburg, MD</place>  <keyword>authentication</keyword>  <keyword>block cipher</keyword>  <keyword>confidentiality</keyword>  <keyword>cryptography</keyword>  <keyword>encryption</keyword>  <keyword>information security</keyword>  <keyword>message authentication code</keyword>  <keyword>authenticated encryption</keyword>  <keyword>mode of operation</keyword></bibitem>
 <bibitem id="SP800-38D" type="standard">  <fetched>2022-03-15</fetched>  
<title format="text/plain" language="en" script="Latn">Recommendation for Block Cipher Modes of Operation — Galois/Counter Mode (GCM) and GMAC</title>
  <uri type="src">https://csrc.nist.gov/publications/detail/sp/800-38d/final</uri>  <uri type="doi">https://doi.org/10.6028/NIST.SP.800-38D</uri>  <docidentifier type="NIST" primary="true">SP 800-38D</docidentifier>  <date type="published">    <on>2007-11</on>  </date>  <date type="issued">    <on>2007-11</on>  </date>  <contributor>    <role type="author"/>    <person>      
<name>        <completename language="en" script="Latn">Morris J. Dworkin</completename>      </name>
      <affiliation>        <organization>          
<name>National Institute of Standards and Technology</name>
          <abbreviation>NIST</abbreviation>        </organization>      </affiliation>    </person>  </contributor>  <language>en</language>  <script>Latn</script>  <status>    <stage>final</stage>    <substage>active</substage>  </status>  <copyright>    <from>2007</from>    <owner>      <organization>        
<name>National Institute of Standards and Technology</name>
        <abbreviation>NIST</abbreviation>        <uri>www.nist.gov</uri>      </organization>    </owner>  </copyright>  <place>Gaithersburg, MD</place>  <keyword>Authenticated encryption</keyword>  <keyword>authentication</keyword>  <keyword>block cipher</keyword>  <keyword>confidentiality</keyword>  <keyword>cryptography</keyword>  <keyword>encryption</keyword>  <keyword>information security</keyword>  <keyword>mode of operation.</keyword></bibitem>
 <bibitem id="SP800-38E" type="standard">  <fetched>2022-03-15</fetched>  
<title format="text/plain" language="en" script="Latn">Recommendation for Block Cipher Modes of Operation — the XTS-AES Mode for Confidentiality on Storage Devices</title>
  <uri type="src">https://csrc.nist.gov/publications/detail/sp/800-38e/final</uri>  <uri type="doi">https://doi.org/10.6028/NIST.SP.800-38E</uri>  <docidentifier type="NIST" primary="true">SP 800-38E</docidentifier>  <date type="published">    <on>2010-01</on>  </date>  <date type="issued">    <on>2010-01</on>  </date>  <contributor>    <role type="author"/>    <person>      
<name>        <completename language="en" script="Latn">Morris J. Dworkin</completename>      </name>
      <affiliation>        <organization>          
<name>National Institute of Standards and Technology</name>
          <abbreviation>NIST</abbreviation>        </organization>      </affiliation>    </person>  </contributor>  <language>en</language>  <script>Latn</script>  <status>    <stage>final</stage>    <substage>active</substage>  </status>  <copyright>    <from>2010</from>    <owner>      <organization>        
<name>National Institute of Standards and Technology</name>
        <abbreviation>NIST</abbreviation>        <uri>www.nist.gov</uri>      </organization>    </owner>  </copyright>  <place>Gaithersburg, MD</place>  <keyword>Block cipher</keyword>  <keyword>ciphertext stealing</keyword>  <keyword>computer security</keyword>  <keyword>confidentiality</keyword>  <keyword>cryptography</keyword>  <keyword>encryption</keyword>  <keyword>information security mode of operation</keyword>  <keyword>tweakable block cipher.</keyword></bibitem>
 <bibitem id="SP800-38F" type="standard">  <fetched>2022-03-15</fetched>  
<title format="text/plain" language="en" script="Latn">Recommendation for Block Cipher Modes of Operation — Methods for Key Wrapping</title>
  <uri type="src">https://csrc.nist.gov/publications/detail/sp/800-38f/final</uri>  <uri type="doi">https://doi.org/10.6028/NIST.SP.800-38F</uri>  <docidentifier type="NIST" primary="true">SP 800-38F</docidentifier>  <date type="published">    <on>2012-12</on>  </date>  <date type="issued">    <on>2012-12</on>  </date>  <contributor>    <role type="author"/>    <person>      
<name>        <completename language="en" script="Latn">Morris J. Dworkin</completename>      </name>
      <affiliation>        <organization>          
<name>National Institute of Standards and Technology</name>
          <abbreviation>NIST</abbreviation>        </organization>      </affiliation>    </person>  </contributor>  <language>en</language>  <script>Latn</script>  <status>    <stage>final</stage>    <substage>active</substage>  </status>  <copyright>    <from>2012</from>    <owner>      <organization>        
<name>National Institute of Standards and Technology</name>
        <abbreviation>NIST</abbreviation>        <uri>www.nist.gov</uri>      </organization>    </owner>  </copyright>  <place>Gaithersburg, MD</place>  <keyword>authenticated encryption</keyword>  <keyword>authentication</keyword>  <keyword>block cipher</keyword>  <keyword>computer security</keyword>  <keyword>confidentiality</keyword>  <keyword>cryptography</keyword>  <keyword>encryption</keyword>  <keyword>information security</keyword>  <keyword>key wrapping</keyword>  <keyword>mode of operation</keyword></bibitem>
 <bibitem id="SP800-38Gr1" type="standard">  <fetched>2022-03-15</fetched>  
<title format="text/plain" language="en" script="Latn">Recommendation for Block Cipher Modes of Operation — Methods for Format-Preserving Encryption</title>
  <uri type="src">https://csrc.nist.gov/publications/detail/sp/800-38g/final</uri>  <uri type="doi">https://doi.org/10.6028/NIST.SP.800-38G</uri>  <docidentifier type="NIST" primary="true">SP 800-38G</docidentifier>  <date type="published">    <on>2016-03</on>  </date>  <date type="issued">    <on>2016-03</on>  </date>  <contributor>    <role type="author"/>    <person>      
<name>        <completename language="en" script="Latn">Morris J. Dworkin</completename>      </name>
      <affiliation>        <organization>          
<name>National Institute of Standards and Technology</name>
          <abbreviation>NIST</abbreviation>        </organization>      </affiliation>    </person>  </contributor>  <language>en</language>  <script>Latn</script>  <status>    <stage>final</stage>    <substage>active</substage>  </status>  <copyright>    <from>2016</from>    <owner>      <organization>        
<name>National Institute of Standards and Technology</name>
        <abbreviation>NIST</abbreviation>        <uri>www.nist.gov</uri>      </organization>    </owner>  </copyright>  <place>Gaithersburg, MD</place>  <keyword>confidentiality</keyword>  <keyword>encryption</keyword>  <keyword>FF1</keyword>  <keyword>FF3</keyword>  <keyword>format-preserving encryption</keyword>  <keyword>information security</keyword>  <keyword>block cipher</keyword>  <keyword>mode of operation</keyword></bibitem>
 <bibitem id="SP800-67r2" type="standard">  <fetched>2022-03-15</fetched>  
<title format="text/plain" language="en" script="Latn">Recommendation for the Triple Data Encryption Algorithm (TDEA) Block Cipher</title>
  <uri type="src">https://csrc.nist.gov/publications/detail/sp/800-67/rev-2/final</uri>  <uri type="doi">https://doi.org/10.6028/NIST.SP.800-67r2</uri>  <docidentifier type="NIST" primary="true">SP 800-67 Rev. 2</docidentifier>  <date type="published">    <on>2017-11</on>  </date>  <date type="issued">    <on>2017-11</on>  </date>  <contributor>    <role type="author"/>    <person>      
<name>        <completename language="en" script="Latn">Elaine B. Barker</completename>      </name>
      <affiliation>        <organization>          
<name>National Institute of Standards and Technology</name>
          <abbreviation>NIST</abbreviation>        </organization>      </affiliation>    </person>  </contributor>  <contributor>    <role type="author"/>    <person>      
<name>        <completename language="en" script="Latn">Dr. Nicky Mouha</completename>      </name>
      <affiliation>        <organization>          
<name>National Institute of Standards and Technology</name>
          <abbreviation>NIST</abbreviation>        </organization>      </affiliation>    </person>  </contributor>  <language>en</language>  <script>Latn</script>  <status>    <stage>final</stage>    <substage>active</substage>  </status>  <copyright>    <from>2017</from>    <owner>      <organization>        
<name>National Institute of Standards and Technology</name>
        <abbreviation>NIST</abbreviation>        <uri>www.nist.gov</uri>      </organization>    </owner>  </copyright>  <relation type="obsoletes">    <description format="text/plain" language="en" script="Latn">supersedes</description>    <bibitem>      <formattedref format="text/plain" language="en" script="Latn">SP 800-67 Rev. 1</formattedref>      <uri type="src">https://csrc.nist.gov/publications/detail/sp/800-67/rev-1/archive/2012-01-23</uri>    </bibitem>
  </relation>  <place>Gaithersburg, MD</place>  <keyword>block cipher</keyword>  <keyword>computer security</keyword>  <keyword>cryptography</keyword>  <keyword>data encryption algorithm</keyword>  <keyword>security</keyword>  <keyword>triple data encryption algorithm</keyword></bibitem>
 <bibitem id="RFC3686" type="standard">  <fetched>2022-03-15</fetched>  
<title format="text/plain" language="en" script="Latn">Using Advanced Encryption Standard (AES) Counter Mode With IPsec Encapsulating Security Payload (ESP)</title>
  <uri type="xml">https://raw.githubusercontent.com/relaton/relaton-data-ietf/master/data/reference.RFC.3686.xml</uri>  <uri type="src">https://www.rfc-editor.org/info/rfc3686</uri>  <docidentifier type="RFC" primary="true">RFC 3686</docidentifier>  <docidentifier type="RFC" scope="anchor">RFC3686</docidentifier>  <docidentifier type="DOI">10.17487/RFC3686</docidentifier>  <docnumber>RFC3686</docnumber>  <date type="published">    <on>2004-01</on>  </date>  <contributor>    <role type="publisher"/>    <organization>      
<name>Internet Engineering Task Force</name>
      <abbreviation>IETF</abbreviation>    </organization>  </contributor>  <contributor>    <role type="author"/>    <person>      
<name>        <completename language="en">R. Housley</completename>      </name>
    </person>  </contributor>  <language>en</language>  <script>Latn</script>  <abstract format="text/html" language="en" script="Latn">    <p id="_1d0118fe-75f6-9373-eeec-74fd560d9e8d">This document describes the use of Advanced Encryption Standard (AES) Counter Mode, with an explicit initialization vector, as an IPsec Encapsulating Security Payload (ESP) confidentiality mechanism.</p>
  </abstract>  <series type="main">    
<title format="text/plain" language="en" script="Latn">RFC</title>
    <number>3686</number>  </series></bibitem>

<bibitem id="ACVP">
  <fetched>2022-03-15</fetched>
  <title type="title-main" format="text/plain">Automatic Cryptographic Validation Protocol</title>
  <title type="main" format="text/plain">Automatic Cryptographic Validation Protocol</title>
  <docidentifier>ACVP</docidentifier>
  <date type="published">
    <on>2019-07-01</on>
  </date>
  <contributor>
    <role type="author"/>
    <person>
      <name>
        <initial>B.</initial>
        <surname>Fussell</surname>
      </name>
      <affiliation>
        <organization>
          <name>Cisco</name>
        </organization>
      </affiliation>
    </person>
  </contributor>
  <contributor>
    <role type="author"/>
    <person>
      <name>
        <initial>A.</initial>
        <surname>Vassilev</surname>
      </name>
      <affiliation>
        <organization>
          <name>National Institute of Standards and Technology</name>
          <abbreviation>NIST</abbreviation>
        </organization>
      </affiliation>
    </person>
  </contributor>
  <contributor>
    <role type="author"/>
    <person>
      <name>
        <initial>H.</initial>
        <surname>Booth</surname>
      </name>
      <affiliation>
        <organization>
          <name>National Institute of Standards and Technology</name>
          <abbreviation>NIST</abbreviation>
        </organization>
      </affiliation>
    </person>
  </contributor>
  <contributor>
    <role type="author"/>
    <person>
      <name>
        <initial>C.</initial>
        <surname>Celi</surname>
      </name>
      <affiliation>
        <organization>
          <name>National Institute of Standards and Technology</name>
          <abbreviation>NIST</abbreviation>
        </organization>
      </affiliation>
    </person>
  </contributor>
  <contributor>
    <role type="author"/>
    <person>
      <name>
        <initial>R.</initial>
        <surname>Hammett</surname>
      </name>
      <affiliation>
        <organization>
          <name>Huntington Ingalls Industries</name>
          <abbreviation>HII</abbreviation>
        </organization>
      </affiliation>
    </person>
  </contributor>
  <contributor>
    <role type="publisher"/>
    <organization>
      <name>National Institute of Standards and Technology</name>
      <abbreviation>NIST</abbreviation>
    </organization>
  </contributor>
</bibitem>

<bibitem id="AES-GCM-SIV">
  <fetched>2022-03-15</fetched>
  <title type="title-main" format="text/plain">AES-GCM-SIV Nonce Misuse-Resistant Authenticated Encryption</title>
  <title type="main" format="text/plain">AES-GCM-SIV Nonce Misuse-Resistant Authenticated Encryption</title>
  <docidentifier>AES-GCM-SIV</docidentifier>
  <date type="published">
    <on>2018</on>
  </date>
  <contributor>
    <role type="author"/>
    <person>
      <name>
        <initial>S.</initial>
        <surname>Gueron</surname>
      </name>
      <affiliation>
        <organization>
          <name>University of Haifa and Amazon Web Services</name>
        </organization>
      </affiliation>
    </person>
  </contributor>
  <contributor>
    <role type="author"/>
    <person>
      <name>
        <initial>A.</initial>
        <surname>Langley</surname>
      </name>
      <affiliation>
        <organization>
          <name>Google LLC</name>
        </organization>
      </affiliation>
    </person>
  </contributor>
  <contributor>
    <role type="author"/>
    <person>
      <name>
        <initial>Y.</initial>
        <surname>Lindell</surname>
      </name>
      <affiliation>
        <organization>
          <name>Bar Ilan University</name>
        </organization>
      </affiliation>
    </person>
  </contributor>
  <contributor>
    <role type="publisher"/>
    <organization>
      <name>University of Haifa and Amazon Web Services, Google LLC, and Bar Ilan University</name>
      <abbreviation>UH-AWS-G-BIU</abbreviation>
    </organization>
  </contributor>
</bibitem>

<bibitem id="ECMA">
  <fetched>2022-03-15</fetched>
  <title type="title-main" format="text/plain">ECMA-368 High Rate Ultra Wideband PHY and MAC Standard</title>
  <title type="main" format="text/plain">ECMA-368 High Rate Ultra Wideband PHY and MAC Standard</title>
  <uri type="src">https://www.ecma-international.org/publications/files/ECMA-ST/ECMA-368.pdf</uri>
  <docidentifier>ECMA</docidentifier>
</bibitem>

<bibitem id="AES-XTS">
  <fetched>2022-03-15</fetched>
  <title type="title-main" format="text/plain">IEEE 1619-2007 — IEEE Standard for Cryptographic Protection of Data on Block-Oriented Storage Devices</title>
  <title type="main" format="text/plain">IEEE 1619-2007 — IEEE Standard for Cryptographic Protection of Data on Block-Oriented Storage Devices</title>
  <uri type="src">https://standards.ieee.org/standard/1619-2007.html</uri>
  <docidentifier type="IEEE">IEEE 1619-2007</docidentifier>
  <date type="published">
    <on>2008-03</on>
  </date>
  <contributor>
    <role type="author"/>
    <person>
      <name>
        <initial>T.</initial>
        <surname>Thompson</surname>
      </name>
    </person>
  </contributor>
</bibitem>
</references>
</annex><annex id="app-reg-ex" obligation="normative">
<title>Example Capabilities JSON Object</title>
<p id="_6a72d513-92d2-ba88-057d-0419d5fecade">The following is a example JSON object advertising support for all block ciphers.</p>

<sourcecode id="_27e17f46-6e42-76ce-dbf6-3350785ef240" lang="json">[{
    "acvVersion": "{acvp-version}"
  }, {
    "algorithm": "ACVP-AES-GCM",
    "revision": "1.0",
    "prereqVals": [{
        "algorithm": "ACVP-AES-ECB",
        "valValue": "123456"
      },
      {
        "algorithm": "DRBG",
        "valValue": "123456"
      }
    ],
    "direction": [
      "encrypt",
      "decrypt"
    ],
    "ivGen": "internal",
    "ivGenMode": "8.2.2",
    "keyLen": [
      128,
      192,
      256
    ],
    "tagLen": [
      96,
      128
    ],
    "ivLen": [
      96
    ],
    "payloadLen": [
      0,
      256
    ],
    "aadLen": [
      128,
      256
    ]
  },
  {
    "algorithm": "ACVP-AES-ECB",
    "revision": "1.0",
    "direction": [
      "encrypt",
      "decrypt"
    ],
    "keyLen": [
      128,
      192,
      256
    ]
  },
  {
    "algorithm": "ACVP-AES-CBC",
    "revision": "1.0",
    "direction": [
      "encrypt",
      "decrypt"
    ],
    "keyLen": [
      128,
      192,
      256
    ]
  },
  {
    "algorithm": "ACVP-AES-CBC-CS1",
    "revision": "1.0",
    "payloadLen": [{
      "min": 128,
      "max": 65536,
      "increment": 1
    }],
    "direction": [
      "encrypt",
      "decrypt"
    ],
    "keyLen": [
      128,
      192,
      256
    ]
  },
  {
    "algorithm": "ACVP-AES-CBC-CS2",
    "revision": "1.0",
    "payloadLen": [{
      "min": 128,
      "max": 65536,
      "increment": 1
    }],
    "direction": [
      "encrypt",
      "decrypt"
    ],
    "keyLen": [
      128,
      192,
      256
    ]
  },
  {
    "algorithm": "ACVP-AES-CBC-CS3",
    "revision": "1.0",
    "payloadLen": [{
      "min": 128,
      "max": 65536,
      "increment": 1
    }],
    "direction": [
      "encrypt",
      "decrypt"
    ],
    "keyLen": [
      128,
      192,
      256
    ]
  },
  {
    "algorithm": "ACVP-AES-CFB8",
    "revision": "1.0",
    "direction": [
      "encrypt",
      "decrypt"
    ],
    "keyLen": [
      128,
      192,
      256
    ]
  },
  {
    "algorithm": "ACVP-AES-CFB128",
    "revision": "1.0",
    "direction": [
      "encrypt",
      "decrypt"
    ],
    "keyLen": [
      128,
      192,
      256
    ]
  },
  {
    "algorithm": "ACVP-AES-OFB",
    "revision": "1.0",
    "direction": [
      "encrypt",
      "decrypt"
    ],
    "keyLen": [
      128,
      192,
      256
    ]
  },
  {
    "algorithm": "ACVP-AES-XPN",
    "revision": "1.0",
    "prereqVals": [{
        "algorithm": "ACVP-AES-ECB",
        "valValue": "123456"
      },
      {
        "algorithm": "DRBG",
        "valValue": "123456"
      }
    ],
    "direction": [
      "encrypt",
      "decrypt"
    ],
    "ivGen": "internal",
    "ivGenMode": "8.2.2",
    "saltGen": "internal",
    "keyLen": [
      128,
      192,
      256
    ],
    "tagLen": [
      96,
      128
    ],
    "payloadLen": [
      0,
      128
    ],
    "aadLen": [
      120,
      128
    ]
  },
  {
    "algorithm": "ACVP-AES-CTR",
    "revision": "1.0",
    "direction": [
      "encrypt",
      "decrypt"
    ],
    "keyLen": [
      128,
      192,
      256
    ],
    "payloadLen": [
      128
    ],
    "incrementalCounter": true,
    "overflowCounter": false
  },
  {
    "algorithm": "ACVP-AES-CTR",
    "revision": "1.0",
    "conformances": ["RFC3686"],
    "direction": [
      "encrypt",
      "decrypt"
    ],
    "keyLen": [
      128,
      192,
      256
    ],
    "payloadLen": [
      128
    ],
    "incrementalCounter": true,
    "overflowCounter": false,
    "ivGenMode": "external"
  },
  {
    "algorithm": "ACVP-AES-CCM",
    "revision": "1.0",
    "prereqVals": [{
      "algorithm": "ACVP-AES-ECB",
      "valValue": "same"
    }],
    "direction": [
      "encrypt",
      "decrypt"
    ],
    "keyLen": [
      128,
      192,
      256
    ],
    "tagLen": [
      128
    ],
    "ivLen": [
      56
    ],
    "payloadLen": [
      0,
      256
    ],
    "aadLen": [
      0,
      65536
    ]
  },
  {
    "algorithm": "ACVP-AES-CFB1",
    "revision": "1.0",
    "direction": [
      "encrypt",
      "decrypt"
    ],
    "keyLen": [
      128,
      192,
      256
    ]
  },
  {
    "algorithm": "ACVP-AES-KW",
    "revision": "1.0",
    "direction": [
      "encrypt",
      "decrypt"
    ],
    "kwCipher": [
      "cipher"
    ],
    "keyLen": [
      128,
      192,
      256
    ],
    "payloadLen": [
      512,
      192,
      128
    ]
  },
  {
    "algorithm": "ACVP-AES-KWP",
    "revision": "1.0",
    "direction": [
      "encrypt",
      "decrypt"
    ],
    "kwCipher": [
      "cipher"
    ],
    "keyLen": [
      128,
      192,
      256
    ],
    "payloadLen": [
      8,
      32,
      96,
      808
    ]
  },
  {
    "algorithm": "ACVP-AES-FF1",
    "revision": "1.0",
    "direction": [
      "encrypt",
      "decrypt"
    ],
    "keyLen": [
      128,
      192,
      256
    ],
    "tweakLen": [{
      "min": 0,
      "max": 128,
      "increment": 8
    }],
    "capabilities": [{
        "alphabet": "0123456789",
        "radix": 10,
        "minLen": 10,
        "maxLen": 56
      },
      {
        "alphabet": "abcdefghijklmnopqrstuvwxyz",
        "radix": 26,
        "minLen": 10,
        "maxLen": 40
      },
      {
        "alphabet": "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz+/",
        "radix": 64,
        "minLen": 10,
        "maxLen": 28
      }
    ]
  },
  {
    "algorithm": "ACVP-AES-FF3-1",
    "revision": "1.0",
    "conformances": [],
    "direction": [
      "encrypt",
      "decrypt"
    ],
    "keyLen": [
      128,
      192,
      256
    ],
    "tweakLen": [{
      "min": 0,
      "max": 128,
      "increment": 8
    }],
    "capabilities": [{
        "alphabet": "0123456789",
        "radix": 10,
        "minLen": 10,
        "maxLen": 56
      },
      {
        "alphabet": "abcdefghijklmnopqrstuvwxyz",
        "radix": 26,
        "minLen": 10,
        "maxLen": 40
      },
      {
        "alphabet": "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz+/",
        "radix": 64,
        "minLen": 10,
        "maxLen": 28
      }
    ]
  },
  {
    "algorithm": "ACVP-AES-XTS",
    "revision": "1.0",
    "direction": [
      "encrypt",
      "decrypt"
    ],
    "keyLen": [
      128,
      256
    ],
    "payloadLen": [
      65536
    ],
    "tweakMode": [
      "hex",
      "number"
    ]
  },
  {
    "algorithm": "ACVP-AES-XTS",
    "revision": "2.0",
    "direction": [
      "encrypt",
      "decrypt"
    ],
    "keyLen": [
      128,
      256
    ],
    "payloadLen": [
      65536
    ],
    "tweakMode": [
      "hex",
      "number"
    ],
    "dataUnitLen": [
      1024, 4096
    ]
  },
  {
    "algorithm": "ACVP-TDES-ECB",
    "revision": "1.0",
    "direction": [
      "encrypt",
      "decrypt"
    ],
    "keyingOption": [
      1
    ]
  },
  {
    "algorithm": "ACVP-TDES-CBC",
    "revision": "1.0",
    "direction": [
      "encrypt",
      "decrypt"
    ],
    "keyingOption": [
      1
    ]
  },
  {
    "algorithm": "ACVP-TDES-CBCI",
    "revision": "1.0",
    "direction": [
      "encrypt",
      "decrypt"
    ],
    "keyingOption": [
      1
    ]
  },
  {
    "algorithm": "ACVP-TDES-OFB",
    "revision": "1.0",
    "direction": [
      "encrypt",
      "decrypt"
    ],
    "keyingOption": [
      1
    ]
  },
  {
    "algorithm": "ACVP-TDES-OFBI",
    "revision": "1.0",
    "direction": [
      "encrypt",
      "decrypt"
    ],
    "keyingOption": [
      1
    ]
  },
  {
    "algorithm": "ACVP-TDES-CFB64",
    "revision": "1.0",
    "direction": [
      "encrypt",
      "decrypt"
    ],
    "keyingOption": [
      1
    ]
  },
  {
    "algorithm": "ACVP-TDES-CFB8",
    "revision": "1.0",
    "direction": [
      "encrypt",
      "decrypt"
    ],
    "keyingOption": [
      1
    ]
  },
  {
    "algorithm": "ACVP-TDES-CFB1",
    "revision": "1.0",
    "direction": [
      "encrypt",
      "decrypt"
    ],
    "keyingOption": [
      1
    ]
  },
  {
    "algorithm": "ACVP-TDES-CFBP64",
    "revision": "1.0",
    "direction": [
      "encrypt",
      "decrypt"
    ],
    "keyingOption": [
      1
    ]
  },
  {
    "algorithm": "ACVP-TDES-CFBP8",
    "revision": "1.0",
    "direction": [
      "encrypt",
      "decrypt"
    ],
    "keyingOption": [
      1
    ]
  },
  {
    "algorithm": "ACVP-TDES-CFBP1",
    "revision": "1.0",
    "direction": [
      "encrypt",
      "decrypt"
    ],
    "keyingOption": [
      1
    ]
  },
  {
    "algorithm": "ACVP-TDES-CTR",
    "revision": "1.0",
    "direction": [
      "encrypt",
      "decrypt"
    ],
    "keyingOption": [
      1
    ],
    "payloadLen": [
      64
    ],
    "performCounterTests": false
  },
  {
    "algorithm": "ACVP-TDES-KW",
    "revision": "1.0",
    "direction": [
      "encrypt",
      "decrypt"
    ],
    "kwCipher": [
      "cipher"
    ],
    "payloadLen": [
      512,
      192,
      128
    ]

  }
]</sourcecode>

</annex><annex id="app-vs-ex" obligation="normative">
<title>Example Vector Set Request/Responses JSON Object</title>
<p id="_78d2ca7d-bbda-8c26-3221-351ba0342b01">The following sections provide examples of the JSON objects for each of the AES algorithms. Examples will reflect what testTypes are supported by each algorithm, ie AFT, MCT or counter.  MCT examples have only 2 iterations shown for brevity.</p>

<p id="_0040acc5-7189-3eaf-f814-98f5a46db956">The following shows AES-GCM AFT request vectors.</p>

<sourcecode id="_a09a155a-e323-0671-824e-d40d54b5f375" lang="json">[{
  "acvVersion": "{acvp-version}"
},{
  "vsId": 2055,
  "algorithm": "ACVP-AES-GCM",
  "revision": "1.0",
  "testGroups": [{
            "tgId": 1,
            "testType": "AFT",
            "direction": "encrypt",
            "keyLen": 128,
            "ivLen": 96,
            "ivGen": "external",
            "ivGenMode": "8.2.2",
            "payloadLen": 0,
            "aadLen": 0,
            "tagLen": 32,
            "tests": [
                {
                    "tcId": 1,
                    "plainText": "",
                    "key": "10B8D4C9658590A...",
                    "aad": "",
                    "iv": "3D026F3D590BF1A7..."
                },
                {
                    "tcId": 2,
                    "plainText": "",
                    "key": "934865822A3ECCB...",
                    "aad": "",
                    "iv": "273F3B30341C779E..."
                }
      ]
    },
    {
            "tgId": 19,
            "testType": "AFT",
            "direction": "decrypt",
            "keyLen": 128,
            "ivLen": 96,
            "ivGen": "external",
            "ivGenMode": "8.2.2",
            "payloadLen": 0,
            "aadLen": 120,
            "tagLen": 32,
            "tests": [
                {
                    "tcId": 271,
                    "key": "88AB5441AE2...",
                    "aad": "4E956EF528D...",
                    "iv": "810628011BB0...",
                    "cipherText": "",
                    "tag": "1180FD89"
                },
                {
                    "tcId": 272,
                    "key": "9149BE47FAEB...",
                    "aad": "938A8FA71324...",
                    "iv": "FF6B72FF25B55...",
                    "cipherText": "",
                    "tag": "6C7528F0"
                }
      ]
    }
  ]
}]</sourcecode>


<p id="_9586fe86-5066-abe7-68e2-7eda2431fb6f">The following shows AES-GCM AFT responses.</p>

<sourcecode id="_413813d9-eb67-a431-3396-e70ba5a6c8e4" lang="json">[{
  "acvVersion": "{acvp-version}"
},{
  "vsId": 2055,
  "testGroups": [{
      "tgId": 1,
      "tests": [{
          "tcId": 1,
          "iv": "01020304F966B8...",
          "ct": "",
          "tag": "427F668E58F56..."
        },
        {
          "tcId": 2,
          "iv": "01020304C2855...",
          "ct": "",
          "tag": "D95BD66F7789..."
        }
      ]
    },
    {
      "tgId": 2,
      "tests": [{
          "tcId": 902,
          "pt": "763BF..."
        },
        {
          "tcId": 903,
          "testPassed": false
        }
      ]
    }
  ]
}]</sourcecode>


<p id="_0b1f5bbb-1dff-2689-cadb-ac67037db961">The following shows AES-CCM AFT request vectors.</p>

<sourcecode id="_dbf3084e-1eee-6ae4-2fb0-eee383e9c0a0" lang="json">[{
  "acvVersion": "{acvp-version}"
},{
  "vsId": 2061,
  "algorithm": "ACVP-AES-CCM",
    "revision": "1.0",
  "testGroups": [{
    "tgId": 1,
    "direction": "encrypt",
    "testType": "AFT",
    "ivLen": 56,
    "payloadLen": 256,
    "aadLen": 0,
    "tagLen": 128,
    "keyLen": 128,
    "tests": [{
      "tcId": 1,
      "pt": "361445511E0BD3E94E3...",
      "key": "7DB9E755181E4160C6...",
      "iv": "1C53ECD62BBED5",
      "aad": ""
    }, {
      "tcId": 2,
      "pt": "735CE37215A91074DBF...",
      "key": "7DB9E755181E4160C6...",
      "iv": "1C53ECD62BBED5",
      "aad": ""
    }]
  }, {
    "tgId": 2,
    "direction": "decrypt",
    "testType": "AFT",
    "ivLen": 56,
    "payloadLen": 0,
    "aadLen": 0,
    "tagLen": 128,
    "keyLen": 128,
    "tests": [{
      "tcId": 181,
      "ct": "533427D475EBAC3FE5...",
      "key": "A8B7C7A69E5AB940B...",
      "iv": "1BD5816AF5BB9F",
      "aad": ""
    }, {
      "tcId": 182,
      "ct": "6B774BB2D20A8A23A1...",
      "key": "A8B7C7A69E5AB940B...",
      "iv": "8140308B19BCE8",
      "aad": ""
    }]
  }]
}]</sourcecode>


<p id="_1fcae529-00a3-c458-8daf-b4a05f791ec9">The following shows AES-CCM AFT responses.</p>

<sourcecode id="_72382a4f-169f-2c1e-dcc2-f796f63aea27" lang="json">[{
  "acvVersion": "{acvp-version}"
},{
    "vsId": 2061,
    "testGroups": [{
            "tgId": 1,
            "tests": [{
                    "tcId": 1,
                    "ct": "C8AB4A739E1..."
                },
                {
                    "tcId": 2,
                    "ct": "8DE3EC5095B..."
                }
            ]
        },
        {
            "tgId": 2,
            "tests": [{
                    "tcId": 181,
                    "testPassed": false
                },
                {
                    "tcId": 182,
                    "pt": ""
                }
            ]
        }
    ]
}]</sourcecode>


<p id="_8244cc23-bd05-041f-f286-55d92b866df9">The following shows AES-CBC AFT and MCT request vectors.</p>

<sourcecode id="_8a15b5fb-2f82-72c3-0a70-85e4f2bc5f23" lang="json">[{
  "acvVersion": "{acvp-version}"
},{
  "vsId": 2057,
  "algorithm": "ACVP-AES-CBC",
    "revision": "1.0",
  "testGroups": [{
      "tgId": 1,
      "direction": "encrypt",
      "testType": "AFT",
      "keyLen": 128,
      "tests": [{
        "tcId": 1,
        "iv": "00C8F42C5B5...",
        "key": "7F9863BCD5...",
        "pt": "97549D671FA..."
      }, {
        "tcId": 2,
        "iv": "CE6747E918F...",
        "key": "25F73DBAF4...",
        "pt": "D3A0AA732D7..."
      }]
    }, {
      "tgId": 2,
      "direction": "decrypt",
      "testType": "AFT",
      "keyLen": 128,
      "tests": [{
        "tcId": 31,
        "iv": "D498F4F8462...",
        "key": "77D563ACE1...",
        "ct": "78256FA155F..."
      }, {
        "tcId": 32,
        "iv": "AB99A939B688...",
        "key": "0569B0C6DB3...",
        "ct": "EEBF23A65E83..."
      }]
    },
    {
      "tgId": 3,
      "direction": "encrypt",
      "testType": "MCT",
      "keyLen": 256,
      "tests": [{
        "tcId": 63,
        "iv": "057FB7EEDE1EBF40...",
        "key": "E5E2E9F088E2C06...",
        "pt": "6DA46A0AADB59615..."
      }]
    }, {
      "tgId": 4,
      "direction": "decrypt",
      "testType": "MCT",
      "keyLen": 128,
      "tests": [{
        "tcId": 64,
        "iv": "FD5EDEC164E504D6...",
        "key": "F7439EAC671FC4B...",
        "ct": "37ECE2FF3F391D8C..."
      }]
    }
  ]
}]</sourcecode>


<p id="_0d55a179-4ed0-8b7a-b61b-19f20aaf1e7a">The following shows AES-CBC AFT and MCT responses.</p>

<sourcecode id="_e3b2357c-9a4c-18b3-f4de-d5d9b121d96e" lang="json">[{
  "acvVersion": "{acvp-version}"
},{
  "vsId": 2057,
  "testGroups": [{
      "tgId": 1,
      "tests": [{
          "tcId": 1,
          "ct": "DD95E867DFCFCC..."
        },
        {
          "tcId": 2,
          "ct": "540954F0016D40..."
        }
      ]
    },
    {
      "tgId": 2,
      "tests": [{
          "tcId": 31,
          "pt": "F7251EA3C68FE..."
        },
        {
          "tcId": 32,
          "pt": "CEC14A7B465A3..."
        }
      ]
    },
    {
      "tgId": 3,
      "tests": [{
        "tcId": 63,
        "resultsArray": [{
            "key": "E5E2...",
            "iv": "057FB...",
            "pt": "6DA46...",
            "ct": "3E794..."
          },
          {
            "key": "DE31...",
            "iv": "3E794...",
            "pt": "3BD32...",
            "ct": "9236D..."
          }
        ]
      }]
    },
    {
      "tgId": 1,
      "tests": [{
        "tcId": 64,
        "resultsArray": [{
            "key": "F743...",
            "iv": "FD5ED...",
            "ct": "37ECE...",
            "pt": "52FC3..."
          },
          {
            "key": "A5BF...",
            "iv": "52FC3...",
            "ct": "4400F...",
            "pt": "66204..."
          }
        ]
      }]
    }
  ]
}]</sourcecode>


<p id="_097a0504-1335-7331-61db-679d76fec2ac">The following shows AES-CBC-CS1 AFT request vectors.</p>

<sourcecode id="_9f7eb0b2-e69a-e0a3-b461-26a35d2bd620" lang="json">[{
  "acvVersion": "{acvp-version}"
},{
  "vsId": 2058,
  "algorithm": "ACVP-AES-CBC-CS1",
    "revision": "1.0",
  "testGroups": [{
      "tgId": 1,
      "direction": "encrypt",
      "testType": "AFT",
      "keyLen": 128,
      "tests": [{
        "tcId": 1,
        "iv": "1216A541024...",
        "key": "A6A8346C47...",
        "pt": "71AC206DD0A...",
        "payloadLen": 512
      }, {
        "tcId": 2,
        "iv": "9A6A276AB96...",
        "key": "7CDAE90854...",
        "pt": "6D4AEE90179...",
        "payloadLen": 178
      }]
    }, {
      "tgId": 2,
      "direction": "decrypt",
      "testType": "AFT",
      "keyLen": 128,
      "tests": [{
        "tcId": 31,
        "iv": "908543E2646...",
        "key": "CB12AAFA25B...",
        "ct": "AB99A939B688...",
        "payloadLen": 378
      }, {
        "tcId": 32,
        "iv": "AB99A939B688...",
        "key": "0569B0C6DB3...",
        "ct": "DD14A9A9A916A...",
        "payloadLen": 471
      }]
    }
  ]
}]</sourcecode>


<p id="_a958d6b1-2b40-4434-73d1-4717db263f5a">The following shows AES-CBC-CS1 AFT responses.</p>

<sourcecode id="_f541557e-f0ef-aa9e-c692-9c9a4c229697" lang="json">[{
  "acvVersion": "{acvp-version}"
},{
  "vsId": 2057,
  "testGroups": [{
      "tgId": 1,
      "tests": [{
          "tcId": 1,
          "ct": "E25DC48F39E4DA..."
        },
        {
          "tcId": 2,
          "ct": "360D25D820C3BA..."
        }
      ]
    },
    {
      "tgId": 2,
      "tests": [{
          "tcId": 31,
          "pt": "33346D02A070A..."
        },
        {
          "tcId": 32,
          "pt": "8F52D6E73783A..."
        }
      ]
    }
  ]
}]</sourcecode>


<p id="_68cba2a4-db94-ca3b-1fc3-2437290d3fe0">The following shows AES-CBC-CS2 AFT request vectors.</p>

<sourcecode id="_c16d9b56-b927-09af-856a-0182761aa2a6" lang="json">[{
  "acvVersion": "{acvp-version}"
},{
  "vsId": 2058,
  "algorithm": "ACVP-AES-CBC-CS2",
    "revision": "1.0",
  "testGroups": [{
      "tgId": 1,
      "direction": "encrypt",
      "testType": "AFT",
      "keyLen": 128,
      "tests": [{
        "tcId": 1,
        "iv": "1216A541024...",
        "key": "A6A8346C47...",
        "pt": "71AC206DD0A...",
        "payloadLen": 512
      }, {
        "tcId": 2,
        "iv": "9A6A276AB96...",
        "key": "7CDAE90854...",
        "pt": "6D4AEE90179...",
        "payloadLen": 178
      }]
    }, {
      "tgId": 2,
      "direction": "decrypt",
      "testType": "AFT",
      "keyLen": 128,
      "tests": [{
        "tcId": 31,
        "iv": "908543E2646...",
        "key": "CB12AAFA25B...",
        "ct": "AB99A939B688...",
        "payloadLen": 378
      }, {
        "tcId": 32,
        "iv": "AB99A939B688...",
        "key": "0569B0C6DB3...",
        "ct": "DD14A9A9A916A...",
        "payloadLen": 471
      }]
    }
  ]
}]</sourcecode>


<p id="_0b68d92a-9635-69d6-98f7-68934ffc92ec">The following shows AES-CBC-CS2 AFT  responses.</p>

<sourcecode id="_4a920ec2-4a98-c765-e6d3-a53072a0bde1" lang="json">[{
  "acvVersion": "{acvp-version}"
},{
  "vsId": 2057,
  "testGroups": [{
      "tgId": 1,
      "tests": [{
          "tcId": 1,
          "ct": "E25DC48F39E4DA..."
        },
        {
          "tcId": 2,
          "ct": "360D25D820C3BA..."
        }
      ]
    },
    {
      "tgId": 2,
      "tests": [{
          "tcId": 31,
          "pt": "33346D02A070A..."
        },
        {
          "tcId": 32,
          "pt": "8F52D6E73783A..."
        }
      ]
    }
  ]
}]</sourcecode>


<p id="_90de433c-5142-0752-10e9-f05cc8a6b927">The following shows AES-CBC-CS3 AFT request vectors.</p>

<sourcecode id="_90b17a93-0f69-7951-bc8b-7465c6d6cd2e" lang="json">[{
  "acvVersion": "{acvp-version}"
},{
  "vsId": 2058,
  "algorithm": "ACVP-AES-CBC-CS3",
    "revision": "1.0",
  "testGroups": [{
      "tgId": 1,
      "direction": "encrypt",
      "testType": "AFT",
      "keyLen": 128,
      "tests": [{
        "tcId": 1,
        "iv": "1216A541024...",
        "key": "A6A8346C47...",
        "pt": "71AC206DD0A...",
        "payloadLen": 512
      }, {
        "tcId": 2,
        "iv": "9A6A276AB96...",
        "key": "7CDAE90854...",
        "pt": "6D4AEE90179...",
        "payloadLen": 178
      }]
    }, {
      "tgId": 2,
      "direction": "decrypt",
      "testType": "AFT",
      "keyLen": 128,
      "tests": [{
        "tcId": 31,
        "iv": "908543E2646...",
        "key": "CB12AAFA25B...",
        "ct": "AB99A939B688...",
        "payloadLen": 378
      }, {
        "tcId": 32,
        "iv": "AB99A939B688...",
        "key": "0569B0C6DB3...",
        "ct": "DD14A9A9A916A...",
        "payloadLen": 471
      }]
    }
  ]
}]</sourcecode>


<p id="_faf1f4c8-f2aa-fd09-9936-bdecdb2166cd">The following shows AES-CBC-CS3 AFT responses.</p>

<sourcecode id="_f652dd2d-c0bf-393e-999e-c1d2bc5d9176" lang="json">[{
  "acvVersion": "{acvp-version}"
},{
  "vsId": 2057,
  "testGroups": [{
      "tgId": 1,
      "tests": [{
          "tcId": 1,
          "ct": "E25DC48F39E4DA..."
        },
        {
          "tcId": 2,
          "ct": "360D25D820C3BA..."
        }
      ]
    },
    {
      "tgId": 2,
      "tests": [{
          "tcId": 31,
          "pt": "33346D02A070A..."
        },
        {
          "tcId": 32,
          "pt": "8F52D6E73783A..."
        }
      ]
    }
  ]
}]</sourcecode>


<p id="_619132ad-d9b5-8f36-fb44-730c307ab3c0">The following shows AES-ECB AFT and MCT request vectors.</p>

<sourcecode id="_43b5e2ab-6594-1613-13d4-bc27214e028d" lang="json">[{
  "acvVersion": "{acvp-version}"
},{
  "vsId": 2056,
  "algorithm": "ACVP-AES-ECB",
    "revision": "1.0",
  "testGroups": [{
      "tgId": 1,
            "testType": "AFT",
            "direction": "encrypt",
            "keylen": 128,
            "tests": [
                {
                    "tcId": 1,
                    "plainText": "F34481E...",
                    "key": "0000000000000..."
                },
                {
                    "tcId": 2,
                    "plainText": "9798C46...",
                    "key": "0000000000000..."
                }
      ]
    },
    {
            "tgId": 25,
            "testType": "AFT",
            "direction": "encrypt",
            "keylen": 128,
            "tests": [
                {
                    "tcId": 2079,
                    "plainText": "1C46FA6...",
                    "key": "18D3248D32630..."
                },
                {
                    "tcId": 2080,
                    "plainText": "5AC1B2D...",
                    "key": "26007B74016FA..."
                }
      ]
    },
        {
        "tgId": 31,
        "testType": "MCT",
        "direction": "encrypt",
        "keylen": 128,
        "tests": [
                {
                    "tcId": 2139,
                    "key": "9489F6FFA4A74...",
              "pt": "2D984D2F1FC178..."
                }
            ]
        },
        {
        "tgId": 34,
        "testType": "MCT",
        "direction": "decrypt",
        "keylen": 128,
        "tests": [
                {
                    "tcId": 2142
                    "key": "9489F6FFA4A74...",
              "ct": "2D984D2F1FC178..."
                }
            ]
        }
  ]
}]</sourcecode>


<p id="_c2f4efc0-76dc-66f6-fe97-e3c712dbcb18">The following shows AES-ECB AFT and MCT responses.</p>

<sourcecode id="_d39a29d7-ec7a-015a-7ce4-9a25e411f9d3" lang="json">[{
  "acvVersion": "{acvp-version}"
},{
  "vsId": 2056,
  "testGroups": [{
      "tgId": 1,
      "tests": [{
          "tcId": 1,
          "ct": "43FB8A36F168E3..."
        },
        {
          "tcId": 2,
          "ct": "27549D65BE8056..."
        }
      ]
    },
    {
      "tgId": 1,
      "tests": [{
          "tcId": 31,
          "pt": "F7F42B062BD643..."
        },
        {
          "tcId": 32,
          "pt": "EAF9AAA67B6C0E..."
        }
      ]
    },
    {
      "tgId": 3,
      "tests": [{
        "tcId": 61,
        "resultsArray": [{
            "key": "A4A8255E7...",
            "pt": "B3B8F494D0...",
            "ct": "619D5B0921..."
          },
          {
            "key": "C5357E575...",
            "pt": "619D5B0921...",
            "ct": "28CF1C5DD2..."
          }
        ]
      }]
    },
    {
      "tgId": 4,
      "tests": [{
        "tcId": 64,
        "resultsArray": [{
            "key": "4D3BE577E...",
            "ct": "0FE92E22BA...",
            "pt": "73ED187BFE..."
          },
          {
            "key": "3ED6FD0C1...",
            "ct": "73ED187BFE...",
            "pt": "59550A36E1..."
          }
        ]
      }]
    }
  ]
}]</sourcecode>


<p id="_297a1cb8-9353-52c3-9e3a-2172421fe63d">The following shows AES-OFB AFT and MCT request vectors.</p>

<sourcecode id="_dd2712e1-7770-5cf1-3732-4a222cfffccc" lang="json">[{
    "acvVersion": "{acvp-version}",
},{
  "vsId": 2060,
  "algorithm": "ACVP-AES-OFB",
    "revision": "1.0",
  "testGroups": [{
    "tgId": 1,
    "direction": "encrypt",
    "testType": "AFT",
    "keyLen": 128,
    "tests": [{
      "tcId": 1,
      "iv": "0F24B3F7808F292BC39128...",
      "key": "8ECE26B1880C4B1F0A59E...",
      "pt": "A8EF19C7182527C8CBBEE1..."
    }, {
      "tcId": 2,
      "iv": "1D1CC64F9F004192B6BE35...",
      "key": "054240C952C99D5B6E387224F...",
      "pt": "EBFA3F5F990B678AA884FB..."
    }]
  }, {
    "tgId": 2,
    "direction": "decrypt",
    "testType": "AFT",
    "keyLen": 128,
    "tests": [{
      "tcId": 31,
      "iv": "A5F67A6CB0238A5DFB166...",
      "key": "A3988AC61E9FB4820876...",
      "ct": "CF6F24E68CEC8B97CB88D..."
    }, {
      "tcId": 32,
      "iv": "4098786D4EF05639B5A20...",
      "key": "5D22EAF883FB2B1847BF...",
      "ct": "7203926F1210401F566E0..."
    }]
  }, {
    "tgId": 3,
    "direction": "encrypt",
    "testType": "MCT",
    "keyLen": 128,
    "tests": [{
      "tcId": 61,
      "iv": "39F33D19A09AAFD200D4C...",
      "key": "190316BF21DE21E96FCF...",
      "pt": "E4D7F490829710CADFD67..."
    }]
  }, {
    "tgId": 4,
    "direction": "decrypt",
    "testType": "MCT",
    "keyLen": 128,
    "tests": [{
      "tcId": 64,
      "iv": "1915C8A7AFEBB26AAE97C...",
      "key": "9489F6FFA4A7480D5B34...",
      "ct": "2D984D2F1FC178CAB247F..."
    }]
  }]
}]</sourcecode>


<p id="_2825e137-11f8-6938-f40e-96c1a4740b6c">The following shows AES-OFB AFT and MCT responses.</p>

<sourcecode id="_efe8f722-8cb5-2cd0-4a6e-5872898e7603" lang="json">[{
  "acvVersion": "{acvp-version}"
},{
  "vsId": 2060,
  "testGroups": [{
      "tgId": 1,
      "tests": [{
          "tcId": 1,
          "ct": "B5D16C4219AC38..."
        },
        {
          "tcId": 2,
          "ct": "B85AF8646842A9..."
        }
      ]
    },
    {
      "tgId": 2,
      "tests": [{
          "tcId": 31,
          "pt": "0863AB3A0CA17C..."
        },
        {
          "tcId": 32,
          "pt": "BF69D1BE04D013..."
        }
      ]
    },
    {
      "tgId": 3,
      "tests": [{
        "tcId": 61,
        "resultsArray": [{
            "key": "190316BF...",
            "iv": "39F33D19A...",
            "pt": "E4D7F4908...",
            "ct": "F55626877..."
          },
          {
            "key": "EC553038...",
            "iv": "F55626877...",
            "pt": "A04BCACFF...",
            "ct": "1EAA7DE30..."
          }
        ]
      }]
    },
    {
      "tgId": 4,
      "tests": [{
        "tcId": 64,
        "resultsArray": [{
            "key": "9489F6FF...",
            "iv": "1915C8A7A...",
            "ct": "2D984D2F1...",
            "pt": "0FE5765E5..."
          },
          {
            "key": "9B6C80A1...",
            "iv": "0FE5765E5...",
            "ct": "F29F68E2E...",
            "pt": "39AC0B63E..."
          }
        ]
      }]
    }
  ]
}]</sourcecode>


<p id="_47b91779-b5da-f9f1-cb08-e241ff606cb6">The following shows AES-CFB1 AFT and MCT request vectors.</p>

<sourcecode id="_3437baf2-72e9-e6f7-9e93-74d3a1cd2bce" lang="json">[{
  "acvVersion": "{acvp-version}"
},{
  "vsId": 2062,
  "algorithm": "ACVP-AES-CFB1",
    "revision": "1.0",
  "testGroups": [{
    "tgId": 1,
    "direction": "encrypt",
    "testType": "AFT",
    "keyLen": 128,
    "tests": [{
      "tcId": 67,
      "iv": "F34481EC3CC627BACD5DC3...",
      "key": "000000000000000000000...",
      "pt": "00",
      "payloadLen": 1
    }, {
      "tcId": 68,
      "iv": "9798C4640BAD75C7C3227D...",
      "key": "000000000000000000000...",
      "pt": "00",
      "payloadLen": 1
    }]
  }, {
    "tgId": 2,
    "direction": "decrypt",
    "testType": "AFT",
    "keyLen": 128,
    "tests": [{
      "tcId": 31,
      "iv": "C74388BA333118CDBDF578...",
      "key": "8DE5E0586C4EA40FC36C0...",
      "ct": "80",
      "payloadLen": 1
    }, {
      "tcId": 32,
      "iv": "0B1B558F3AF46F2E6AB29D...",
      "key": "E52350E8E8EE950A3C2E3...",
      "ct": "80",
      "payloadLen": 1
    }]
  }, {
    "tgId": 3,
    "direction": "encrypt",
    "testType": "MCT",
    "keyLen": 128,
    "tests": [{
      "tcId": 61,
      "iv": "D4A4A028EEA3BCA708A31E...",
      "key": "A3B254EAB3B0C8C60EF6A...",
      "pt": "80",
      "payloadLen": 1
    }]
  }, {
    "tgId": 4,
    "direction": "decrypt",
    "testType": "MCT",
    "keyLen": 128,
    "tests": [{
      "tcId": 64,
      "iv": "75BEE06DEC8A99EC0C7E7F...",
      "key": "7C87174CB990272D0F2F2...",
      "ct": "00",
      "payloadLen": 1
    }]
  }]
}]</sourcecode>


<p id="_9f80c148-6331-8e5a-9c2b-147ad11cadf6">The following shows AES-CFB1 AFT and MCT responses.</p>

<sourcecode id="_6b966dc4-e4c3-fbd0-eca1-eef195065e51" lang="json">[{
  "acvVersion": "{acvp-version}"
},{
  "vsId": 2062,
  "testGroups": [{
      "tgId": 1,
      "tests": [{
          "tcId": 67,
          "ct": "00"
        },
        {
          "tcId": 68,
          "ct": "80"
        }
      ]
    },
    {
      "tgId": 2,
      "tests": [{
          "tcId": 31,
          "pt": "00"
        },
        {
          "tcId": 32,
          "pt": "80"
        }
      ]
    },
    {
      "tgId": 3,
      "tests": [{
        "tcId": 61
        "resultsArray": [{
            "key": "A3B254EAB...",
            "iv": "D4A4A028EE...",
            "pt": "80",
            "ct": "00"
          },
          {
            "key": "8FFC23126...",
            "iv": "2C4E77F8D0...",
            "pt": "00",
            "ct": "00"
          }
        ]
      }]
    }, {
      "tgId": 4,
      "tests": [{
        "tcId": 64
        "resultsArray": [{
            "key": "7C87174CB...",
            "iv": "75BEE06DEC...",
            "ct": "00",
            "pt": "00"
          },
          {
            "key": "4B2492A3F...",
            "iv": "37A385EF42...",
            "ct": "80",
            "pt": "80"
          }
        ]
      }]
    }
  ]
}]</sourcecode>


<p id="_304b97a4-f7fb-34ae-7e99-576450ac504d">The following shows AES-CFB8 AFT and MCT request vectors.</p>

<sourcecode id="_266a0472-b736-d2ea-1f6b-84a387f2279a" lang="json">[{
  "acvVersion": "{acvp-version}"
},{
  "vsId": 2058,
  "algorithm": "ACVP-AES-CFB8",
    "revision": "1.0",
  "testGroups": [{
    "tgId": 1,
    "direction": "encrypt",
    "testType": "AFT",
    "keyLen": 128,
    "tests": [{
      "tcId": 1,
      "iv": "4EBD4CE189E6DA65026C2A...",
      "key": "5FA02465F28B76C441C7B...",
      "pt": "AF5E"
    }, {
      "tcId": 2,
      "iv": "9A8017353E953B5AEC4D78...",
      "key": "538EB5E1CBFEA61CC6B3D...",
      "pt": "6ED3759B"
    }]
  }, {
    "tgId": 2,
    "direction": "decrypt",
    "testType": "AFT",
    "keyLen": 128,
    "tests": [{
      "tcId": 31,
      "iv": "1808A0F308838AA6F9F703...",
      "key": "DB7FFD9166E4A5BACB022...",
      "ct": "41DA"
    }, {
      "tcId": 32,
      "iv": "4D75785D44B1B247788186...",
      "key": "7201F5CC867A8DCE044DB...",
      "ct": "E267BC1B"
    }]
  }, {
    "tgId": 3,
    "direction": "encrypt",
    "testType": "MCT",
    "keyLen": 128,
    "tests": [{
      "tcId": 61,
      "iv": "4B8F7DCCAD48776C746B79...",
      "key": "FD0B5848870C7431179EB...",
      "pt": "AD"
    }]
  }, {
    "tgId": 4,
    "direction": "decrypt",
    "testType": "MCT",
    "keyLen": 128,
    "tests": [{
      "tcId": 64,
      "iv": "5D2080050855970CE15DC1...",
      "key": "EA378F16FF6144EF58E67...",
      "ct": "83"
    }]
  }]
}]</sourcecode>


<p id="_02a6dd47-c879-1d42-98a5-be644c758a23">The following shows AES-CFB8 AFT and MCT responses.</p>

<sourcecode id="_39ea5caa-55d0-905f-0462-d000705432f9" lang="json">[{
  "acvVersion": "{acvp-version}"
},{
  "vsId": 2058,
  "testGroups": [{
      "tgId": 1,
      "tests": [{
          "tcId": 1,
          "ct": "181B"
        },
        {
          "tcId": 2,
          "ct": "DFF540F0"
        }
      ]
    },
    {
      "tgId": 2,
      "tests": [{
          "tcId": 31,
          "pt": "DA19"
        },
        {
          "tcId": 32,
          "pt": "B2133D11"
        }
      ]
    },
    {
      "tgId": 3,
      "tests": [{
        "tcId": 61,
        "resultsArray": [{
            "key": "FD0B58488...",
            "iv": "4B8F7DCCAD...",
            "pt": "AD",
            "ct": "3A"
          },
          {
            "key": "6B96D9FD0...",
            "iv": "969D81B585...",
            "pt": "2F",
            "ct": "BD"
          }
        ]
      }]
    },
    {
      "tgId": 4,
      "tests": [{
        "tcId": 64,
        "resultsArray": [{
            "key": "EA378F16F...",
            "iv": "5D20800508...",
            "ct": "83",
            "pt": "E6"
          },
          {
            "key": "31A0B0001A...",
            "iv": "DB973F16E5D...",
            "ct": "24",
            "pt": "0A"
          }
        ]
      }]
    }
  ]
}]</sourcecode>


<p id="_297fa10b-ebf1-6653-704e-999672e8019b">The following shows AES-CFB128 AFT and MCT request vectors.</p>

<sourcecode id="_6debbbb2-9620-eb8c-2cde-7e6dc098bf0f" lang="json">[{
  "acvVersion": "{acvp-version}"
},{
  "vsId": 2059,
  "algorithm": "ACVP-AES-CFB128",
    "revision": "1.0",
  "testGroups": [{
    "tgId": 1,
    "direction": "encrypt",
    "testType": "AFT",
    "keyLen": 128,
    "tests": [{
      "tcId": 1,
      "iv": "24AD71C9734E64B8AC458...",
      "key": "55B2490AD74A470F5CFE...",
      "pt": "FE9C6B296C58324FE8B48..."
    }, {
      "tcId": 2,
      "iv": "C0042889D189B508C5B88...",
      "key": "AB383065E16B17306B50...",
      "pt": "19F109316F7F740BD48FF..."
    }]
  }, {
    "tgId": 2,
    "direction": "decrypt",
    "testType": "AFT",
    "keyLen": 128,
    "tests": [{
      "tcId": 31,
      "iv": "40619E2F346B02D49BCEE...",
      "key": "744F5B5D7813974E0DE2...",
      "ct": "5B12E9B418F720C344698..."
    }, {
      "tcId": 32,
      "iv": "D571797F5623F8442C2CE...",
      "key": "6559CA840CF8360A8AF7...",
      "ct": "0A17C2F7A82BBDE588262..."
    }]
  }, {
    "tgId": 3,
    "direction": "encrypt",
    "testType": "MCT",
    "keyLen": 128,
    "tests": [{
      "tcId": 61,
      "iv": "4AAF5D6F6E25B8A868D8D...",
      "key": "0D0949FB32A2DC6BA267...",
      "pt": "98EE9313512D5BEC19715..."
    }]
  }, {
    "tgId": 4,
    "direction": "decrypt",
    "testType": "MCT",
    "keyLen": 128,
    "tests": [{
      "tcId": 64,
      "iv": "663D4E1B6F09FE1935E69...",
      "key": "5924D41588E2DC657514...",
      "ct": "83C1C3AF23A3F658DF142..."
    }]
  }]
}]</sourcecode>


<p id="_b1ec3292-038e-7e75-d140-9a6e3607acd2">The following shows AES-CFB128 AFT and MCT responses.</p>

<sourcecode id="_a38e4266-1b10-6b1c-f8c9-fc680ad64b04" lang="json">[{
  "acvVersion": "{acvp-version}"
},{
  "vsId": 2059,
  "testGroups": [{
      "tgId": 1,
      "tests": [{
          "tcId": 1,
          "ct": "1C9BF58FF640041F8E..."
        },
        {
          "tcId": 2,
          "ct": "2C822934B8D747336..."
        }
      ]
    },
    {
      "tgId": 2,
      "tests": [{
          "tcId": 31,
          "pt": "4BC37D318900379CD75..."
        },
        {
          "tcId": 32,
          "pt": "523057EC2E120826..."
        }
      ]
    },
    {
      "tgId": 3,
      "tests": [{
        "tcId": 61,
        "resultsArray": [{
            "key": "0D0949FB32A...",
            "iv": "4AAF5D6F6E25...",
            "pt": "98EE9313512D...",
            "ct": "7E94144C4DD4..."
          },
          {
            "key": "739D5DB77F7...",
            "iv": "7E94144C4DD4...",
            "pt": "E93E4CCB2BD1...",
            "ct": "050CE71D2451..."
          }
        ]
      }]
    },
    {
      "tgId": 4,
      "tests": [{
        "tcId": 64,
        "resultsArray": [{
            "key": "5924D41588E...",
            "iv": "663D4E1B6F09...",
            "ct": "83C1C3AF23A3...",
            "pt": "32D4D152D488..."
          },
          {
            "key": "6BF005475C6...",
            "iv": "32D4D152D488...",
            "ct": "3CC4191B8EBE...",
            "pt": "BB97ADEF9F08..."
          }
        ]
      }]
    }
  ]
}]</sourcecode>


<p id="_7ae1b3a1-4d4c-9c74-c21f-6a7d7b68ad42">The following shows AES-CTR AFT and counter request vectors.</p>

<sourcecode id="_1783f7a7-ffe8-1665-a054-221f1e397249" lang="json">[{
  "acvVersion": "{acvp-version}"
},{
  "vsId": 2066,
  "algorithm": "ACVP-AES-CTR",
    "revision": "1.0",
  "testGroups": [{
    "tgId": 1,
    "direction": "encrypt",
    "keyLen": 128,
    "testType": "AFT",
    "tests": [{
      "tcId": 1,
      "key": "E870131CE703D6514E761F95E6EE9EFB",
      "payloadLen": 128,
      "iv": "53F225D8DE97F14BFE3EC65EC3FFF7D3",
      "pt": "91074131F1F86CCD548D22A69340FF39"
    }, {
      "tcId": 2,
      "key": "2C759788A49BF060353344413A1D0FFC",
      "payloadLen": 128,
      "iv": "A4DE6D846C3AE5D5FF78163FF209AFE4",
      "pt": "BA37A61FD041F2881921D4705AD329DD"
    }]
  }, {
    "tgId": 2,
    "direction": "decrypt",
    "keyLen": 128,
    "testType": "AFT",
    "tests": [{
      "tcId": 31,
      "key": "51B4375D6FB348A55477E3C3163F59C7",
      "payloadLen": 128,
      "iv": "93893A056C6C6F866A04D657A544F1F8",
      "ct": "F2FF4B0C2E771A41525EA67AD036B459"
    }, {
      "tcId": 32,
      "key": "6A4F0B775490D554F19B5A061A362666",
      "payloadLen": 128,
      "iv": "9877D2AB7568CEF28BA945B046BA20BE",
      "ct": "09F4EEF2322BE13D75FF6DA86E8617B5"
    }]
  }, {
    "tgId": 3,
    "direction": "encrypt",
    "keyLen": 128,
    "testType": "CTR",
    "tests": [{
      "tcId": 829,
      "pt": "CE8E4B6F7C68DE5FDE3...",
      "iv": "00000000000000000000000000000039",
      "key": "3A9A8485E1B7BA1987F88F8C095257C4"
    }]
  }]
}]</sourcecode>


<p id="_0ecd407d-bf20-ab90-26cf-a47c09f705c9">The following shows AES-CTR AFT and counter responses.</p>

<sourcecode id="_d0d074ff-eda2-9ef6-6829-3d401513791d" lang="json">[{
  "acvVersion": "{acvp-version}"
},{
  "vsId": 2066,
  "testGroups": [{
      "tgId": 1,
      "tests": [{
          "tcId": 1,
          "ct": "3AF64C7037EE4813D8..."
        },
        {
          "tcId": 2,
          "ct": "2DFDFCDDC4CFD3CBCE..."
        }
      ]
    },
    {
      "tgId": 2,
      "tests": [{
          "tcId": 31,
          "pt": "349012E0807CA95CA5..."
        },
        {
          "tcId": 32,
          "pt": "2986D4B3FB208F0189..."
        }
      ]
    },
    {
      "tgId": 3,
      "tests": [{
        "tcId": 829,
        "ct": "676EC652D5B095136..."
      }]
    }
  ]
}]</sourcecode>


<p id="_69f8c5e5-e943-277b-b26c-3e37947cf40f">The following shows AES-CTR RFC3686 request vectors with internal iv generation.</p>

<sourcecode id="_4e28eb6e-bc38-32f1-0d48-03c528ec90ee" lang="json">{
	"vsId": 1,
	"algorithm": "ACVP-AES-CTR",
	"revision": "1.0",
	"testGroups": [{
			"tgId": 1,
			"testType": "AFT",
			"direction": "encrypt",
			"keyLen": 128,
			"tests": [{
					"tcId": 12,
					"pt": "3687D763A3EEC3E3099678068F3CDEB4C7B12BA83C50CCB744D8945C0DB0078E",
					"payloadLen": 256,
					"key": "208A474D7567BF87A1A62D0767724547"
				},
				{
					"tcId": 13,
					"pt": "F96CBC81F0B876A463FD467C5FBA19791A1BE394DF61C883BE7ECB67270846A1E345991F81DAAE4532DEFCFCCDC69BA0",
					"payloadLen": 384,
					"key": "629EFE9A344A081CD4E4D758C1E759BF"
				}
			]
		},
		{
			"tgId": 3,
			"testType": "AFT",
			"direction": "decrypt",
			"keyLen": 128,
			"tests": [{
					"tcId": 62,
					"payloadLen": 256,
					"ct": "0306E3B1F1719CD7C64296F52B06F246CAA463BE19309AC2CF842ADE0B0BCD21",
					"iv": "14FD559C120735498CE09BA800000001",
					"key": "4D94B2155A6322DB76878C71763EE544"
				},
				{
					"tcId": 63,
					"payloadLen": 384,
					"ct": "474AB381112D9FB530BC2E0B2B7E6D139243BC6B1D23D21508E18E82D85218DB10C3C4DABE278B2D334860BEF96B619C",
					"iv": "8E0759C1B24B8CCBDE7D51C100000001",
					"key": "BE4AD76083C6A471803FFE704B6F194D"
				}
			]
		}
	]
}</sourcecode>


<p id="_3c25fc50-57ce-5d54-4d39-a46d6737e568">The following shows AES-CTR RFC3686 with internal iv generation responses.</p>

<sourcecode id="_263e8569-ecc7-4ab1-4589-e718f4bbd747" lang="json">{
	"vsId": 0,
	"algorithm": "ACVP-AES-CTR",
	"mode": "",
	"revision": "1.0",
	"isSample": true,
	"testGroups": [{
			"tgId": 1,
			"tests": [{
					"tcId": 12,
					"ct": "00F5E67B3C8C6038D907D5866866DDBE583CF90DD8AE37159D1CC0235EEA6175",
					"iv": "992AA770156A7E1AB58BAFCA00000001"
				},
				{
					"tcId": 13,
					"ct": "7EA7DC8A993C1EBA61239CFBBBA4244DB185C4F8F248CCF1F1AF7DD7993B1AE5EE05D51AC58D453FE32EC59629F011EC",
					"iv": "F083A4495B66E5DF0607BF9200000001"
				}
			]
		},
		{
			"tgId": 3,
			"tests": [{
					"tcId": 62,
					"pt": "0FC0CAF36921D2803DC9AEBFD5473124D77969BA9FF813861332A3E77E9265C1"
				},
				{
					"tcId": 63,
					"pt": "9C0DA9C01AEB0B4A42E99776A4E2DFE8E50A7A602E257C7D2EB3C79A529BAA4AC130ADBE6537CB39AA06850044D22547"
				}
			]
		}
	]
}</sourcecode>


<p id="_b67171a3-f709-5060-b36d-1a860873d425">The following shows AES-CTR RFC3686 request vectors with external iv generation.</p>

<sourcecode id="_2f6e6963-b2d0-6bb6-07db-d1104a468409" lang="json">{
	"vsId": 1,
	"algorithm": "ACVP-AES-CTR",
	"revision": "1.0",
	"testGroups": [{
			"tgId": 1,
			"testType": "AFT",
			"direction": "encrypt",
			"keyLen": 128,
			"tests": [{
					"tcId": 12,
					"pt": "3687D763A3EEC3E3099678068F3CDEB4C7B12BA83C50CCB744D8945C0DB0078E",
          "iv": "992AA770156A7E1AB58BAFCA00000001",
					"payloadLen": 256,
					"key": "208A474D7567BF87A1A62D0767724547"
				},
				{
					"tcId": 13,
					"pt": "F96CBC81F0B876A463FD467C5FBA19791A1BE394DF61C883BE7ECB67270846A1E345991F81DAAE4532DEFCFCCDC69BA0",
          "iv": "F083A4495B66E5DF0607BF9200000001",
					"payloadLen": 384,
					"key": "629EFE9A344A081CD4E4D758C1E759BF"
				}
			]
		},
		{
			"tgId": 3,
			"testType": "AFT",
			"direction": "decrypt",
			"keyLen": 128,
			"tests": [{
					"tcId": 62,
					"payloadLen": 256,
					"ct": "0306E3B1F1719CD7C64296F52B06F246CAA463BE19309AC2CF842ADE0B0BCD21",
					"iv": "14FD559C120735498CE09BA800000001",
					"key": "4D94B2155A6322DB76878C71763EE544"
				},
				{
					"tcId": 63,
					"payloadLen": 384,
					"ct": "474AB381112D9FB530BC2E0B2B7E6D139243BC6B1D23D21508E18E82D85218DB10C3C4DABE278B2D334860BEF96B619C",
					"iv": "8E0759C1B24B8CCBDE7D51C100000001",
					"key": "BE4AD76083C6A471803FFE704B6F194D"
				}
			]
		}
	]
}</sourcecode>


<p id="_f6cd6ba8-0cd9-c18a-d379-57063da58d6c">The following shows AES-CTR RFC3686 with external iv generation responses.</p>

<sourcecode id="_ba6cb50b-ad97-b07f-86ab-98978406786e" lang="json">{
	"vsId": 0,
	"algorithm": "ACVP-AES-CTR",
	"mode": "",
	"revision": "1.0",
	"isSample": true,
	"testGroups": [{
			"tgId": 1,
			"tests": [{
					"tcId": 12,
					"ct": "00F5E67B3C8C6038D907D5866866DDBE583CF90DD8AE37159D1CC0235EEA6175"
				},
				{
					"tcId": 13,
					"ct": "7EA7DC8A993C1EBA61239CFBBBA4244DB185C4F8F248CCF1F1AF7DD7993B1AE5EE05D51AC58D453FE32EC59629F011EC"
				}
			]
		},
		{
			"tgId": 3,
			"tests": [{
					"tcId": 62,
					"pt": "0FC0CAF36921D2803DC9AEBFD5473124D77969BA9FF813861332A3E77E9265C1"
				},
				{
					"tcId": 63,
					"pt": "9C0DA9C01AEB0B4A42E99776A4E2DFE8E50A7A602E257C7D2EB3C79A529BAA4AC130ADBE6537CB39AA06850044D22547"
				}
			]
		}
	]
}</sourcecode>


<p id="_6c9beca6-e276-77b4-b422-0ce45897ddcc">The following shows AES-XPN AFT request vectors.</p>

<sourcecode id="_8e69c7ae-b7eb-68f7-e722-8738d26776df" lang="json">[{
  "acvVersion": "{acvp-version}"
},{
  "algorithm": "ACVP-AES-XPN",
  "revision": "1.0",
  "vsId": 1,
  "testGroups": [
    {
      "tgId": 1,
      "testType": "AFT",
      "direction": "encrypt",
      "keyLen": 128,
      "ivLen": 96,
      "ivGen": "external",
      "ivGenMode": "8.2.2",
      "saltLen": 96,
      "saltGen": "external",
      "payloadLen": 128,
      "aadLen": 120,
      "tagLen": 64,
      "tests": [
        {
          "tcId": 1,
          "plainText": "4849547C706231E248148...",
          "key": "4A23FDD31C1B321C1D3E1A74ECA9585A",
          "aad": "6B55B1B784180DE574F7709E480273",
          "iv": "A05134709620EAB47DE77FCB",
          "salt": "F0C77CB78D20BBDCF3A3C5EB"
        },
        {
          "tcId": 2,
          "plainText": "BF1D8173DA7F0273B7DA8...",
          "key": "254E5AFE555D807E5ECC2FFAB2E3E107",
          "aad": "304A2EC82959B419B8852F5C6A09D1",
          "iv": "1BA39F6A71F075FEB72B91D6",
          "salt": "AF44CD3E80088B8FD252AAB0"
        }
      ]
    }
  ]
}]</sourcecode>


<p id="_5c3a2200-ea7c-7302-8b0a-aedc8ff425f5">The following shows AES-XPN AFT responses.</p>

<sourcecode id="_fc1d9251-1ea1-1514-4bd4-61358543039d" lang="json">[{
  "acvVersion": "{acvp-version}"
},{
  "vsId": 1,
  "testGroups": [
    {
      "tgId": 1,
      "tests": [
        {
          "tcId": 1,
          "testPassed": false
        },
        {
          "tcId": 2,
          "cipherText": "D3104958599BE7BB9E672F...",
          "tag": "48408062AA84718B"
        }
      ]
    }
  ]
}]</sourcecode>


<p id="_50f10ef0-2238-a7a6-6873-5a4598f74046">The following shows AES-XTS 1.0 AFT request vectors.</p>

<sourcecode id="_b9460a97-c91e-6b1a-ffef-1fd40de936c2" lang="json">[{
  "acvVersion": "{acvp-version}"
},{
  "vsId": 2065,
  "algorithm": "ACVP-AES-XTS",
    "revision": "1.0",
  "testGroups": [{
    "tgId": 1,
    "testType": "AFT",
    "direction": "encrypt",
    "keyLen": 128,
    "tweakMode": "hex",
    "payloadLen": 65536,
    "tests": [{
      "tcId": 1,
      "key": "2866E3659E11C7890313EDAC9...",
      "tweakValue": "C7850E1C99DA28C5E7...",
      "pt": "03F912D53EA625A7D206002864..."
    }, {
      "tcId": 2,
      "key": "98B66C26FF9E4EF2BCBC3A212...",
      "tweakValue": "57B127C8DAD60138C5...",
      "pt": "20D7E083519F39DB185CDA2397..."
    }]
  }, {
    "tgId": 2,
    "testType": "AFT",
    "direction": "decrypt",
    "keyLen": 128,
    "tweakMode": "hex",
    "payloadLen": 65536,
    "tests": [{
      "tcId": 101,
      "key": "BB626CADBBFB907AC5C795080...",
      "tweakValue": "8B7E45A9200BDC72EB...",
      "ct": "B85B91029478C3E02EBC619EC7..."
    }, {
      "tcId": 102,
      "key": "9B859C56C1542C19F29AA7A4F...",
      "tweakValue": "99FE35549768F476E2...",
      "ct": "53CEE8379B03A38E33CCCC6EA0..."
    }]
  }]
}]</sourcecode>


<p id="_c0554745-e602-8ece-70c1-a360e1536774">The following shows AES-XTS 1.0 AFT responses.</p>

<sourcecode id="_ed4710cf-8150-f370-8f3c-a301d9bdd77f" lang="json">[{
  "acvVersion": "{acvp-version}"
},{
  "vsId": 2065,
  "testGroups": [{
      "tgId": 1,
      "tests": [{
          "tcId": 1,
          "ct": "97ED8057287E4FD0E1..."
        },
        {
          "tcId": 2,
          "ct": "BCACA25E6A625DB16..."
        }
      ]
    },
    {
      "tgId": 2,
      "tests": [{
          "tcId": 101,
          "pt": "8AD40CBE09CD92FB0..."
        },
        {
          "tcId": 102,
          "pt": "07DD39402F4D427D7..."
        }
      ]
    }
  ]
}]</sourcecode>


<p id="_6c3d01a4-0dbb-d3cd-bda3-4be9b925fce5">The following shows AES-XTS 2.0 AFT request vectors.</p>

<sourcecode id="_1b644f87-2806-30c2-8c95-155699f15a47" lang="json">[{
  "acvVersion": "{acvp-version}"
},{
  "vsId": 2065,
  "algorithm": "ACVP-AES-XTS",
    "revision": "2.0",
  "testGroups": [{
    "tgId": 1,
    "testType": "AFT",
    "direction": "encrypt",
    "keyLen": 128,
    "tweakMode": "hex",
    "tests": [{
      "tcId": 1,
      "key": "2866E3659E11C7890313EDAC9...",
      "tweakValue": "C7850E1C99DA28C5E7...",
      "pt": "03F912D53EA625A7D206002864...",
      "payloadLen": 2048,
      "dataUnitLen": 1024
    }, {
      "tcId": 2,
      "key": "98B66C26FF9E4EF2BCBC3A212...",
      "tweakValue": "57B127C8DAD60138C5...",
      "pt": "20D7E083519F39DB185CDA2397...",
      "payloadLen": 2048,
      "dataUnitLen": 1024
    }]
  }, {
    "tgId": 2,
    "testType": "AFT",
    "direction": "decrypt",
    "keyLen": 128,
    "tweakMode": "hex",
    "tests": [{
      "tcId": 101,
      "key": "BB626CADBBFB907AC5C795080...",
      "tweakValue": "8B7E45A9200BDC72EB...",
      "ct": "B85B91029478C3E02EBC619EC7...",
      "payloadLen": 2048,
      "dataUnitLen": 1024
    }, {
      "tcId": 102,
      "key": "9B859C56C1542C19F29AA7A4F...",
      "tweakValue": "99FE35549768F476E2...",
      "ct": "53CEE8379B03A38E33CCCC6EA0...",
      "payloadLen": 2048,
      "dataUnitLen": 1024
    }]
  }]
}]</sourcecode>


<p id="_34bea4f9-a427-1f48-28ba-8202ec2596b3">The following shows AES-XTS 2.0 AFT responses.</p>

<sourcecode id="_e9fd9748-0e06-427e-2086-45b5ce2243fe" lang="json">[{
  "acvVersion": "{acvp-version}"
},{
  "vsId": 2065,
  "testGroups": [{
      "tgId": 1,
      "tests": [{
          "tcId": 1,
          "ct": "97ED8057287E4FD0E1..."
        },
        {
          "tcId": 2,
          "ct": "BCACA25E6A625DB16..."
        }
      ]
    },
    {
      "tgId": 2,
      "tests": [{
          "tcId": 101,
          "pt": "8AD40CBE09CD92FB0..."
        },
        {
          "tcId": 102,
          "pt": "07DD39402F4D427D7..."
        }
      ]
    }
  ]
}]</sourcecode>


<p id="_e6b7ed2f-5be2-095e-4094-ec7e8d64ee79">The following shows AES-KW request vectors.</p>

<sourcecode id="_3d76e768-a78c-908d-d22c-d97d7484fe75" lang="json">[{
  "acvVersion": "{acvp-version}"
},{
  "vsId": 2063,
  "algorithm": "ACVP-AES-KW",
    "revision": "1.0",
  "testGroups": [{
    "tgId": 1,
    "testType": "AFT",
    "direction": "encrypt",
    "kwCipher": "cipher",
    "keyLen": 128,
    "payloadLen": 192,
    "tests": [{
      "tcId": 1,
      "key": "71389B09A3EA1AAE1F265CD3DE8FABB7",
      "pt": "3D90BE277A057C024A485F02486D733..."
    }, {
      "tcId": 2,
      "key": "B75DB6D92A66A3E8E991FEDBA3DAACA7",
      "pt": "3323EC2514C2902C424ABE968CA09FD..."
    }]
  }, {
    "tgId": 2,
    "testType": "AFT",
    "direction": "decrypt",
    "kwCipher": "cipher",
    "keyLen": 128,
    "payloadLen": 192,
    "tests": [{
      "tcId": 901,
      "key": "E5319E0061F89DE08CB590EA...",
      "ct": "1DE720863C759EC0682429AA4..."
    }, {
      "tcId": 902,
      "key": "D16C5C5FDE26C1962342AACF...",
      "ct": "F2EC43D61F2F356E1B2850D7C..."
    }]
  }]
}]</sourcecode>


<p id="_4f4391a0-a9b3-aef1-2a2f-914714f4e63f">The following shows AES-KW responses.</p>

<sourcecode id="_21ac38c9-39ce-9827-e149-7b3818df947e" lang="json">[{
  "acvVersion": "{acvp-version}"
},{
  "vsId": 2063,
  "testGroups": [{
      "tgId": 1,
      "tests": [{
          "tcId": 1,
          "ct": "BD009027DA8F4176B..."
        },
        {
          "tcId": 2,
          "ct": "B8BB3D3C76FDFD359..."
        }
      ]
    },
    {
      "tgId": 2,
      "tests": [{
          "tcId": 901,
          "pt": "A6BA646D0D33808AB..."
        },
        {
          "tcId": 902,
          "pt": "B40AC5F6ED5A706CB..."
        }
      ]
    }
  ]
}]</sourcecode>


<p id="_78f80f9e-5080-bf96-15be-bb64a0b3a6c2">The following shows AES-KWP request vectors.</p>

<sourcecode id="_b86178d0-abeb-30d2-1192-cf260b9412c8" lang="json">[{
  "acvVersion": "{acvp-version}"
},{
  "vsId": 2064,
  "algorithm": "ACVP-AES-KWP",
    "revision": "1.0",
  "testGroups": [{
    "tgId": 1,
    "testType": "AFT",
    "direction": "encrypt",
    "kwCipher": "cipher",
    "keyLen": 128,
    "payloadLen": 808,
    "tests": [{
      "tcId": 1,
      "key": "EE3B424525EE1B2D0B8CDC4CCB15F018",
      "pt": "269701A6DE9A2E8A8B2E28027..."
    }, {
      "tcId": 2,
      "key": "579C5EBBD1D07F828251FE567326C5DD",
      "pt": "634945E0FD1FA2E733CD60462..."
    }]
  }, {
    "tgId": 2,
    "testType": "AFT",
    "direction": "decrypt",
    "kwCipher": "cipher",
    "keyLen": 128,
    "payloadLen": 808,
    "tests": [{
      "tcId": 301,
      "key": "0EB557E0F938E08662EB9EDAAE05725F",
      "ct": "1BB87C360F2B644CD0BC75369..."
    }, {
      "tcId": 302,
      "key": "644E2869C9698ADBB4417A8ED65748DC",
      "ct": "583741B7624759F37EED76F76..."
    }]
  }]
}]</sourcecode>


<p id="_5072e38b-6492-d2bf-a5ef-890c771bb355">The following shows AES-KWP responses.</p>

<sourcecode id="_26416eda-78d6-d772-a51d-f1e62ea24b1b" lang="json">[{
  "acvVersion": "{acvp-version}"
},{
  "vsId": 2064,
  "testGroups": [{
      "tgId": 1,
      "tests": [{
          "tcId": 1,
          "ct": "58385237F04FD67F0..."
        },
        {
          "tcId": 2,
          "ct": "0D6FE2D0A8605981E..."
        }
      ]
    },
    {
      "tgId": 2,
      "tests": [{
          "tcId": 300,
          "ct": "D2A239230130B6077..."
        },
        {
          "tcId": 301,
          "testPassed": false
        }
      ]
    }
  ]
}]</sourcecode>


<p id="_76836717-5bd9-15de-e5ae-c51ec868eb1c">The following shows AES-FF1 request vectors.</p>

<sourcecode id="_40a9d669-c1e8-4966-f61c-cfd043e67719" lang="json">{
  "vsId": 42,
  "algorithm": "ACVP-AES-FF1",
  "revision": "1.0",
  "isSample": false,
  "testGroups": [{
      "tgId": 1,
      "testType": "AFT",
      "direction": "encrypt",
      "keyLen": 128,
      "alphabet": "0123456789",
      "radix": 10,
      "tests": [{
          "tcId": 1,
          "tweak": "",
          "tweakLen": 0,
          "pt": "5989891000",
          "key": "FA407521178EDB931997C9EF5FF4F8BB"
        },
        {
          "tcId": 2,
          "tweak": "CB81CF732B22A983B2C6E584726C9F59",
          "tweakLen": 128,
          "pt": "60454384602180796680544707896451618557756152702734587161",
          "key": "E3EFDAF1ABEA7863A0A95F833420D083"
        }
      ]
    },
    {
      "tgId": 2,
      "testType": "AFT",
      "direction": "encrypt",
      "keyLen": 128,
      "alphabet": "abcdefghijklmnopqrstuvwxyz",
      "radix": 26,
      "tests": [{
          "tcId": 26,
          "tweak": "",
          "tweakLen": 0,
          "pt": "zlwagydvpt",
          "key": "D263686051802ECAE0217F4123000376"
        },
        {
          "tcId": 27,
          "tweak": "994C168B9F6225C4BC12A83561C0E1A6",
          "tweakLen": 128,
          "pt": "uxmdsdjbsywthsvzjlfcwlmpkarnaeoirtihgfuu",
          "key": "53CA14AF6F97612C96FFAA2BA8D88C44"
        }
      ]
    },
    {
      "tgId": 10,
      "testType": "AFT",
      "direction": "decrypt",
      "keyLen": 128,
      "alphabet": "0123456789",
      "radix": 10,
      "tests": [{
          "tcId": 226,
          "tweak": "",
          "tweakLen": 0,
          "key": "82DD08D210EB34C9743EC102E058CEE3",
          "ct": "8416752187"
        },
        {
          "tcId": 227,
          "tweak": "03130ABD79425EEC806617434C60B2FE",
          "tweakLen": 128,
          "key": "E6265A6503AD2F4F13FCCF8B8AD64638",
          "ct": "26379838628949309091263132236041132252667968597137110245"
        }
      ]
    }
  ]
}</sourcecode>


<p id="_ba0a0c2b-77b1-0ebf-6541-404a55604f2c">The following shows AES-FF1 responses.</p>

<sourcecode id="_a6e414ad-2fe2-6d32-5bd8-b075ff030f75" lang="json">{
  "vsId": 42,
  "algorithm": "ACVP-AES-FF1",
  "revision": "1.0",
  "isSample": false,
  "testGroups": [{
      "tgId": 1,
      "tests": [{
          "tcId": 1,
          "ct": "4896500946"
        },
        {
          "tcId": 2,
          "ct": "69747385701019112488208222409900597881359856066248208863"
        }
      ]
    },
    {
      "tgId": 2,
      "tests": [{
          "tcId": 26,
          "ct": "odmrhltvlj"
        },
        {
          "tcId": 27,
          "ct": "lifbvigwtcwmkiucogaztntcagaqqtoioagwsgef"
        }
      ]
    },
    {
      "tgId": 18,
      "tests": [{
          "tcId": 426,
          "pt": "/HN6wiTZoc"
        },
        {
          "tcId": 427,
          "pt": "NyFsYHaUg0000JcSKJhRvOe0000E"
        }
      ]
    }
  ]
}</sourcecode>


<p id="_9f1a8d65-9606-a5cc-d6d1-5c2f410c6fcd">The following shows AES-FF3-1 request vectors.</p>

<sourcecode id="_6990a6fd-a84b-3e1d-105e-3ecea9319091" lang="json">{
  "vsId": 42,
  "algorithm": "ACVP-AES-FF3-1",
  "revision": "1.0",
  "isSample": false,
  "testGroups": [
    {
      "tgId": 1,
      "testType": "AFT",
      "direction": "encrypt",
      "keyLen": 128,
      "alphabet": "0123456789",
      "radix": 10,
      "tests": [
        {
          "tcId": 1,
          "tweak": "CBD09280979564",
          "tweakLen": 56,
          "pt": "3992520240",
          "key": "2DE79D232DF5585D68CE47882AE256D6"
        },
        {
          "tcId": 2,
          "tweak": "C4E822DCD09F27",
          "tweakLen": 56,
          "pt": "60761757463116869318437658042297305934914824457484538562",
          "key": "01C63017111438F7FC8E24EB16C71AB5"
        }
	  ]
	}
  ]
}</sourcecode>


<p id="_b23cdb57-2a7a-3e6f-7eb8-6c1a5a549f93">The following shows AES-FF-31 responses.</p>

<sourcecode id="_3b7a5559-c0d7-7278-e309-3a0a1d884d4d" lang="json">{
  "vsId": 42,
  "algorithm": "ACVP-AES-FF3-1",
  "revision": "1.0",
  "isSample": false,
  "testGroups": [
    {
      "tgId": 1,
      "tests": [
        {
          "tcId": 1,
          "ct": "8901801106"
        },
        {
          "tcId": 2,
          "ct": "35637144092473838892796702739628394376915177448290847293"
        }
	  ]
	}
  ]
}</sourcecode>

</annex><annex id="app-tdes1-results-ex" obligation="normative">
<title>Example TDES Test and Results JSON Object</title>
<p id="_b7f276e7-0e13-944b-cf23-2711bf1952b7">The following is a example JSON object for test vectors sent from the ACVP server to the crypto module for an TDES-ECB algorithm functional test.</p>

<sourcecode id="_9439ffaa-5f6a-e75c-903e-625a20859ac6" lang="json">[{
  "acvVersion": "{acvp-version}"
},{
    "vsId": 1564,
    "algorithm": "ACVP-TDES-ECB",
    "revision": "1.0",
    "testGroups": [{
        "tgId": 1,
        "direction": "encrypt",
        "testType": "AFT",
        "tests": [{
            "tcId": 236,
            "key1": "5BE5B5FE9BB3E36D",
            "key2": "26E92C6DD35D7AB3",
            "key3": "4F89ADAD15D62FE3",
            "pt": "7119CCA0648787AE"
        }, {
            "tcId": 237,
            "key1": "2C7015EC2C044591",
            "key2": "230D79A1D0F2469D",
            "key3": "7A9EF7FDC4383131",
            "pt": "772923F53BA2EA60E7AE232..."
        }]
    }]
}]</sourcecode>


<p id="_e8a09c3c-38ee-6667-8913-fa717d572a24">The following is a example JSON object for test results sent from the crypto module to the ACVP server for an TDES-ECB algorithm functional test.</p>

<sourcecode id="_799a412e-64ec-d92f-5521-1eb80b903e32" lang="json">[{
  "acvVersion": "{acvp-version}"
},{
    "vsId": 1564,
    "testGroups": [{
        "tgId": 1,
        "tests": [{
                "tcId": 236,
                "ct": "1E85F8256575B8B1"
            },
            {
                "tcId": 237,
                "ct": "BEFD0E02088D48648FEBAAF..."
            }
        ]
    }]
}]</sourcecode>


<p id="_a21969ae-a89a-afc8-39fe-f7bba5cc1255">The following is a example JSON object for test vectors sent from the ACVP server to the crypto module for the TDES-CFB1 algorithm functional test.</p>

<sourcecode id="_e2f121ab-8cfe-6862-f22f-ab035b1a70f5" lang="json">[{
  "acvVersion": "{acvp-version}"
},{
    "vsId": 1564,
    "algorithm": "ACVP-TDES-CFB1",
    "revision": "1.0",
    "testGroups": [{
            "tgId": 1,
            "direction": "encrypt",
            "testType": "AFT",
            "keyingOption": 1,
            "tests": [{
                "tcId": 1,
                "key1": "1046913489980131",
                "key2": "1046913489980131",
                "key3": "1046913489980131",
                "pt": "00",
                "payloadLen": 1,
                "iv": "0000000000000000"
            }]
        },
        {
            "tgId": 2,
            "direction": "encrypt",
            "testType": "MCT",
            "keyingOption": 1,
            "tests": [{
                "tcId": 961,
                "key1": "337C857E01DE54B7",
                "key2": "F106296828FCCA0D",
                "key3": "2F65BF5A655FFFA3",
                "pt": "80",
                "payloadLen": 1,
                "iv": "0C4CCC40D9C8C5D7"
            }]
        }
    ]
}]</sourcecode>


<p id="_2164999a-02d6-58a6-b735-ccab617dd961">The following is a example JSON object for test results sent from the crypto module to the ACVP server for an TDES-CFB1 algorithm functional test.</p>

<sourcecode id="_22fa13e1-f0eb-d18f-615a-e7836d8102f9" lang="json">[{
  "acvVersion": "{acvp-version}"
},{
    "vsId": 1564,
    "testGroups": [{
            "tgId": 1,
            "tests": [{
                "tcId": 1,
                "ct": "00"
            }]
        },
        {
            "tgId": 2,
            "tests": [{
                "tcId": 961
                "resultsArray": [{
                        "key1": "337C857E01DE54B7",
                        "key2": "F106296828FCCA0D",
                        "key3": "2F65BF5A655FFFA3",
                        "pt": "80",
                        "ct": "00",
                        "iv": "0C4CCC40D9C8C5D7"
                    },
                    {
                        "key1": "290E7326C8833420",
                        "key2": "8FE6BF67EF0B2325",
                        "key3": "3E2976E05EB0646D",
                        "pt": "80",
                        "ct": "80",
                        "iv": "1A73F758C95C6196"
                    }
                ]
            }]
        }
    ]
}]</sourcecode>

</annex><annex id="app-tdes2-results-ex" obligation="normative">
<title>Example TDES MCT Test and Results JSON Object</title>
<p id="_24639563-13c1-8201-eb58-e577e59de080">The following is a example JSON object for test vectors sent from the ACVP server to the crypto module for an TDES-ECB Monte Carlo test.</p>

<sourcecode id="_573706da-2c25-53ff-c9f9-2b9fb658c1c7" lang="json">[{
  "acvVersion": "{acvp-version}"
},{
    "vsId": 1564,
    "algorithm": "ACVP-TDES-ECB",
    "revision": "1.0",
    "testGroups": [{
        "tgId": 1,
        "direction": "encrypt",
        "testType": "MCT",
        "tests": [{
            "tcId": 492,
            "key1": "0EABB0E6B0F129D5",
            "key2": "DF61EAD07315DA37",
            "key3": "EFA2B6A252A18694",
            "ct": "2970B363C1461FAF"
        }]
    }]
}]</sourcecode>


<p id="_21fc122b-02da-e2fe-822e-e17e43944d76">The following is a example JSON object for test results sent from the crypto module to the ACVP server for an TDES-ECB Monte Carlo test, only 2 iterations shown for brevity. For MCT results of each iteration are fed into the next iteration.  Therefore the results carry all fields to assist in any failure diagnosis.</p>

<sourcecode id="_83f76d4f-1d22-b07a-d83b-ccee623a2c6a" lang="json">[{
  "acvVersion": "{acvp-version}"
},{
    "vsId": 1564,
    "testGroups": [{
        "tgId": 1,
        "tests": [{
            "tcId": 492,
            "resultsArray": [{
                    "key1": "0EABB0E6B0F129D5",
                    "key2": "DF61EAD07315DA37",
                    "key3": "EFA2B6A252A18694",
                    "ct": "2970B363C1461FAF",
                    "pt": "40F806F9DE3466C0"
                },
                {
                    "key1": "4F52B61F6EC4...",
                    "key2": "2FEC373726FE...",
                    "key3": "37B57029B65B...",
                    "ct": "40F806F9DE3466C0",
                    "pt": "A498B9748F2FB1E5"
                }
            ]
        }]
    }]
}]</sourcecode>

</annex>
</nist-standard>
